//  OJ: 洛谷
//  提交ID: 140210473
//  题目ID: T219542
#include<iostream>
#include<vector>
#include <algorithm>
#include<queue>
using namespace std;
const int MAX = 10010;
struct Store {
    int profit;
    int days;

};

bool cmp(Store a, Store b)
{
    return a.days < b.days;
}
bool operator < (const Store& a, const Store& b) { 
    return a.profit > b.profit;
}
Store s[10010];
int n;
priority_queue<Store> q;
int main() {
	ios_base::sync_with_stdio(false);
	while(cin>>n){
        while(!q.empty())
            q.pop();
        for(int i = 0;i < n;i++){
            cin >> s[i].profit >> s[i].days;
        }
        sort(s,s+n,cmp);
        for(int i = 0;i < n;i++)
        {
            if(q.empty()) q.push(s[i]);
            else if(s[i].days > (int)q.size()) q.push(s[i]);
            else if(q.top().profit < s[i].profit){
                q.pop();
                q.push(s[i]);
            }
        }
        int ans = 0;
        while(!q.empty()){
            ans += q.top().profit;
            q.pop();
        }
        cout << ans <<endl;
    }
    return 0;
}