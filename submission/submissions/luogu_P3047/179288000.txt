//  OJ: 洛谷
//  提交ID: 179288000
//  题目ID: P3047
#include<bits/stdc++.h>
using namespace std;
struct Edge {
	int v, nxt;
}edge[200000 + 10];
int head[100000 + 10], idx;
void add(int u, int v) {
	edge[++idx] = { v,head[u] };
	head[u] = idx;
}
int n, k, f[100000 + 10], v[100000 + 10], c[100000 + 10], m[100000 + 10][20 + 5], ans[100000 + 10];
void initt(int k, int fa) {
	v[k] = v[f[k]] + c[k];
	for (int i = head[k]; i; i = edge[i].nxt) {
		if (edge[i].v == fa) continue;
		f[edge[i].v] = k;
		initt(edge[i].v, k);
	}
}
void clac(int now, int fa) {
	int tmp = now;
	if (now ^ 1) for (int i = 1; i <= k; ++i) {
		// tmp : from now to father k^th
		tmp = f[tmp];
		m[tmp][i] += c[now];
		if (tmp == 1) break;
	}
	for (int i = head[now]; i; i = edge[i].nxt) {
		if (edge[i].v == fa) continue;
		clac(edge[i].v, now);
	}
}
void clac2(int now, int fa) {
	int tmp = now;
	if (now ^ 1) for (int i = 0; i < k; ++i) {
		// tmp : from now to father k^th
		ans[now] += m[f[tmp]][k - i - 1] - m[tmp][k - i - 2];
		tmp = f[tmp];
		if (tmp == 1) break;
	}
	for (int i = head[now]; i; i = edge[i].nxt) {
		if (edge[i].v == fa) continue;
		clac2(edge[i].v, now);
	}
}
int main() {
	ios_base::sync_with_stdio(false);
	cin >> n >> k;
	for (int i = 1, u, v; i < n; ++i) cin >> u >> v, add(u, v), add(v, u);
	for (int i = 1; i <= n; ++i) cin >> c[i];
	f[1] = 1;
	initt(1, -1);
	clac(1, -1);
//	for (int i = 1; i <= n; i++, cout << endl) for (int j = 0; j <= k; ++j) cout << m[i][j] << ' '; cout << endl;
	for (int i = 1; i <= n; ++i) {
		m[i][0] = c[i];
		for (int j = 1; j <= k; ++j)
			m[i][j] += m[i][j - 1];
	}
//	for (int i = 1; i <= n; i++, cout << endl) for (int j = 0; j <= k; ++j) cout << m[i][j] << ' ';
	clac2(1, -1);
	for (int i = 1; i <= n; ++i) cout << m[i][k] + ans[i] << endl;
	return 0;
}