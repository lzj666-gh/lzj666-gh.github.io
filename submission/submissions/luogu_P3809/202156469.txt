//  OJ: 洛谷
//  提交ID: 202156469
//  题目ID: P3809
#include<bits/stdc++.h>
#include<array>
using namespace std;
string s;
int n, w, sa[2000000 + 5];
int rk[2000000 + 5], oldrk[2000000 + 5];
void sort() {
	static int tax[1000000 + 5];
	memset(tax, 0, sizeof tax);
	for (int i = 1; i <= n; ++i) ++tax[rk[i]];
	for (int i = 1; i <= 1000000; ++i) tax[i] += tax[i - 1];
	for (int i = n; i; --i) sa[tax[rk[oldrk[i]]]--] = oldrk[i];
}
int main() {
	cin.tie(0)->sync_with_stdio(false);
	cin >> s;
	n = s.size();
	s = ' ' + s;
	for (int i = 1; i <= n; ++i) sa[i] = i, rk[i] = s[i];
	for (w = 1; w < n; w <<= 1) {
		int p = 0;
		for (int i = 1; i <= w; ++i) oldrk[++p] = n - w + i;
		for (int i = 1; i <= n; ++i) if (sa[i] > w) oldrk[++p] = sa[i] - w;
		sort();
		memcpy(oldrk, rk, n * 4 + 4);
		for (int i = 1, p = 0; i <= n; ++i) {
			if (oldrk[sa[i]] != oldrk[sa[i - 1]] || oldrk[sa[i] + w] != oldrk[sa[i - 1] + w]) 
				++p;
			rk[sa[i]] = p;
		}
	}
	for (int i = 1; i <= n; ++i) cout << sa[i] << ' ';
	return 0;
}