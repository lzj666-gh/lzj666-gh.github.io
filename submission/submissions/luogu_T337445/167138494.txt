//  OJ: 洛谷
//  提交ID: 167138494
//  题目ID: T337445
#include<bits/stdc++.h>
using namespace std;
struct Edge{
	int v,w,nxt;
}edge[1000000+10];
int head[1000000+10],idx;
void add(int u,int v,int w){
	edge[++idx]={v,w,head[u]};
	head[u]=idx;
}
struct Node{
	int first,second;
	friend bool operator<(const Node&a,const Node&b){
		return a.first>b.first;
	}
};
int n,m,s,dis[1000000+10];
void spfa(){
	memset(dis,0xcf,sizeof dis);
	queue<int>q;
	q.push(0);
	dis[0]=0;
	while(!q.empty()){
		int now=q.front();
		q.pop();
		for(int i=head[now];i;i=edge[i].nxt){
			if(dis[edge[i].v]<dis[now]+edge[i].w){
				q.push(edge[i].v);
				dis[edge[i].v]=dis[now]+edge[i].w;
			}
		}
	}
}
int main(){
	ios_base::sync_with_stdio(false);
	cin>>n>>m;s=n+1;
	for(int i=1,a,b,w;i<=m;++i){
		cin>>a>>b>>w;
		add(a-1,b,w);
	}
	for(int i=1;i<=n;++i)
		add(i,i-1,-1),add(i-1,i,0);
	spfa();
	// for(int i=1;i<=n;++i) cout<<dis[i]<<' ';cout<<endl;
	cout<<dis[n]<<endl;
	return 0;
}