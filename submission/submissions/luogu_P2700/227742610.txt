//  OJ: 洛谷
//  提交ID: 227742610
//  题目ID: P2700
#include<bits/stdc++.h>
using namespace std;
struct Edge {
	int u, v, w;
	friend bool operator<(const Edge& a, const Edge& b) {
		return a.w > b.w;
	}
}edge[100000 + 5];
int n, k, fa[100000 + 5];
bool have[100000 + 5];
int find(int x) {
	return fa[x] == x ? fa[x] : fa[x] = find(fa[x]);
}
void merge(int a, int b) {
	fa[a] = b; have[b] |= have[a];
}
signed main() {
	cin.tie(0)->sync_with_stdio(false);
	cin >> n >> k; long long ans = 0;
	for (int i = 1; i <= n; ++i) fa[i] = i;
	for (int i = 1, v; i <= k; ++i) cin >> v, have[v] = 1;
	for (int i = 1; i < n; ++i) cin >> edge[i].u >> edge[i].v >> edge[i].w, ans += edge[i].w;
	sort(edge + 1, edge + n);
	for (int i = 1; i < n; ++i) {
		int a = find(edge[i].u), b = find(edge[i].v);
		if (a == b || (have[a] && have[b])) continue;
		merge(a, b); ans -= edge[i].w;
	}
	cout << ans << endl;
	return 0;
}