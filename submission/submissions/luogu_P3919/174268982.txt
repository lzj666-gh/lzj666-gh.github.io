//  OJ: 洛谷
//  提交ID: 174268982
//  题目ID: P3919
#include<bits/stdc++.h>
#define int long long
using namespace std;
struct Tree {
	int sum, l, r, ls, rs;
}tree[10000000 + 10];
int root[1000000 + 10], n, m, idx, a[1000000 + 10];
void pushup(int p) {
	tree[p].sum = tree[tree[p].ls].sum + tree[tree[p].rs].sum;
}
void build(int p, int l, int r) {
	tree[p].l = l; tree[p].r = r;
	if (l == r) {
		tree[p].sum = a[l];
		return;
	}
	tree[p].ls = ++idx;
	build(idx, l, l + r >> 1);
	tree[p].rs = ++idx;
	build(idx, (l + r >> 1) + 1, r);
	pushup(p);
}
int query(int p, int fnd) {
	if (tree[p].l == tree[p].r) return tree[p].sum;
	if (tree[p].l <= fnd && fnd <= tree[p].l + tree[p].r >> 1) return query(tree[p].ls, fnd);
	else return query(tree[p].rs, fnd);
}
void chg(int bef, int to, int idk, int val) {
	tree[to].l = tree[bef].l;
	tree[to].r = tree[bef].r;
	if (tree[to].l == tree[to].r) {
		tree[to].sum = val;
		return;
	}
	if (tree[bef].l <= idk && idk <= (tree[bef].l + tree[bef].r >> 1)) {
		tree[to].rs = tree[bef].rs;
		tree[to].ls = ++idx;
		chg(tree[bef].ls, tree[to].ls, idk, val);
		pushup(to);
	}
	else {
		tree[to].ls = tree[bef].ls;
		tree[to].rs = ++idx;
		chg(tree[bef].rs, tree[to].rs, idk, val);
		pushup(to);
	}
}
signed main() {
	ios_base::sync_with_stdio(false);
	cin >> n >> m;
	for (int i = 1; i <= n; ++i) cin >> a[i]; 
	root[0] = ++idx;
	build(idx, 1, n);
	for (int l = 1; l <= m; ++l) {
		int v, opt, loc, val;
		cin >> v >> opt >> loc;
		if (opt == 1) {
			cin >> val;
			root[l] = ++idx;
			chg(root[v], idx, loc, val);
		}
		else if (opt == 2) {
			cout << query(root[v], loc) << endl;
			root[l] = ++idx;
			tree[idx] = tree[v];
		}
	}
	return 0;
}