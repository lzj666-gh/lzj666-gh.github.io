//  OJ: 洛谷
//  提交ID: 193109779
//  题目ID: P11364
#include<bits/stdc++.h>
using namespace std;
int n,dep[500000];
vector<int>son[500000+10];
int f[500000+10][24];
bool A=1;
void get_f(int x,int fa){
	f[x][0]=fa;
	dep[x]=dep[fa]+1;
	for(int i=1;i<=20;++i){
		f[x][i]=f[f[x][i-1]][i-1];
	}
	int s=0;
	for(const int&i:son[x]){
		if(i==fa) continue;
		get_f(i,x);
		++s;
	}
	A&=s==1;
}
int lca(int x,int y){
	if(dep[x]<dep[y]) swap(x,y);
	int cur=dep[x]-dep[y];
	for(int i=0;i<=20;++i) if(cur&(1<<i)) x=f[x][i];
	if(x==y) return x;
	for(int i=20;i>=0;--i) if(f[x][i]^f[y][i]) x=f[x][i],y=f[y][i];
	return f[x][0];
}
namespace subA{
	int t[500000+10][24];
	void init(){
		for(int i=1;i<=n;++i){
			t[i][0]=dep[i];
			for(int j=1;j<=20;++j)
				t[i][j]=max(t[i][j-1],t[i+(1<<(j-1))][j-1]);
		}
	}
	int query(int x,int y){
		if(x>y) swap(x,y);
		int tmp=log2(y-x+1);
		return max(t[x][tmp],t[y-(1<<tmp)][tmp]);
	}
	//O(1) for [l,r]
}
int main(){
// 	freopen("query.in","r",stdin);
// 	freopen("query.out","w",stdout);
	cin.tie(0)->sync_with_stdio(false);
	cin>>n;
	for(int i=1,u,v;i<n;++i) cin>>u>>v,son[u].push_back(v),son[v].push_back(u);
	get_f(1,1);
	if(A) subA::init();
	int q;
	cin>>q;
	while(q--){
		int l,r,k;
		cin>>l>>r>>k;
		if(A){
			int ans=0;
			for(int i=l;i+k-1<=r;++i)
				ans=max(subA::query(i,i+k-1),ans);
			cout<<ans<<endl;
			continue;
		}
		int ans=0;
		for(int i=l;i+k-1<=r;++i){
			int l=k==1?i:lca(i,i+1);
			for(int j=i+2;j<=i+k-1;++j) l=lca(l,j);
			ans=max(dep[l],ans);
		}
		cout<<ans<<endl;
	}
	return 0;
}