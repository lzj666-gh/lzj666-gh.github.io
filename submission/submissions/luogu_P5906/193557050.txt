//  OJ: 洛谷
//  提交ID: 193557050
//  题目ID: P5906
#include<bits/stdc++.h>
#ifndef ONLINE_JUDGE
#define __gcd gcd
#endif // !ONLINE_JUDGE
using namespace std;
int a[200000 + 10];
int sum, lst, _l[200000 + 10], _r[200000 + 10], __l[200000 + 10], __r[200000 + 10];
void add(int x) {
	if (_l[a[x]] == 0) _l[a[x]] = _r[a[x]] = x;
	sum = max(sum, abs(x - _l[a[x]]));
	sum = max(sum, abs(x - _r[a[x]]));
	_r[a[x]] = max(_r[a[x]], x);
	_l[a[x]] = min(_l[a[x]], x);
}
int n, Q, bel[200000 + 10], R[200000 + 10];
struct query {
	int l, r, id; long long ans;
	friend bool operator<(const query& a, const query& b) {
		return bel[a.l] == bel[b.l] ? a.r < b.r : bel[a.l] < bel[b.l];
	}
}q[200000 + 10];
vector<int>tmpp;
signed main() {
	cin.tie(0)->sync_with_stdio(false);
	cin >> n;
	for (int i = 1; i <= n; ++i) cin >> a[i], tmpp.emplace_back(a[i]);
	sort(tmpp.begin(), tmpp.end());
	tmpp.erase(unique(tmpp.begin(), tmpp.end()), tmpp.end());
	for (int i = 1; i <= n; ++i) a[i] = lower_bound(tmpp.begin(), tmpp.end(), a[i]) - tmpp.begin() + 1;
	cin >> Q;
	int t1 = 0, t2 = pow(n, 0.5), t3 = 1;
	for (int i = 1; i <= n; ++i) {
		bel[i] = t3;
		t1++;
		if (t1 == t2) R[t3] = i, t1 = 0, t3++;
	}
	//for (int i = 1; i <= n; ++i) cout << bel[i] << ' '; cout << endl;
	for (int j = 1; j <= Q; ++j) cin >> q[j].l >> q[j].r, q[j].id = j;
	sort(q + 1, q + Q + 1);
	int r = 0;
	for (int j = 1; j <= Q; ++j) {
		//cout << q[j].l << ' ' << q[j].r << ' ' << bel[q[j].l] << endl;
		if (bel[q[j - 1].l] ^ bel[q[j].l]) {
			memset(_l, 0, sizeof _l);
			memset(_r, 0, sizeof _r);
			sum = 0;
			while (bel[q[j].r] == bel[q[j].l]) {
				//cout << "BF: " << q[j].l << ' ' << q[j].r << ' ' << bel[q[j].l] << endl;
				for (int i = q[j].l; i <= q[j].r; ++i) add(i);
				q[j].ans = sum;
				for (int i = q[j].l; i <= q[j].r; ++i) _l[a[i]] = _r[a[i]] = 0;
				sum = 0;
				if (bel[q[j].l] ^ bel[q[j + 1].l]) break;
				j++;
			}
			if ((bel[q[j].l] ^ bel[q[j + 1].l]) && bel[q[j].r] == bel[q[j].l]) continue;
			r = R[bel[q[j].l]] + 1;
			add(r);
		}
		1;
		while (r < q[j].r) add(++r);
		lst = sum;
		memcpy(__l, _l, sizeof _l);
		memcpy(__r, _r, sizeof _r);
		int l = R[bel[q[j].l]]; add(l);
		while (l > q[j].l) add(--l);
		//cout << "add " << "[" << l << '(' << q[j].l << ')' << ',' << r << '(' << q[j].r << ')' << "] with vis:"; for (int i = 1; i <= 10; ++i) cout << vis[i] << ' '; cout << endl;
		q[j].ans = sum;
		memcpy(_l, __l, sizeof _l);
		memcpy(_r, __r, sizeof _r);
		sum = lst;
	}
	sort(q + 1, q + Q + 1, [](const query& a, const query& b)->bool {return a.id < b.id; });
	for (int i = 1; i <= Q; ++i) cout << q[i].ans << endl;
	return 0;
}