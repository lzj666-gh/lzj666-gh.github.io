//  OJ: 洛谷
//  提交ID: 202877625
//  题目ID: AT_arc084_b
#include <bits/stdc++.h>
using namespace std;
typedef long long ll;
struct Edge {
	int v, w, nxt;
}edge[40000000 + 5];
int head[4000000 + 5], idx;
void add(int u, int v, int w) {
	edge[++idx] = { v,w,head[u] };
	head[u] = idx;
}
struct Node {
	int first, second;
	friend bool operator<(const Node& a, const Node& b) {
		return a.first > b.first;
	}
};
int n, m, k, dis[4000000 + 5];
priority_queue<Node>q;
bool vis[4000000 + 5];
void dij() {
	memset(dis, 0x3f, sizeof dis);
	dis[k] = 0;
	q.push({ 0,k });
	while (!q.empty()) {
		Node p = q.top(); q.pop();
		if (vis[p.second]) continue;
		vis[p.second] = 1;
		for (int i = head[p.second]; i; i = edge[i].nxt) {
			if (dis[edge[i].v] > dis[p.second] + edge[i].w) {
				dis[edge[i].v] = dis[p.second] + edge[i].w;
				q.push({ dis[p.second] + edge[i].w,edge[i].v });
			}
		}
	}
}
signed main() {
	cin.tie(0)->sync_with_stdio(false);
	cin >> k;
	for (int i = 0; i < k; ++i)
		for (int j = 0; j < 10; ++j)
			add(i, (i * 10 + j) % k, j);
	for (int i = 1; i < 10; ++i)
		add(k, i % k, i);
	dij();
	cout << dis[0];
	return 0;
}