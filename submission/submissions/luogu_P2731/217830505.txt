//  OJ: 洛谷
//  提交ID: 217830505
//  题目ID: P2731
#include<bits/stdc++.h>
#define int long long 
using namespace std;
constexpr int N = 500 + 10, M = 200000 + 10;
int n, m, r[N];
vector<int>ans;
int dis[N][N];
void dfs(int x) {
	for (int i = 1; i <= 500; ++i)
		if (dis[x][i])
			--dis[x][i], --dis[i][x],
			dfs(i);
	ans.push_back(x);
}
signed main() {
	cin.tie(0)->sync_with_stdio(false);
	cin >> m;
	for (int i = 1, x ,y; i <= m; ++i) {
		cin >> x >> y;
		dis[x][y]++;
		dis[y][x]++;
		r[x]++; r[y]++;
	}
	int s = -1, t = -1, cnt = 0;
	for (int i = 1; i <= 500; ++i)
		if (r[i] & 1)
			cnt++, s == -1 ? s = i : 114514;
	if (cnt && cnt != 2) return cout << "No Solution" << endl, 0;
	dfs(s == -1 ? 1 : s);
	if (ans.size() < m + 1)
		cout << "No Solution";
	else
		for (int i = m; i >= 0; --i)
			cout << ::ans[i] << endl;
	cout << endl;
	return 0;
}