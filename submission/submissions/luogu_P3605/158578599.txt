//  OJ: 洛谷
//  提交ID: 158578599
//  题目ID: P3605
#include<bits/stdc++.h>
#define lb(i) (i & ~i + 1)
using namespace std;
int n; int* p; int* r; int* nxt; int** a; bool* ed; int* ans;
int query(int x, int s[]) {
	int ans = 0;
	for (; x; x -= lb(x)) {
		ans += s[x];
	}
	return ans;
}
void add(int x, int k, int s[]) {
	for (; x <= n; x += lb(x)) {
		s[x] += k;
	}
}
int main() {
	ios_base::sync_with_stdio(false);
	cin >> n;
	a = new int* [n + 1];
	p = new int[n + 1];
	nxt = new int[n + 1];
	r = new int[n + 1];
	ed = new bool[n + 1];
	ans = new int[n + 1];
	for (int i = 1; i <= n; ++i) cin >> p[i], r[i] = 0, ed[i] = 0;
	for (int i = 2; i <= n; ++i) cin >> nxt[i], r[nxt[i]]++;
	queue<int>q;
	for (int i = 1; i <= n; ++i) if (!r[i]) q.push(i);
	while (!q.empty()) {
		int i = q.front(); q.pop();
		if (!ed[i]) a[i] = new int[n + 1];
		ed[i] = 1;
		add(p[i], 1, a[i]);
		ans[i] = query(p[i] - 1, a[i]);
		if (i ^ 1) {
			if (!ed[nxt[i]]) a[nxt[i]] = new int[n + 1];
			ed[nxt[i]] = 1;
		}
		if (i ^ 1) for (int j = 1; j <= n; ++i) {
			a[nxt[i]][j] += a[i][j];
		}
		free(a[i]);
		if (i ^ 1) r[nxt[i]]--;
		if (i ^ 1) if (!r[nxt[i]]) q.push(nxt[i]);
	}
	for (int i = 1; i <= n; ++i) cout << ans[i] << endl;
	return 0;
}