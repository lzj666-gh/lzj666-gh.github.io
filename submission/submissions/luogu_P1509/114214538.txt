//  OJ: 洛谷
//  提交ID: 114214538
//  题目ID: P1509
#include <iostream>
#include <vector>
using namespace std;

int find_GF(int n, vector<vector<int>>& mm_list, int m, int r) {
    vector<vector<vector<int>>> dp(n+1, vector<vector<int>>(r+1, vector<int>(m+1, 0)));

    for (int i = 1; i <= n; i++) {
        for (int j = 1; j <= r; j++) {
            for (int k = 1; k <= m; k++) {
                dp[i][j][k] = dp[i-1][j][k];
                if (j >= mm_list[i-1][1] && k >= mm_list[i-1][0]) {
                    dp[i][j][k] = max(dp[i][j][k], dp[i-1][j-mm_list[i-1][1]][k-mm_list[i-1][0]] + 1);
                }
            }
        }
    }

    return dp[n][r][m];
}

int main() {
    int n, m, r;
    cin >> n;

    vector<vector<int>> mm_list(n, vector<int>(3));
    for (int i = 0; i < n; i++) {
        cin >> mm_list[i][0] >> mm_list[i][1] >> mm_list[i][2];
    }
    
    cin >> m >> r;

    cout << find_GF(n, mm_list, m, r) << endl;

    return 0;
}