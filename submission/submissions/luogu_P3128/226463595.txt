//  OJ: 洛谷
//  提交ID: 226463595
//  题目ID: P3128
#include<bits/stdc++.h>
using namespace std;
struct Edge {
	int v, nxt;
}edge[100005];
int head[50005], idx, f[50005][20], dep[50005];
void add(int u, int v) {
	edge[++idx] = { v,head[u] };
	head[u] = idx;
}
void dfs(int x, int fa) {
	dep[x] = dep[fa] + 1; f[x][0] = fa;
	for (int i = 1; i <= 17; ++i) f[x][i] = f[f[x][i - 1]][i - 1];
	for (int i = head[x]; i; i = edge[i].nxt)
		if (edge[i].v ^ fa)
			dfs(edge[i].v, x);
}
int LCA(int x, int y) {
	if (dep[x] < dep[y]) swap(x, y);
	int cur = dep[x] - dep[y];
	for (int i = 0; i <= 17; ++i)
		if ((cur >> i) & 1)
			x = f[x][i];
	if (x == y) return x;
	for (int i = 17; i >= 0; --i)
		if (f[x][i] ^ f[y][i])
			x = f[x][i], y = f[y][i];
	return f[x][0];
}
int n, m, flow[50005], ans;
void dfs(int x) {
	for (int i = head[x]; i; i = edge[i].nxt)
		if (edge[i].v ^ f[x][0])
			dfs(edge[i].v),
			flow[x] += flow[edge[i].v];
	ans = max(ans, flow[x]);
}
int main() {
	cin.tie(0)->sync_with_stdio(false);
	cin >> n >> m;
	for (int i = 1, u, v; i < n; ++i) cin >> u >> v, add(u, v), add(v, u);
	dfs(1, 1);
	while (m--) {
		int x, y;
		cin >> x >> y;
		int l = LCA(x, y);
		flow[x]++; flow[y]++;
		flow[l]--; flow[f[l][0]]--;
	}
	dfs(1);
	cout << ans << endl;
	return 0;
}