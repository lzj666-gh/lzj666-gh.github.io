//  OJ: 洛谷
//  提交ID: 179180757
//  题目ID: P1265
#include<bits/stdc++.h>
using namespace std;
int n, x[5000 + 10], y[5000 + 10];
long long d[5000 + 10];
bool vis[5000 + 10];
inline long long DIS(int i, int j) {
	return 1ll * (x[i] - x[j]) * (x[i] - x[j]) + 1ll * (y[i] - y[j]) * (y[i] - y[j]);
}
int main() {
	ios_base::sync_with_stdio(false);
	cin >> n;
	for (int i = 1; i <= n; ++i) cin >> x[i] >> y[i];
	d[1] = 0;
	vis[1] = 1;
	for (int i = 2; i <= n; ++i) d[i] = DIS(i, 1);
	double ans = 0;
	for (int k = 2; k <= n; ++k) {
		int cur = -1;
		for (int i = 1; i <= n; ++i) {
			if (vis[i]) continue;
			if (cur == -1 || d[i] < d[cur]) cur = i;
		}
		ans += sqrt(d[cur]);
		vis[cur]=1;
		for (int i = 1; i <= n; ++i) d[i] = min(d[i], DIS(cur, i));
	}
	cout << fixed << setprecision(2) << ans << endl;
	return 0;
}