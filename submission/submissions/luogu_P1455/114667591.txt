//  OJ: 洛谷
//  提交ID: 114667591
//  题目ID: P1455
#include<bits/stdc++.h>
using namespace std;
int n,m,W;
int c[10000+10],d[10000+10],fa[10000+10],dp[20000000+10];
int find(int x){
	if(x==fa[x]){
		return x;//树根 
	}
	fa[x]=find(fa[x]);
	return fa[x];//非树根 
}
int main(){
	ios::sync_with_stdio(false);
    cin>>n>>m>>W;
    for(int i=1;i<=n;i++){
    	cin>>c[i]>>d[i];
		fa[i]=i;
	}
    for(int i=1;i<=m;i++){
		int u,v;
		cin>>u>>v;
		u=find(u);
		v=find(v);//找当前树根 
        if(u==v) continue;//同树 
        fa[v]=u;
        //累加到树根 
		d[u]+=d[v];
		c[u]+=c[v];
	}
    for(int i=1;i<=n;i++){
    	if(fa[i]==i){//树根 
    		for(int j=W;j>=c[i];j--){//01背包 
    			dp[j]=max(dp[j],dp[j-c[i]]+d[i]);
			}
		}
    }
    cout<<dp[W];
	return 0;
}