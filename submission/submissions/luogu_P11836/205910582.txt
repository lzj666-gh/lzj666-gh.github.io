//  OJ: 洛谷
//  提交ID: 205910582
//  题目ID: P11836
﻿#include <bits/stdc++.h>
using namespace std;
#define t(i) (n - 1 - i)
int main() {
	cin.tie(0)->sync_with_stdio(false);
	int n, U;
	cin >> n >> U;
	vector<vector<int>> grid(n, vector<int>(n));
	for (int i = 0; i < n; ++i) {
		string s;
		cin >> s;
		for (int j = 0; j < n; ++j)
			grid[i][j] = s[j] == '#';
	}
	int sum = 0;
	int n2 = n / 2;
	for (int i = 0; i < n2; ++i) {
		for (int j = n2; j < n; ++j) {
			int a = grid[i][j];
			int b = grid[i][t(j)];
			int c = grid[t(i)][j];
			int d = grid[t(i)][t(j)];
			int s = a + b + c + d;
			sum += min(s, 4 - s);
		}
	}
	cout << sum << endl;
	while (U--) {
		int x, y;
		cin >> x >> y;
		x--; y--;
		int i = x, j = y;
		int ad = grid[i][j];
		int sd = grid[i][j] + grid[i][t(j)] + grid[t(i)][j] + grid[t(i)][t(j)];
		sum -= min(sd, 4 - sd);
		grid[i][j] ^= 1;
		int sw = sd + (grid[i][j] - ad);
		sum += min(sw, 4 - sw);
		cout << sum << endl;
	}
	return 0;
}