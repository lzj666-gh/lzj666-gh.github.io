//  OJ: 洛谷
//  提交ID: 165677967
//  题目ID: P2569
#include<bits/stdc++.h>
using namespace std;
long long t,ap[2000+11],bp[2000+11],as[2000+11],bs[2000+11],mxp,w,ans,dp[2000+11][2000+11],tt;
struct Bfs{
	long long day,get,sum;
	Bfs():day(1),get(0),sum(0){}
	Bfs(long long d,long long g,long long s):day(d),get(g),sum(s){}
};
queue<Bfs>q;
int main(){
//	freopen("trade.in","r",stdin);
//	freopen("trade.out","w",stdout);
	ios_base::sync_with_stdio(false);
	time_t t_begin=clock();
	memset(dp,0xcf,sizeof dp);
	cin>>t>>mxp>>w;
	for(int i=1;i<=t;++i) cin>>ap[i]>>bp[i]>>as[i]>>bs[i];
	q.push(Bfs());
	while(!q.empty()){
		Bfs now=q.front();q.pop();
		if(now.sum<dp[now.day][now.get]) continue;
		dp[now.day][now.get]=now.sum;
		if(now.day>=t+1){
			ans=max(ans,now.sum);
			continue;
		}
		if(now.day+w==t) for(int i=1;i+now.get<=mxp&&i<=as[now.day];++i) ans=max(ans,now.sum-ap[now.day]*i);
		else for(int i=1;i+now.get<=mxp&&i<=as[now.day];++i) 
			if(dp[now.day+w+1][now.get+i]<now.sum-ap[now.day]*i){
				dp[now.day+w+1][now.get+i]=now.sum-ap[now.day]*i;
				q.push(Bfs(now.day+w+1,now.get+i,now.sum-ap[now.day]*i));
			}
		
		if(now.day+w==t) for(int i=1;i<=now.get&&i<=bs[now.day];++i) ans=max(ans,now.sum+bp[now.day]*i);
		else for(int i=1;i<=now.get&&i<=bs[now.day];++i) 
			if(dp[now.day+w+1][now.get-i]<now.sum+bp[now.day]*i){
				dp[now.day+w+1][now.get-i]=now.sum+bp[now.day]*i;
				q.push(Bfs(now.day+w+1,now.get-i,now.sum+bp[now.day]*i));
			}
		
		if(dp[now.day+1][now.get]<now.sum){
			dp[now.day+1][now.get]=now.sum;
			q.push(Bfs(now.day+1,now.get,now.sum));
		}
		time_t t_end=clock();
		tt++;
		if(tt&1) if((t_end-t_begin)*1.0/CLOCKS_PER_SEC>0.95){
			cout<<ans<<endl;
			return 0;
		}
	}
	cout<<ans<<endl;
	return 0;
}
/*
5 2 3
2 1 1 1
2 1 1 1
3 2 1 1
4 3 1 1 
5 4 1 1
*/
//almost 50 pts
//it's O(WTMaxP) (0<W<T<2000,MaxP<50(50%))