//  OJ: 洛谷
//  提交ID: 114052510
//  题目ID: P1510
#include <iostream>
#include <vector>
using namespace std;

int main() {
    int v, n, c;
    cin >> v >> n >> c;

    // 构建状态转移数组
    vector<int> dp(v + 1, -1);
    dp[0] = c;

    // 状态转移
    for (int i = 1; i <= n; i++) {
        int volume, power;
        cin >> volume >> power;

        for (int j = v; j >= volume; j--) {
            if (dp[j - volume] >= 0 && dp[j - volume] >= power) {
                dp[j] = max(dp[j], dp[j - volume] - power);
            }
        }
    }

    // 输出结果
    int maxPower = -1;
    for (int i = v; i >= 0; i--) {
        if (dp[i] >= 0) {
            maxPower = dp[i];
            break;
        }
    }

    if (maxPower >= 0) {
        cout << maxPower << endl;
    } else {
        cout << "Impossible" << endl;
    }

    return 0;
}