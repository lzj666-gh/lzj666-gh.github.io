//  OJ: 洛谷
//  提交ID: 114050343
//  题目ID: P1510
#include <iostream>
#include <vector>
#include <algorithm>

using namespace std;

int main() {
    int v, n, c;
    cin >> v >> n >> c;

    vector<pair<int, int>> stones(n);
    for (int i = 0; i < n; i++) {
        cin >> stones[i].first >> stones[i].second;
    }

    sort(stones.begin(), stones.end());

    vector<int> dp(v + 1, -c);
    dp[0] = 0;

    for (int i = 0; i < n; i++) {
        for (int j = v; j >= stones[i].first; j--) {
            dp[j] = max(dp[j], dp[j - stones[i].first] + stones[i].second);

            if (dp[j] >= 0) {
                dp[j] = min(dp[j], c);
            }
        }
    }

    if (dp[v] < 0) {
        cout << "Impossible" << endl;
    } else {
        cout << c - dp[v] << endl;
    }

    return 0;
}
