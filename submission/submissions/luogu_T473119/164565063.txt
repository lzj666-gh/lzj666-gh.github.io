//  OJ: 洛谷
//  提交ID: 164565063
//  题目ID: T473119
#include<bits/stdc++.h>
using namespace std;
int n, B, a[4000], dp[4000][4000][2],ans;
int main() {
	ios_base::sync_with_stdio(false);
	int T;
	cin >> T;
	while (T--) {
		memset(dp, 0, sizeof dp);
		cin >> n >> B;
		for (int i = 1; i <= n; ++i) cin >> a[i];
		for (int i = 2; i <= n; ++i) {
			for (int j = 2; j <= i && j <= B; ++j) {
				dp[i][j][0] = max(dp[i - 1][j][0], dp[i - 1][j][1]);
				dp[i][j][1] = max(dp[i - 1][j - 1][0], dp[i - 1][j - 1][1] + a[i]);
//				cerr << i << ' ' << j << ' ' << dp[i][j][0] << ' ' << dp[i][j][1] << endl;
			}
		}
//		cerr << endl;
		ans = max({ ans,dp[n][B][1],dp[n][B][0] });
		memset(dp, 0, sizeof dp);
		dp[1][0][0] = 0;
		dp[1][1][1] = a[1];
		for (int i = 2; i <= n; ++i) {
			for (int j = 1; j <= i && j <= B; ++j) {
				if (j == 1) {
					dp[i][j][0] = a[1];
					continue;
				}
				dp[i][j][0] = max(dp[i - 1][j][0], dp[i - 1][j][1]);
				dp[i][j][1] = max(dp[i - 1][j - 1][0], dp[i - 1][j - 1][1] + a[i]);
//				cerr << i << ' ' << j << ' ' << dp[i][j][0] << ' ' << dp[i][j][1] << endl;
			}
		}
		cout << max(ans, dp[n][B][1]) << endl;
	}
	
	return 0;
}