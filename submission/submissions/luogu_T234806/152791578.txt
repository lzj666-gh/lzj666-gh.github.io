//  OJ: 洛谷
//  提交ID: 152791578
//  题目ID: T234806
#include<bits/stdc++.h>
using namespace std;
struct Edge {
	int v, nxt, w;
}edge[200000 + 10];
int head[100000 + 10], n, m, idx, cnt1[10000 + 10], cnt2[10000 + 10];
double dp[100000 + 10];
inline void add(int u, int v, int w) {
	++idx;
	edge[idx] = { v,head[u],w };
	head[u] = idx;
}
void Top() {
	queue<int> q;
	q.push(n);
	while (!q.empty()) {
		int x = q.front(); q.pop();
//		cout << x << endl;
		for (int i = head[x]; i; i = edge[i].nxt) {
			int to = edge[i].v, val = edge[i].w;
			dp[to] += (dp[x] + val) / cnt1[to], cnt2[to]--;
			if (!cnt2[to]) q.push(to);
		}
	}
}
int main() {
	ios::sync_with_stdio(false);
	cin >> n >> m;
	for (int i = 1, u, v, w; i <= m; ++i) {
		cin >> u >> v >> w;
		add(v, u, w); cnt1[u]++, cnt2[u]++;
	}
//	for (int i = 1; i <= n; ++i) {
//		for (int j = head[i]; j; j = edge[j].nxt) {
//			cout << '{' << edge[j].v << ' ' << edge[j].w << '}' << ' ';
//		}
//		cout << endl;
//	}
	Top();
	cout << fixed << setprecision(2) << dp[1] << endl;
	return 0;
}