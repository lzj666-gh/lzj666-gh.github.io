//  OJ: 洛谷
//  提交ID: 115267269
//  题目ID: T343402
#include <bits/stdc++.h>
#define maxn 1000001
using namespace std;
int n,u,v,O;
bool vis[maxn];
int f[maxn],g[maxn],ans;
int k,b[maxn];
int first[maxn],child[maxn],par[maxn];
void dfs(int x){
	vis[x]=true;
	int p=first[x];
	while(p){
		if(vis[b[p]]==false){
			dfs(b[p]);
			g[x]+=g[b[p]]+1;
			f[x]=max(f[x],g[b[p]]+1);
		}
		p=child[p];
	}
	f[x]=max(f[x],n-g[x]-1);
	vis[x]=0;
}
int main(){
	ios::sync_with_stdio(false);cin.tie(NULL);cout.tie(NULL);
	cin>>n;
	for(int i=1;i<n;i++){
		cin>>u>>v;
		k++;
		b[k]=v;
		if(first[u]==0) first[u]=k;
		else child[par[u]]=k;
		par[u]=k;
		k++;
		b[k]=u;
		if(first[v]==0) first[v]=k;
		else child[par[v]]=k;
		par[v]=k;
	}
	dfs(1);
	f[0]=INT_MAX-114514;
	for(int i=1;i<=n;i++) if(f[O]>f[i]) O=i;
	cout<<O<<' ';
	memset(g,0,sizeof(g));
	dfs(O);
	for(int i=1;i<=n;i++) ans+=g[i];
	cout<<ans<<endl;
	return 0;
}