//  OJ: 洛谷
//  提交ID: 218745540
//  题目ID: P2155
#include<bits/stdc++.h>
#define int long long
using namespace std;
using ll = long long;
constexpr int N = 1e7 + 5;
bool vis[N];
vector<int>prm;
int T, n, m, mod;
int inv[N], mul[N], fct[N], pos[N];
void pre() {
	memset(vis, 1, sizeof vis);
	vis[0] = vis[1] = 0;
	for (int i = 2; i < N; ++i) {
		if (vis[i])
			prm.push_back(i);
		for (const int& v : prm) {
			if (i * v >= N) break;
			vis[i * v] = 0;
			if (i % v == 0) break;
		}
	}
	inv[0] = inv[1] = 1;
	for (int i = 2, lim = min(mod, N); i < lim; ++i)
		inv[i] = 1ll * (mod - mod / i) * inv[mod % i] % mod;
	mul[0] = 1;
	for (int i = 1; i <= prm.size(); ++i)
		if (prm[i - 1] ^ mod)
			mul[i] = 1ll * mul[i - 1] * inv[prm[i - 1] % mod] % mod;
		else
			mul[i] = mul[i - 1];
	fct[0] = 1;
	for (int i = 1; i < N; ++i)
		if (i ^ mod)
			fct[i] = 1ll * fct[i - 1] * i % mod;
		else
			fct[i] = fct[i - 1];
	for (int i = 1; i < N; ++i)
		pos[i] = pos[i - 1] + vis[i];
}
signed main() {
	cin.tie(0)->sync_with_stdio(false);
	cin >> T >> mod;
	pre();
	while (T--) {
		cin >> n >> m;
		if (n / mod > m / mod) cout << 0 << endl;
		else
			cout << 1ll * fct[n] * mul[pos[m]] % mod * inv[pos[m]] % mod << endl;
	}
	return 0;
}