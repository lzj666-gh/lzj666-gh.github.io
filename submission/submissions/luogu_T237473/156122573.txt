//  OJ: 洛谷
//  提交ID: 156122573
//  题目ID: T237473
#include<bits/stdc++.h>
using namespace std;
int n, m, opt, x, y, k;
struct Tree {
#define lc(p) (p << 1)
#define rc(p) ((p << 1) + 1)
	struct point {
		int l, r, sum, lazy;
		point() :l(0), r(0), sum(0), lazy(0) {}
		point(int ll, int rr, int ssum, int lzy) :l(ll), r(rr), sum(ssum), lazy(lzy) {}
	}tree[4 * 100000 + 10];
	void pushdown(int p) {
		if (tree[p].lazy) {
			tree[lc(p)].sum += (tree[lc(p)].r - tree[lc(p)].l) * tree[p].lazy;
			tree[rc(p)].sum += (tree[rc(p)].r - tree[rc(p)].l) * tree[p].lazy;
			tree[lc(p)].lazy += tree[p].lazy;
			tree[rc(p)].lazy += tree[p].lazy;
			tree[p].lazy = 0;
		}
	}
	void pushup(int p) {
		tree[p].sum = tree[lc(p)].sum + tree[rc(p)].sum;
	}
	void add(int p, int l, int r, int k) {
		if (tree[p].l >= r || tree[p].r <= l) return;
		if (tree[p].l == tree[p].r - 1) {
			if (tree[p].lazy) tree[p].sum += tree[p].lazy;
			tree[p].sum += k;
			return;
		}
		if (l <= tree[p].l && tree[p].r <= r) {
			tree[p].lazy += k;
			return;
		}
		pushdown(p);
		add(lc(p), l, r, k);
		add(rc(p), l, r, k);
		pushup(p);
	}
	int query(int p, int l, int r) {
		if (tree[p].l >= r || tree[p].r <= l) return 0;
		if (tree[p].l == tree[p].r - 1){
			if (tree[p].lazy) tree[p].sum += tree[p].lazy;
			return tree[p].sum;
		}
		if (l <= tree[p].l && tree[p].r <= r) return tree[p].sum;
		pushdown(p);
		int ans = query(lc(p), l, r) + query(rc(p), l, r);
		pushup(p);
		return ans;
	}
	void build(int p, int l, int r, const vector<int>& v) {
		tree[p].l = l, tree[p].r = r, tree[p].lazy = 0;
		if (l == r - 1) {
			tree[p] = { l,r,v[l],0 };
			return;
		}
		build(lc(p), l, l + r >> 1, v);
		build(rc(p), l + r >> 1, r, v);
		pushup(p);
	}
}t;
vector<int>v;
int main() {
	ios_base::sync_with_stdio(false);
	cin >> n >> m;
	v.push_back(0);
	for (int i = 1, tmp; i <= n; ++i) cin >> tmp, v.push_back(tmp);
	t.build(1, 1, n + 1, v);
	while (m--) {
		int opt, x, y, k;
		cin >> opt;
		if (opt == 1) {
			cin >> x >> y >> k;
			t.add(1, x, y + 1, k);
		}
		else if (opt == 114514) {
			cout << "debug:";
			for (int i = 1; i <= n; ++i) cout << t.query(1, i, i + 1) << ' ';
			cout << endl;
		}
		else {
			cin >> x >> y;
			cout << t.query(1, x, y + 1) << endl;
		}
	}
	return 0;
}
/*
5 500
1 5 4 2 3
114514
2 2 4
114514
1 2 3 2
114514
2 3 4
114514
1 1 5 1
114514
2 1 4
114514
*/