//  OJ: 洛谷
//  提交ID: 202916152
//  题目ID: P1829
#include<bits/stdc++.h>
using namespace std;
using ll = long long;
const int mod = 20101009;
bool isp[10000000 + 10];
vector<int>prm;
ll n, m, ans, mu[10000000 + 10], f[10000000 + 10], g[10000000 + 10];
void getprm() {
	memset(isp, 1, sizeof isp);
	isp[0] = isp[1] = 0;
	mu[1] = 1;
	for (int i = 2; i <= 10000000; ++i) {
		if (isp[i])
			prm.push_back(i),
			mu[i] = -1;
		for (int j = 0; j != prm.size(); ++j) {
			if (i * 1ll * prm[j] > 10000000) break;
			isp[i * prm[j]] = 0;
			if (i % prm[j] == 0) break;
			mu[i * prm[j]] = -mu[i];
		}
	}
	for (ll i = 1; i <= 10000000; i++)
		f[i] = (f[i - 1] + i * 1ll * i % mod * (mu[i] + mod)) % mod;
}
ll Sum(ll x, ll y) {
	return (x * (x + 1) / 2 % mod) * (y * (y + 1) / 2 % mod) % mod;
}
int main() {
	cin.tie(0)->sync_with_stdio(false);
	cin >> n >> m;
	getprm();
	ll lim = min(n, m);
	for (ll i = 1, j; i <= lim; i = j + 1) {
		ll x = n / i, y = m / i;
		j = min(n / x, m / y);
		ll res = 0;
		for (ll i = 1, j; i <= min(x, y); i = j + 1) {
			j = min(x / (x / i), y / (y / i));
			res = (res + (f[j] - f[i - 1] + mod) * Sum(x / i, y / i) % mod) % mod;
		}
		ans = (ans + (j - i + 1) * (i + j) / 2 % mod * res % mod) % mod;
	}
	cout << ans << endl;
	return 0;
}