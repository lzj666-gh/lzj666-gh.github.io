//  OJ: 洛谷
//  提交ID: 191258465
//  题目ID: P8865
#include<bits/stdc++.h>
// #define ONLINE
using namespace std;
constexpr int mod = 998244353;
using ll = long long;
bool a[1000 + 10][1000 + 10];
int rst[1000 + 10][1000 + 10], dst[1000 + 10][1000 + 10], n, m, c, f;
ll ans[1000 + 10][1000 + 10], timesi[1000 + 10][1000 + 10];
int main() {
#ifdef ONLINE
	freopen("plant.in", "r", stdin);
	freopen("plant.out", "w", stdout);
#endif
	cin.tie(0)->sync_with_stdio(false);
	int T, id;
	cin >> T >> id;
	while (T--) {
		cin >> n >> m >> c >> f;
		c %= mod; f %= mod;
		for (int i = 1; i <= n; ++i) {
			string s;
			cin >> s;
			for (int j = 1; j <= m; ++j)
				a[i][j] = s[j - 1] == '1';
		}
		for (int i = 1; i <= n; ++i) {
			rst[i][m + 1] = m + 1;
			for (int j = m; j >= 1; --j) {
				if (a[i][j] == 1) rst[i][j] = j;
				else rst[i][j] = rst[i][j + 1];
			}
		}
		ll C = 0, F = 0;
		memset(ans, 0, sizeof ans);
		for (int j = 1; j <= m; ++j) {
			dst[n + 1][j] = n + 1;
			for (int i = n; i >= 1; --i)
				if (a[i][j] == 1) dst[i][j] = i;
				else dst[i][j] = dst[i + 1][j];
			for (int i = n - 2; i >= 1; --i) {
				if (a[i + 2][j]) continue;
				if (a[i + 1][j]) continue;
				if (a[i][j]) continue;
				ans[i][j] = ans[i + 1][j] + rst[i + 2][j];
				ans[i][j] %= mod;
			}
		}
		for (int i = 1; i <= n - 2; ++i)
			for (int j = 1; j <= m; ++j) {
				if (a[i + 2][j]) continue;
				if (a[i + 1][j]) continue;
				if (a[i][j]) continue;
				ll tot = 0;
				C += (rst[i][j] - 1ll - j) * (ans[i][j] - (j + 1ll) * (dst[i][j] - (i + 2ll)));
				C %= mod;
			}
		cout << (C * c % mod + mod) % mod << ' ';
		memset(ans, 0, sizeof ans);
		memset(timesi, 0, sizeof timesi);
		for (int j = 1; j <= m; ++j) {
			for (int i = n - 3; i >= 1; --i) {
				if (a[i][j]) continue;
				if (a[i + 1][j]) continue;
				if (a[i + 2][j]) continue;
				if (a[i + 3][j]) continue;
				ans[i][j] = ans[i + 1][j] + rst[i + 2][j];
				timesi[i][j] = timesi[i + 1][j] + rst[i + 2][j] * (i + 2);
				ans[i][j] %= mod;
				timesi[i][j] %= mod;
			}
		}
		for (int i = 1; i <= n - 3; ++i) 
			for (int j = 1; j <= m; ++j) {
				if (a[i][j]) continue;
				if (a[i + 1][j]) continue;
				if (a[i + 2][j]) continue;
				if (a[i + 3][j]) continue;
				int k = dst[i][j] - 1;
				F += (rst[i][j] - 1ll - j) * (ans[i][j] * k % mod - timesi[i][j] - (j + 1ll) * ((k - 2ll - i) * k % mod - (i + 2ll + k - 1) * (k - 2ll - i) / 2 % mod));
				F %= mod;
			}
		cout << (F * f % mod + mod) % mod << endl;
	}
	return 0;
}