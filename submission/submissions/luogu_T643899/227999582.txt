//  OJ: 洛谷
//  提交ID: 227999582
//  题目ID: T643899
#include<bits/stdc++.h>
using namespace std;
using ull = unsigned long long;
ull hsh1, hsh2, p = 131, l = 1;
int nxt[1000000 + 10];
string s;
int kmp() {
	int j = 0, k = -1;
	nxt[j] = -1;
	while (j < s.size()) {
		if (k == -1 || s[j] == s[k])
			nxt[++j] = ++k;
		else k = nxt[k];
	}
	return nxt[j];
}
int32_t main(int32_t argc, char** argv) {
	//if (argc >= 2) freopen(argv[1], "r", stdin);
	//else freopen("divide.in", "r", stdin);
	//if (argc >= 3) freopen(argv[2], "w", stdout);
	//else freopen("divide.out", "w", stdout);
	cin.tie(0)->sync_with_stdio(false);
	int T;
	cin >> T;
	while (T--) {
		cin >> s;
		hsh1 = 0; hsh2 = 0; l = 1; int ans = 0;
		for (int i = 0, j = s.size() - 1; i < j; ++i, --j) {
			hsh1 = hsh1 * p + (s[i] - 'a');
			hsh2 = (s[j] - 'a') * l + hsh2;
			l *= p;
			if (hsh1 == hsh2) {
				hsh1 = hsh2 = 0;
				l = 1; ans += 2;
			}
		}
		if (s.size() % 2 == 1 || !hsh1) ans++;
		cout << ans << endl;
	}
	return 0;
}