//  OJ: 洛谷
//  提交ID: 232754870
//  题目ID: P13821
#include<bits/stdc++.h>
using namespace std;
int main() {
	cin.tie(0)->sync_with_stdio(false);
	int n; cin >> n; vector<int> a(n);
	for (int i = 0; i < n; ++i) cin >> a[i];
	int M = a[n - 1]; vector<vector<tuple<int, int, int>>> blocks(M + 1);
	for (int j = 1; j <= M; ++j) {
		static bool vis[100];
		int st = -1;
		for (int i = 0; i < n; ++i) vis[i] = a[i] >= j;
		for (int i = 0; i < n; ++i) {
			if (vis[i] && st == -1) {
				st = i;
			}
			else if (!vis[i] && st != -1) {
				blocks[j].push_back(make_tuple(st, i - 1, i - st));
				st = -1;
			}
		}
		if (st != -1)
			blocks[j].push_back(make_tuple(st, n - 1, n - st));
	}
	vector<vector<bool>> g(M + 1);
	for (int j = 1; j <= M; ++j) g[j].resize(blocks[j].size(), false);
	for (auto& [st, ed, sz] : blocks[M]) {
		static int k = 0;
		if (st <= n - 1 && n - 1 <= ed) g[M][k] = true;
		++k;
	}
	for (int j = M - 1; j >= 1; --j)
		for (int k = 0; k < blocks[j].size(); ++k) {
			auto& [st1, ed1, sz1] = blocks[j][k];
			for (int l = 0; l < blocks[j + 1].size(); ++l)
				if (g[j + 1][l]) {
					auto& [st2, ed2, sz2] = blocks[j + 1][l];
					if (!(ed1 < st2 || ed2 < st1)) {
						g[j][k] = true;
						break;
					}
				}
		}
	vector<vector<int>> f(M + 1);
	for (int j = 1; j <= M; ++j) f[j].resize(blocks[j].size(), 0);
	for (int k = 0; k < blocks[1].size(); ++k)
		if (g[1][k])
			f[1][k] = get<2>(blocks[1][k]);
	for (int j = 2; j <= M; ++j)
		for (int l = 0; l < blocks[j].size(); ++l) {
			if (!g[j][l]) continue;
			auto& [st_l, ed_l, sz_l] = blocks[j][l];
			for (int k = 0; k < blocks[j - 1].size(); ++k) {
				if (f[j - 1][k] == 0) continue;
				auto& [st_k, ed_k, sz_k] = blocks[j - 1][k];
				if (st_l <= ed_k && st_k <= ed_l)
					f[j][l] = max(f[j][l], f[j - 1][k] + sz_l);
			}
		}
	int ans = 0;
	for (int l = 0; l < blocks[M].size(); ++l) {
		auto& [st, ed, sz] = blocks[M][l];
		if (st <= n - 1 && n - 1 <= ed) ans = max(ans, f[M][l]);
	}
	cout << ans << endl;
	return 0;
}