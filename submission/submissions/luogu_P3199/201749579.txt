//  OJ: 洛谷
//  提交ID: 201749579
//  题目ID: P3199
#include<bits/stdc++.h>
using namespace std;
constexpr double eps = 1e-10;
int n, m;
double dis[3000 + 10];
bool vis[3000 + 10];
struct {
	int v, nxt;
	double w;
}edge[10000 + 10];
int head[10000 + 10], idx;
void add(int u, int v, double w) {
	edge[++idx] = { v,head[u],w };
	head[u] = idx;
}
bool dfs(int x, double mid) {
	vis[x] = 1;
	for (int i = head[x]; i; i = edge[i].nxt)
		if (dis[edge[i].v] > dis[x] + edge[i].w - mid) {
			dis[edge[i].v] = dis[x] + edge[i].w - mid;
			if (vis[edge[i].v] || dfs(edge[i].v, mid))
				return 1;
		}
	return vis[x] = 0;
}
bool spfa(double mid) {
	memset(vis, 0, sizeof vis);
	memset(dis, 0, sizeof dis);
	for (int i = 1; i <= n; ++i)
		if (dfs(i, mid))
			return 1;
	return 0;
}
bool comp(double l, double r) {
	if (fabs(l - r) <= eps) return false;
	return l < r;
}
int main() {
	cin.tie(0)->sync_with_stdio(false);
	cin >> n >> m; 
	int u, v; double  w;
	for (int i = 1; i <= m; ++i) 
		cin >> u >> v >> w, add(u, v, w);
	double l = -1e7, r = 1e7, mid;
	while (comp(l, r)) {
		mid = (l + r) / 2;
		if (spfa(mid)) r = mid;
		else l = mid;
	}
	cout << fixed << setprecision(8) << l << endl;
	return 0;
}