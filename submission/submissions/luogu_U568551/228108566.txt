//  OJ: 洛谷
//  提交ID: 228108566
//  题目ID: U568551
#include<bits/stdc++.h>
#define int long long
using namespace std;
constexpr int mod = 20090517;
int n, m, a[100000 + 5];
int f[100000 + 5], vis[100000 + 5], g[100000 + 5], inv[100000 + 5];
void exgcd(int a, int b, int& x, int& y) {
	if (b == 0) { x = 1; y = 0; return; }
	exgcd(b, a % b, x, y);
	int z = x; x = y, y = z - y * (a / b);
}
inline int getinv(int a) {
	int x, y;
	exgcd(a, mod, x, y);
	return(x % mod + mod) % mod;
}
vector<int>b;
int32_t main() {
//	freopen("end_city.in", "r", stdin);
//	freopen("end_city.out", "w", stdout);
	cin.tie(0)->sync_with_stdio(false);
	cin >> n >> m;
	for (int i = 1; i <= n; ++i) cin >> a[i], b.push_back(a[i]);
	sort(b.begin(), b.end());
	for (int i = 1; i <= n; ++i) a[i] = lower_bound(b.begin(), b.end(), a[i]) - b.begin() + 1;
	g[0] = 1;
	for (int i = 1; i <= n; ++i) g[i] = g[i - 1] * i % mod;
	inv[n] = getinv(g[n]);
	for (int i = n - 1; i; --i) inv[i] = inv[i + 1] * (i + 1);
	for (int i = 1; i <= n; ++i)
		for (int j = 1; j <= i; ++j)
			f[i] += j * (g[i] * inv[i - j]) % mod;
	while (m--) {
		static int lastans;
		int l, r;
		cin >> l >> r;
		l ^= lastans; r ^= lastans;
		for (int i = l; i <= r; ++i) vis[a[i]]++;
		int len = r - l + 1, ans = f[len];
		for (int i = 1; i <= n; ++i) {

		}
		for (int i = l; i <= r; ++i) vis[a[i]]--;
	}
	return 0;
}