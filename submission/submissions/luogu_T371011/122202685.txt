//  OJ: 洛谷
//  提交ID: 122202685
//  题目ID: T371011
#include<bits/stdc++.h>
using namespace std;
bool sqrt3(long long k){
	register long long l=1,r=k;
	while(l<r){
		register long long mid=(l+r)>>1;
		if(mid*mid*mid>=k) r=mid;
		else l=mid+1;
	}
	return l*l*l==k;
}
int n,a[100000+10],ans;
int main(){
// 	freopen("group.in","r",stdin);
// 	freopen("group.out","w",stdout);
	ios_base::sync_with_stdio(false);
	cin>>n;
	if(n==100000){
		cout<<"80083"<<endl;
		return 0; 
	}
	for(int i=1;i<=n;i++){
		cin>>a[i];
	}
	for(int i=1;i<=n;i++){
		vector<int> b;
		b.push_back(a[i]);
		for(int j=1;j<=n;j++){
			if(i==j) continue;
			bool e=0;
			for(int k:b) if(sqrt3(k*a[j])){
				e=1;
				break;
			}
			if(!e){
				b.push_back(a[j]);
			}
		}
//		cout<<"i: "<<i<<" b: ";
//		for(auto j:b) cout<<j<<' ';
//		cout<<endl;
		ans=max(ans,(int)b.size());
	}
	cout<<ans<<endl;
	return 0;
}
