//  OJ: 洛谷
//  提交ID: 164791389
//  题目ID: P1879
#include<bits/stdc++.h>
using namespace std;
int d[4000 + 5], cnt, n, mx, nd[10 + 5], m;
long long f[10 + 5][4000 + 5];
void DP() {
	f[0][1] = 1;
	for (int i = 1; i <= n; ++i)
		for (int nw = 1; nw <= cnt; ++nw)
			for (int lst = 1; lst <= cnt; ++lst) {
				if (d[nw] & d[lst]) continue;
				if (((d[nw] | nd[i]) == nd[i]))
					f[i][nw] += f[i - 1][lst];
			}
}
int main() {
	ios_base::sync_with_stdio(false);
	cin >> n >> m;
	int cyc = 0;
	for (int i = 1; i <= n; ++i) {
		for (int j = 1; j <= m; ++j) {
			cin >> cyc;
			nd[i] = (nd[i] << 1) + cyc;
		}
	}
	for (int i = 0; i < (1 << m); ++i)
		if (!(i & (i << 1))) d[++cnt] = i;
	//	for (int i = 1; i <= cnt; ++i) cout << bitset<15>(d[i]) << endl;
	DP();
	long long ans = 0;
	for (int i = 1; i <= cnt; ++i)
		ans += f[n][i];
	cout << ans << endl;
	return 0;
}
