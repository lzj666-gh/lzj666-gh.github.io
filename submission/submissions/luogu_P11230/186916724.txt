//  OJ: 洛谷
//  提交ID: 186916724
//  题目ID: P11230
#include<bits/stdc++.h>
using namespace std;
int l[100000 + 10];
vector<int>s[100000 + 10];
int r, c;
int n, k, q;
bool vis[200000 + 10];
time_t beg;
bool dfs(int k, int lst, int lstt) {
	if (k == r + 1) return lst == c;
	for (int i = n; i >= 1; --i) {
		if (i == lstt) continue;
		for (int j = 1; j <= l[i]; ++j) {
			if (s[i][j] != lst) continue;
			for (int p = j + 1; p <= j +::k - 1 && p <= l[i]; ++p)
				if (dfs(k + 1, s[i][p], i)) return 1;
		}
	}

	return 0;
}
int main() {
	beg = clock();
// 	freopen("chain.in", "r", stdin);
// 	freopen("chain.out", "w", stdout);
	cin.tie(0)->sync_with_stdio(false);
	int T;
	cin >> T;
	while (T--) {
		cin >> n >> k >> q;
		for (int i = 1; i <= n; ++i) {
			cin >> l[i];
			s[i].clear();
			s[i].push_back(0);
			for (int j = 1, tmp; j <= l[i]; ++j) cin >> tmp, s[i].push_back(tmp), vis[tmp] = 1;
		}
		while (q--) {
			cin >> r >> c;
			if (!vis[c]) {
				cout << 0 << endl;
				continue;
			}
			cout << dfs(1, 1, -1) << endl;
		}
	}
	return 0;
}