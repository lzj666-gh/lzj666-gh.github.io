//  OJ: 洛谷
//  提交ID: 199157080
//  题目ID: P3750
#include<bits/stdc++.h>
using namespace std;
const int p = 100003;
class int_with_mod {
	typedef int_with_mod Int;
public:
	int ans;
	int_with_mod(int a = 0) :ans(a) {}
	friend Int operator+(const Int& a, const Int& b) {
		return (a.ans + b.ans) % p;
	}
	friend Int operator-(const Int& a, const Int& b) {
		return (a.ans - b.ans) % p;
	}
	friend Int operator*(const Int& a, const Int& b) {
		return 1ll * a.ans * b.ans % p;
	}
	friend Int operator/(const Int& a, const Int& b) {
		return 1ll * a.ans * poww(b.ans, p - 2) % p;
	}
	friend istream& operator>>(istream& in, Int& a) {
		return in >> a.ans, a.ans %= p, in;
	}
	friend ostream& operator<<(ostream& out, Int& a) {
		return out << a.ans;
	}
protected:
	static int poww(int x, int k) {
		if (k == 0) return 1;
		if (k == 1) return x;
		long long tmp = poww(x, k / 2);
		tmp *= tmp;
		tmp %= p;
		if (k % 2 == 1) return tmp * x % p;
		else return tmp;
	}
}f[100000 + 10], g[100000 + 10];
int n, k, stp;
bool a[100000 + 10];
int main() {
	cin.tie(0)->sync_with_stdio(false);
	cin >> n >> k;
	for (int i = 1; i <= n; ++i) cin >> a[i];
	for (int i = n; i >= 1; --i) {
		if (a[i]) {
			stp++;
			for (int j = 1; j * j <= i; ++j) {
				a[j] ^= 1;
				if (j * j ^ i) a[i / j] ^= 1;
			}
		}
	}
	g[n] = 1;
	for (int i = n - 1; i >= 1; --i)
		g[i] = ((n - i) * g[i + 1] + n) / i;
	f[k] = k;
	for (int i = k + 1; i <= n; ++i)
		f[i] = f[i - 1] + g[i];
	int_with_mod ans = f[stp];
	for (int i = 1; i <= n; ++i) ans = ans * i;
	cout << ans << endl;
	return 0;
}
//