//  OJ: 洛谷
//  提交ID: 221885642
//  题目ID: SP19985
#include<bits/stdc++.h>
#include<unordered_map>
#define int unsigned long long
using namespace std;
constexpr int N = 2e7;
int sphi[N + 10];
unordered_map<int, int> Sphi;
inline int Sumphi(int n) {
	if (n <= N) return sphi[n];
	if (Sphi[n]) return Sphi[n];
	int ret = 1ll * n * (n + 1) / 2;
	for (int l = 2, r; l <= n; l = r + 1)
		r = n / (n / l),
		ret -= (r - l + 1) * Sumphi(n / l);
	return Sphi[n] = ret;
}
vector<int> prm;
bool vis[N + 10];
int phi[N + 10];
void iniit() {
	sphi[1] = phi[1] = 1;
	for (int i = 2; i <= N; i++) {
		if (!vis[i]) {
			prm.push_back(i);
			phi[i] = i - 1;
		}
		for (int& v : prm) {
			if (i * v > N) break;
			vis[i * v] = 1;
			if (i % v == 0) {
				phi[i * v] = phi[i] * v;
				break;
			}
			phi[i * v] = phi[i] * phi[v];
		}
		sphi[i] = sphi[i - 1] + phi[i];
	}
}
int sol(int n) {
	int ans = 0;
	for (int l = 1, r; l <= n; l = r + 1) {
		r = min(n, (n / (n / l)));
		ans += (n / l) * (n / l - 1) / 2 * (Sumphi(r) - Sumphi(l - 1));
	}
	return ans;
}
signed main() {
	cin.tie(0)->sync_with_stdio(false);
	iniit();
	int T, n;
	cin >> T;
	while (T--) {
		cin >> n;
		cout << sol(n) << endl;
	}
	return 0;
}