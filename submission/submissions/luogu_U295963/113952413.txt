//  OJ: 洛谷
//  提交ID: 113952413
//  题目ID: U295963
#include <iostream>
#include <vector>
using namespace std;

int n, m, p;
vector<int> values, counts;
int ans = 0;

void dfs(int amount, int idx) {
    if (amount == p) {
        ans++;
        return;
    }
    if (amount > p || idx >= n) {
        return;
    }
    int maxCount = min((p - amount) / values[idx], counts[idx]);
    for (int i = 0; i <= maxCount; i++) {
        dfs(amount + i * values[idx], idx + 1);
    }
}

int main() {
    cin >> n >> m >> p;
    values.resize(n);
    counts.resize(n);
    for (int i = 0; i < n; i++) {
        cin >> values[i] >> counts[i];
    }
    dfs(0, 0);
    cout << ans << endl;
    return 0;
}