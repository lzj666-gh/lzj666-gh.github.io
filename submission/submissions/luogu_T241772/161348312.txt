//  OJ: 洛谷
//  提交ID: 161348312
//  题目ID: T241772
#include<bits/stdc++.h>
#define lblk(i) ((i) / m * m)
#define rblk(i) (((i) / m + 1) * m - 1)
#define smblk(i, j) ((i) / m == (j) / m)
#define gtblk(i) ((i) / m)
using namespace std;
int n, l, r, a[1000000], m, f[2000][2000], val[1000000], idx, cnt[1000000];
vector<int> v[1000000];
map<int, int> mp;
bool mayy[100000 + 10]{};
signed main() {
	ios_base::sync_with_stdio(false);
	cin >> n;
	m = pow(n, 1.0 / 2.6999758);
	for (int i = 1; i <= n; ++i) {
		cin >> a[i];
		if (!mp[a[i]]) mp[a[i]] = ++idx;
		val[mp[a[i]]] = a[i];
		a[i] = mp[a[i]];
		v[a[i]].push_back(i);
	}
	val[0] = 0x7f7f7f7f;
	for (int j = 0; j <= n / m; ++j) {
		memset(cnt, 0, sizeof cnt);
		int mx = 0, ans = 0;
		for (int i = j * m; i <= n; ++i) {
			cnt[a[i]]++;
			if (cnt[a[i]] > mx || (cnt[a[i]] == mx && val[a[i]] < val[ans])) {
				mx = cnt[a[i]];
				ans = a[i];
			}
			f[j][gtblk(i)] = ans;
		}
	}
	for (int cbc = 1; cbc <= n; ++cbc) {
		cin >> l >> r;
		vector<int>may;
		for (int i = l; i <= rblk(l); ++i) may.push_back(a[i]);
		for (int i = lblk(r); i <= r; ++i) may.push_back(a[i]);
		if (gtblk(l) + 1 < gtblk(r)) {
			may.push_back(f[gtblk(l) + 1][gtblk(r) - 1]);
		}
		int mx = 0, ans = 0;
		memset(mayy, 0, sizeof mayy);
		while (!may.empty()) {
			int k = may.back(); may.pop_back();
			if (mayy[k]) continue;
			mayy[k] = 1;
			int now = upper_bound(v[k].begin(), v[k].end(), r) - lower_bound(v[k].begin(), v[k].end(), l);
			if (now > mx || (now == mx && val[k] < val[ans])) {
				mx = now;
				ans = k;
			}
		}
		cout << val[ans] << endl;
	}
	return 0;
}