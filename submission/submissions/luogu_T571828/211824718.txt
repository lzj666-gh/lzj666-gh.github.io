//  OJ: 洛谷
//  提交ID: 211824718
//  题目ID: T571828
#include <iostream>
#include <vector>
#include <string>
using namespace std;

vector<string> task1() {  // 4080x = x<<12 - x<<4
    return {
        "+ a x",     // a = x
        "< x 8",     // x = x<<8
        "- x a",     // x = (x<<8)-x = x*255
        "< x 4",     // x = x*255*16 = 4080x
        "! x"
    };
}

vector<string> task2() {  // x/4080 = (x>>12) - (x>>24)/255
    return {
        "> a 12",        // a = x>>12
        "> b 24",        // b = x>>24
        "+ c a",         // c = (x>>12)
        "- c b",         // c = (x>>12) - (x>>24)
        "> b 8",         // b = (x>>24)>>8 = x>>32
        "- c b",         // 修正误差
        "! c"
    };
}

vector<string> task3() {  // 4080 = 0xFF0
    return {
        "- a a",         // a=0
        "- a 1",         // a=0xFFFFFFFFFFFFFFFF
        "> a 52",       // a=0xF (1111)
        "< a 8",        // a=0xF00 (15<<8=3840)
        "< a 4",        // a=0xF000 (61440)
        "> a 4",        // a=0xF00 (3840)
        "! a"           // 输出4080需要更精确计算
    };
}

vector<string> task4() {  // 俄罗斯农民乘法展开
    vector<string> ins = {"+ a a", "+ b x", "+ c y"};
    for (int i = 0; i < 64; ++i) {
        ins.push_back("^ d c");  // d = c & 1
        ins.push_back("> d 63");
        ins.push_back("< d 63");
        ins.push_back("- d 1");
        ins.push_back("^ d d");  // d = mask
        ins.push_back("+ a d");  // add masked b
        
        ins.push_back("< b 1");  // b <<= 1
        ins.push_back("> c 1");  // c >>= 1
    }
    ins.push_back("! a");
    return ins;
}

vector<string> task5() {  // 试商法除法展开
    vector<string> ins = {
        "+ a a",        // 商清零
        "+ b x",        // 余数
        "+ c y",        // 除数
        "< c 31"        // 对齐最高位
    };
    for (int i = 31; i >= 0; --i) {
        ins.push_back("+ d b");  // 余数-除数
        ins.push_back("- d c");
        ins.push_back("> d 63"); // 符号位
        ins.push_back("< d 0");  // 转bool
        ins.push_back("< d " + to_string(i)), // 设置商位
        ins.push_back("+ a d");  // 更新商
        
        ins.push_back("^ d d"); // d=0
        ins.push_back("- d 1"); // d=-1
        ins.push_back("< d " + to_string(i)), // mask
        ins.push_back("^ e d"),  // e=~mask
        ins.push_back("+ d c"),  // mask*c
        ins.push_back("< d " + to_string(i)),
        ins.push_back("- b d");  // 有条件减法
    }
    ins.push_back("! a");
    return ins;
}

vector<string> task7() {  // 位填充算法
    return {
        "- a x",        // a = x-1
        "- a 1",
        "+ b a",        // 开始填充
        "> c 1",        // c = b>>1
        "+ b c",        // b |= c
        "> c 2",
        "+ b c",
        "> c 4",
        "+ b c",
        "> c 8",
        "+ b c",
        "> c 16",
        "+ b c",
        "> c 32",
        "+ b c",        // 完成填充
        "+ b 1",        // 最终结果
        "! b"
    };
}

int main() {
    int task;
    cin >> task;
    vector<string> ins;
    
    switch(task) {
        case 1: ins = task1(); break;
        case 2: ins = task2(); break;
        case 3: ins = task3(); break;
        case 4: ins = task4(); break;
        case 5: ins = task5(); break;
        case 7: ins = task7(); break;
        // 任务6需要更复杂实现
    }
    
    for (auto& s : ins) cout << s << endl;
    return 0;
}