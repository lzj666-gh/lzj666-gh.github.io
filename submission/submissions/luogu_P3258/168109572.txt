//  OJ: 洛谷
//  提交ID: 168109572
//  题目ID: P3258
#include<bits/stdc++.h>
using namespace std;
struct Edge {
	int v, nxt;
};
Edge* edge;
int idx;
int* head;
void add(int u, int v) {
	edge[++idx] = { v,head[u] };
	head[u] = idx;
}
int** f;
int t;
int* dep;
void get_f(int now, int fa, int d) {
	dep[now] = d;
	f[now][0] = fa;
	for (int i = 1; i <= t; ++i) f[now][i] = f[f[now][i - 1]][i - 1];
	for (int i = head[now]; i; i = edge[i].nxt) {
		if (edge[i].v == fa) continue;
		get_f(edge[i].v, now, d + 1);
	}
}
int n;
int lca(int a, int b) {
	if (dep[a] < dep[b]) swap(a, b);
	int cdep = dep[a] - dep[b];
	for (int i = t; i >= 0; --i) if ((1 << i) & cdep) a = f[a][i];
	if (a == b) {
		return a;
	}
	for (int i = t; i >= 0; --i) if (f[a][i] ^ f[b][i]) a = f[a][i], b = f[b][i];
	return f[a][0];
}
int* cf;
void work(int now, int fa) {
	for (int i = head[now]; i; i = edge[i].nxt) {
		if (edge[i].v == fa) continue;
		work(edge[i].v, now);
		cf[now] += cf[edge[i].v];
	}
}
int* a;
int main() {
	ios_base::sync_with_stdio(false);
	cin >> n;
	t = ceil(log2(n) + 1);
	a = new int[n + 1];
	cf = new int[n + 1];
	dep = new int[n + 1];
	head = new int[n + 1];
	edge = new Edge[n + 1];
	for (int i = 1; i <= n; ++i) f[i] = new int[t + 1];
	dep[0] = INT_MAX;
	for (int i = 1; i <= n; ++i) cin >> a[i];
	for (int i = 1, u, v; i < n; ++i) cin >> u >> v, add(u, v), add(v, u);
	get_f(1, 0, 1);
	for (int i = 1; i < n; ++i) {
		int L = lca(a[i], a[i + 1]);
		cf[a[i]]++; cf[a[i + 1]]++; cf[L]--; cf[f[L][0]]--;
	}
	work(1, 0);
	for (int i = 2; i <= n; ++i) cf[a[i]]--;
	for (int i = 1; i <= n; ++i) cout << cf[i] << endl;
	return 0;
}