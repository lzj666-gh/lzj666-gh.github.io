//  OJ: 洛谷
//  提交ID: 218152612
//  题目ID: P9235
#include<bits/stdc++.h>
using namespace std;
constexpr int N = 500000 + 10, M = 1000000 + 10, B = 25;
struct Edge {
	int v, w, nxt;
}edge[M];
int head[N], idx, f[N][B], dep[N], ans[N], mn[N][B];
void add(int u, int v, int w) {
	edge[++idx] = { v,w,head[u] };
	head[u] = idx;
}
int bel[N];
void dfs(int x, int fa) {
	bel[x] = bel[fa];
	dep[x] = dep[fa] + 1;
	ans[x] = max(x, ans[fa]);
	f[x][0] = fa;
	for (int i = 1; i < B; ++i) f[x][i] = f[f[x][i - 1]][i - 1];
	for (int i = 1; i < B; ++i) mn[x][i] = min(mn[f[x][i - 1]][i - 1], mn[x][i - 1]);
	for (int i = head[x]; i; i = edge[i].nxt)
		if (edge[i].v ^ fa)
			mn[edge[i].v][0] = edge[i].w,
			dfs(edge[i].v, x);
}
int LCA(int x, int y) {
	if (bel[x] ^ bel[y]) return -1;
	int ans = INT_MAX;
	if (dep[x] < dep[y]) swap(x, y);
	int cur = dep[x] - dep[y];
	for (int i = 0; i < B; ++i)
		if ((1 << i) & cur)
			ans = min(ans, mn[x][i]),
			x = f[x][i];
	if (x == y) return ans;
	for (int i = B - 1; i >= 0; --i)
		if (f[x][i] ^ f[y][i])
			ans = min(ans, mn[x][i]),
			ans = min(ans, mn[y][i]),
			x = f[x][i], y = f[y][i];
	return min({ ans,mn[x][0],mn[y][0] });
}
int n, m, q;
namespace MinTree {
	struct Edge {
		int u, v, w;
		friend bool operator<(const Edge& a, const Edge& b) {
			return a.w > b.w;
		}
	}edge[M];
	int fa[N];
	int find(int x) { return fa[x] == x ? x : fa[x] = find(fa[x]); }
	void main() {
		cin >> n >> m >> q;
		for (int i = 1; i <= m; ++i) cin >> edge[i].u >> edge[i].v >> edge[i].w;
		for (int i = 1; i <= n; ++i) fa[i] = i;
		sort(edge + 1, edge + m + 1);
		int cnt = 0, i = 1;
		while (i <= m && cnt < n - 1) {
			int x = find(edge[i].u), y = find(edge[i].v);
			if (x ^ y) {
				fa[x] = y;
				add(edge[i].u, edge[i].v, edge[i].w);
				add(edge[i].v, edge[i].u, edge[i].w);
				cnt++;
			}
			i++;
		}
	}
}
int main() {
	memset(mn, 0x3f, sizeof mn);
	cin.tie(0)->sync_with_stdio(false);
	MinTree::main();
	for (int i = 1; i <= n; ++i) if (!bel[i]) bel[i] = i, dfs(i, i);
	//for (int i = 1; i <= n; ++i) cout << bel[i] << " \n"[i == n];
	//for (int i = 1; i <= n; ++i) for (int j = 0; j < 3; ++j) cout << mn[i][j] << " \n"[j == 2];
	while (q--) {
		int x, y;
		cin >> x >> y;
		cout << LCA(x, y) << endl;
	}
	return 0;
}