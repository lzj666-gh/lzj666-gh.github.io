//  OJ: 洛谷
//  提交ID: 145307361
//  题目ID: P1379
#include<bits/stdc++.h>
using namespace std;
const int d[4][2]={{0,1},{1,0},{0,-1},{-1,0}};
const string want="123804765";
struct pos {
	int x,y;
};
inline pos get(int k) {
	switch(k) {
		case 1: {
			return {1,1};
			break;
		}
		case 2: {
			return {1,2};
			break;
		}
		case 3: {
			return {1,3};
			break;
		}
		case 4: {
			return {2,1};
			break;
		}
		case 5: {
			return {2,2};
			break;
		}
		case 6: {
			return {2,3};
			break;
		}
		case 7: {
			return {3,1};
			break;
		}
		case 8: {
			return {3,2};
			break;
		}
		case 9: {
			return {3,3};
			break;
		}
		default: {
			return {0,0};
			break;
		}
	}
}
inline int get(pos k) {
	return (k.x-1)*3+k.y;
}
inline int gj(string k) {
	int ans=0;
	for(int i=0; i<k.size(); ++i) {
		int j=want.find(k[i]);
		pos l=get(i+1),r=get(j+1);
		ans+=abs(l.x-r.x)+abs(l.y-r.y);
	}
	return ans;
	return 0;
}
struct Chess {
	string s;
	int stp;
	Chess(string ss="000000000",int st=0):s(ss),stp(st) {}
	char& operator[](int&i) {
		return s[i-1];
	}
	friend bool operator<(const Chess&a,const Chess&b) {
		return gj(a.s)+a.stp>gj(b.s)+b.stp;
	}
};
string beg;
map<string,bool>vis;
void bfs() {
	priority_queue<Chess>q;
	q.push({beg,0});
//	vis[beg]=true;
	while(!q.empty()){
		Chess now=q.top();q.pop();
//		cout<<"try:"<<endl;
//		for(int i=0,j=0;i^now.s.size();++i,++j){
//			if(j==3) cout<<endl,j=0;
//			cout<<now.s[i];
//		}
//		cout<<"with"<<now.stp<<endl;
//		cout<<now.s<<' '<<now.stp<<endl;
		if(now.s==want){
			cout<<now.stp<<endl;
			return;
		}
		if(vis[now.s]) continue;
		vis[now.s]=true;
		pos l=get(now.s.find('0')+1),r;
		for(int i=0;i^4;++i){
			r={l.x+d[i][0],l.y+d[i][1]};
			string nw=now.s;
			swap(nw[now.s.find('0')],nw[get(r)-1]);
//			cout<<"try "<<nw<<endl;
			if(r.x<=3&&r.x>=1&&r.y<=3&&r.y>=1) q.push({nw,now.stp+1});
		}
	}
}
int main() {
	ios_base::sync_with_stdio(false);
	cin>>beg;bfs();
	return 0;
}