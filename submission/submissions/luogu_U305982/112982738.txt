//  OJ: 洛谷
//  提交ID: 112982738
//  题目ID: U305982
#include<bits/stdc++.h>
using namespace std;
stack <int> b[1000+10];
int n,m,l[100+10],x_0,y_0;
struct node{
	int l,st;
	node(int ll,int stt){
		l=ll;st=stt;
	}
};
struct node2{
	int x=0,y=0;
}k[100+10];
queue<node> q;
int bfs(int be,int en){
	if(be==en) return 0;
	q.push(node(be,0));
	l[be]=0;
	while(!q.empty()){
		node nn=q.front();q.pop();
		if(b[nn.l].empty()) continue;
		if(nn.l==en) return nn.st;
		while(!b[nn.l].empty()){
			int bb=b[nn.l].top();
			b[nn.l].pop();
			if(l[bb]!=0||bb==be) continue;
			q.push(node(bb,nn.st+1));
			l[bb]=nn.st+1;
		}
	}
	return -1;
}
int main(){
	int T;
	cin>>T;
	if(T==0){
		const int N = 100000;
		char a[N], b[N], c[N];
	    int n;
	    cin >> n;
	    a[0] = b[0] = c[0] = '1';
	    for (int i = 1; i < N; i++) {
	        a[i] = b[i] = c[i] = '0';
	    }
	    if (n == 1 || n == 2) {
	        cout << 1 << endl;
	        return 0;
	    }
	    for (int i = 3; i <= n; i++) {
	        int carry = 0, len = max(strlen(a), strlen(b));
	        for (int j = 0; j < len; j++) {
	            int x = a[j] - '0', y = b[j] - '0';
	            int sum = x + y + carry;
	            c[j] = sum % 10 + '0';
	            carry = sum / 10;
	        }
	        if (carry) c[len++] = carry + '0';
	        c[len] = '\0';
	        strcpy(a, b);
	        strcpy(b, c);
	    }
	    int len = strlen(c);
	    bool leading_zero = true;
	    for (int i = len - 1; i >= 0; i--) {
	        if (leading_zero && c[i] == '0') continue;
	        leading_zero = false;
	        cout << c[i];
	    }
		cout << endl;
 	    return 0;
	}
	if(T==2){
		cin>>n>>m>>x_0>>y_0;
		for(int i=1;i<=n;i++){
			int kk,x,y;
			cin>>kk>>x>>y;
			k[kk].x=x;k[kk].y=y;
		}
		for(int i=1;i<=m;i++){
			int kk;
			cin>>kk;
			k[kk].x=0;k[kk].y=0;
		}
		for(int i=1;i<=100;i++){
			b[k[i].x].push(k[i].y);
			b[k[i].y].push(k[i].x);
		}
		cout<<bfs(x_0,y_0)<<endl;
		return 0;
	}
}