//  OJ: 洛谷
//  提交ID: 213917476
//  题目ID: T242490
#include<bits/stdc++.h>
#define int long long
using namespace std;
constexpr int mod = 1e9 + 7;
namespace IO {
	const int SIZE = (1 << 20) + 1;
	char ibuf[SIZE], * iS, * iT, obuf[SIZE], * oS = obuf, * oT = obuf + SIZE - 1;
	char _st[55];
	int _qr = 0;
	inline char gc() {
		return (iS == iT ? iT = (iS = ibuf) + fread(ibuf, 1, SIZE, stdin), (iS == iT ? EOF : *iS++) : *iS++);
	}
	inline void qread() {}
	template<class T1, class ...T2>
	inline void qread(T1& IEE, T2&... ls) {
		if (is_same<T1, char>::value) {
			IEE = gc();
			while (IEE == ' ' || IEE == '\n' || IEE == '\r' || IEE == '\t') IEE = gc();
			qread(ls...);
			return;
		}
		T1 __ = 0, ___ = 1;
		char ch;
		while (!isdigit(ch = gc())) ___ = (ch == '-') ? -___ : ___;
		do {
			__ = (__ << 1) + (__ << 3) + (ch ^ 48);
		} while (isdigit(ch = gc()));
		__ *= ___;
		IEE = __;
		qread(ls...);
		return;
	}
	inline void flush() {
		fwrite(obuf, 1, oS - obuf, stdout);
		oS = obuf;
		return;
	}
	inline void putc_(char _x) {
		*oS++ = _x;
		if (oS == oT) flush();
	}
	inline void qwrite() {}
	template<class T1, class ...T2>
	inline void qwrite(T1 IEE, T2... ls) {
		if (is_same<T1, char>::value) {
			putc_(IEE);
			qwrite(ls...);
			return;
		}
		if (!IEE) putc_('0');
		while (IEE) _st[++_qr] = IEE % 10 + '0', IEE /= 10;
		while (_qr) putc_(_st[_qr--]);
		qwrite(ls...);
		return;
	}
	struct Flusher_ { ~Flusher_() { flush(); } }io_flusher;
}
using IO::qread;
using IO::qwrite;
struct BIT {
#define lb(x) (x & -x)
	int s[200050];
	size_t n;
	void add(int x, int v) {
		for (; x <= n; x += lb(x))
			s[x] += v;
	}
	int query(int x) {
		int ans = 0;
		for (; x; x -= lb(x))
			ans += s[x];
		return ans;
	}
	int ask(int x) {
		int ans = 0, sum = 0;
		for (int i = ceil(log2(n)); i >= 0; --i) {
			if (ans + (1 << i) <= n && sum + s[ans + (1 << i)] < x) {
				ans += 1 << i;
				sum += s[ans];
			}
		}
		return ans + 1;
	}
	void clear(int n) {
		this->n = n;
		for (int i = 1; i <= n; ++i)
			add(i, 1);
	}
	void print() {
		int lst = 0, now = 0;
		for (int i = 1; i <= n; ++i) {
			now = query(i);
			cout << now - lst << ' ';
			lst = now;
		}
		cout << endl;
	}
}t;
int a[200050], ans[200050], n;
signed main() {
	cin.tie(0)->sync_with_stdio(false);
	qread(n);
	t.clear(n);
	for (int i = 2; i <= n; ++i)
		qread(a[i]);
	for (int i = n; i >= 1; --i) {
		ans[i] = t.ask(a[i] + 1);
		t.add(ans[i], -1);
		//cout << ans[i] << ':'; t.print();
	}
	for (int i = 1; i <= n; ++i)
		cout << ans[i] << endl;
	return 0;
}