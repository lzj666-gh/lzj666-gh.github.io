//  OJ: 洛谷
//  提交ID: 193808379
//  题目ID: P4462
#include<bits/stdc++.h>
using namespace std;
int vis[100000 + 10], a[100000 + 10], k;
long long sum;
void add(int x) {
	sum -= vis[a[x]] * vis[a[x] ^ k];
	vis[a[x]]++;
	sum += vis[a[x]] * vis[a[x] ^ k];
}
void remove(int x) {
	sum -= vis[a[x]] * vis[a[x] ^ k];
	vis[a[x]]--;
	sum += vis[a[x]] * vis[a[x] ^ k];
}
int n, Q, bel[100000 + 10];
struct query {
	int l, r, id; long long ans;
	friend bool operator<(const query& a, const query& b) {
		return bel[a.l] == bel[b.l] ? bel[a.l] % 2 == 1 ? a.r<b.r : a.r>b.r : bel[a.l] < bel[b.l];
	}
}q[100000 + 10];
signed main() {
	cin.tie(0)->sync_with_stdio(false);
	cin >> n >> Q >> k;
	for (int i = 1; i <= n; ++i) cin >> a[i], a[i] ^= a[i - 1];
	int t1 = 1, t2 = pow(n, 0.5), t3 = 1;
	for (int i = 1; i <= n; ++i) {
		bel[i] = t3;
		if (t1 == t2) t1 = 1, t3++;
		t1++;
	}
	for (int j = 1; j <= Q; ++j) cin >> q[j].l >> q[j].r, q[j].id = j, q[j].l--;
	sort(q + 1, q + Q + 1);
	q[0].l = 1;
	for (int j = 1; j <= Q; ++j) {
		while (q[j - 1].l < q[j].l) remove(q[j - 1].l), q[j - 1].l++;
		while (q[j - 1].l > q[j].l) add(q[j - 1].l - 1), q[j - 1].l--;
		while (q[j - 1].r < q[j].r) add(q[j - 1].r + 1), q[j - 1].r++;
		while (q[j - 1].r > q[j].r) remove(q[j - 1].r), q[j - 1].r--;
		q[j].ans = sum;
	}
	sort(q + 1, q + Q + 1, [](const query& a, const query& b)->bool {return a.id < b.id; });
	for (int i = 1; i <= Q; ++i) cout << q[i].ans << endl;
	return 0;
}