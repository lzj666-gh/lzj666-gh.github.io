//  OJ: 洛谷
//  提交ID: 168105070
//  题目ID: CF1399F
#include<bits/stdc++.h>
using namespace std;
int n, dp[7000 + 10][7000 + 10];
struct Line {
	int l, r;
}a[6000 + 10];
vector<int>lsh, R[6000 + 10];
int dfs(int l, int r) {
	if (l > r) return dp[l][r] = 0;
	if (dp[l][r] ^ -1) return dp[l][r];
	bool flg = 0;
	dp[l][r] = dfs(l, r - 1);
	for (int k : R[r]) {
		if (a[k].l == l) flg = 1;
		else if (a[k].l > l) dp[l][r] = max(dp[l][r], dfs(l, a[k].l - 1) + dfs(a[k].l, r));
	}
	dp[l][r] += flg;
	return dp[l][r];
}
int main() {
	ios_base::sync_with_stdio(false);
	int T;
	cin >> T;
	while (T--) {
		static int m;
		cin >> n;
		lsh.clear();
		fill(R, R + m + 1, vector<int>());
		for (int i = 1; i <= n; ++i) cin >> a[i].l >> a[i].r, lsh.push_back(a[i].l), lsh.push_back(a[i].r);
		sort(lsh.begin(), lsh.end());
		lsh.erase(unique(lsh.begin(), lsh.end()), lsh.end());
		m = lsh.size();
		for (int i = 1; i <= n; ++i) a[i].l = lower_bound(lsh.begin(), lsh.end(), a[i].l) - lsh.begin() + 1,
			a[i].r = lower_bound(lsh.begin(), lsh.end(), a[i].r) - lsh.begin() + 1;
		for (int i = 1; i <= n; ++i) R[a[i].r].push_back(i);
		for (int i = 1; i <= m; ++i) for (int j = 1; j <= m; ++j) dp[i][j] = -1;
		cout << dfs(1, m) << endl;
	}
	return 0;
}
//CF1399F