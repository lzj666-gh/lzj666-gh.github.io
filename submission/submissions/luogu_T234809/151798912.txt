//  OJ: 洛谷
//  提交ID: 151798912
//  题目ID: T234809
#include<bits/stdc++.h>
#pragma(disable:6386)
#define inf 1e20
#define cbc(k) (k > 13 ? k - 13 : 0)
#define cyc(k) ((m != k) + (n != k))
using namespace std;
int a, b, c, d;
double dp[16][16][16][16][5][5];
int main() {
	ios_base::sync_with_stdio(false);
	memset(dp, -1, sizeof dp);
	cin >> a >> b >> c >> d;
	cout << fixed << setprecision(3);
	if (a + b + c + d > 54 || (cbc(a) + cbc(b) + cbc(c) + cbc(d) > 2)) {
		cout << "-1.000" << endl;
		return 0;
	}
	dp[a][b][c][d][4][4] = 0;
	for (int i = 13; i >= 0; --i)
		for (int j = 13; j >= 0; --j)
			for (int k = 13; k >= 0; --k)
				for (int l = 13; l >= 0; --l)
					for (int m = 0; m <= 4; ++m)
						for (int n = 0; n <= 4; ++n) {
#define now dp[i][j][k][l][m][n]
							if (i + cyc(0) >= a && j + cyc(1) >= b && k + cyc(2) >= c && l + cyc(3) >= d) {
								now = 0;
								continue;
							}
							int sum = i + j + k + l + cyc(4);
							now = 1;
							if (i < 13) now += dp[i + 1][j][k][l][m][n] * (13 - i) / (54 - sum);
							if (j < 13) now += dp[i][j + 1][k][l][m][n] * (13 - j) / (54 - sum);
							if (k < 13) now += dp[i][j][k + 1][l][m][n] * (13 - k) / (54 - sum);
							if (l < 13) now += dp[i][j][k][l + 1][m][n] * (13 - l) / (54 - sum);
							if (m == 4) {
								double lzj = inf;
								for (int u = 0; u < 4; u++)
									lzj = min(lzj, dp[i][j][k][l][u][n] / (54 - sum));
								now += lzj;
							}
							if (n == 4) {
								double lzj = inf;
								for (int u = 0; u < 4; u++)
									lzj = min(lzj, dp[i][j][k][l][m][u] / (54 - sum));
								now += lzj;
							}
//							cout << i << ' ' << j << ' ' << k << ' ' << l << ' ' << m << ' ' << n << ' ' << now << endl;
						}
	if (dp[0][0][0][0][4][4] > 54)
		cout << "-1.000" << endl;
	else
		cout << dp[0][0][0][0][4][4] << endl;
	return 0;
}