//  OJ: 洛谷
//  提交ID: 137657493
//  题目ID: T219536
#include<bits/stdc++.h>
using namespace std;
int t=-1,n,tmp,findd[1000000+10],ikun;
string opt;
template<typename T>
struct queue1{
	vector<T> v;
	int frt,ed;
	void _init(){
		frt=0,ed=0;
		v.clear();
	}
	vector<int>::iterator begin(){
		return v.begin()+frt;
	}
	vector<int>::iterator end(){
		return v.first()+ed;
	}
	void push_back(int k){
		if(v.size()==ed) v.push_back(k),++ed;
		else v[ed++]=k;
	}
	void pop_front(){
		if(front!=ed) front++;
	}
};
int main(){
	ios_base::sync_with_stdio(false);
	while(t){
		memset(findd,0,sizeof findd);
		cin>>t; 
		vector<int>qwewe;
		vector<int>v[1000+10];
		for(int i=1;i<=t;++i){
			cin>>n;
			while(n--) cin>>tmp,findd[tmp]=i;
			cin>>opt;
			cout<<"Scenario #"<<++ikun<<endl;
			while(opt!="STOP"){
				if(opt=="ENQUEUE"){
					int x;
					cin>>x;
					bool flag=1;
					for(int k:qwewe){
						if(k==findd[x]){
							flag=0;
							break;
						}
					}
					if(flag) qwewe.push_back(findd[x]);
					flag=1;
					for(int k:v[findd[x]]){
						if(k==x){
							flag=0;break;
						}
					}
					if(flag) v[findd[x]].push_back(x);
				}
				else{
					for(int k:qwewe){
						if(v[k].size()){
							cout<<v[k].front()<<endl;;
							v[k].erase(v[k].begin());
							break;
						}
					}
				}
				cin>>opt;
			}
			for(int k:qwewe){
				for(int j:v[k]) cout<<j<<endl;
			}
			cout<<endl;
		}
	}
	return 0;
}