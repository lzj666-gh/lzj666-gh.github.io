//  OJ: 洛谷
//  提交ID: 166748564
//  题目ID: T330692
#include<bits/stdc++.h>
using namespace std;
const int mod=(1<<31)-1;
int n,m,w[1000+10][1000+10],d[1000+10];
bool vis[1000+10];
void dijkstra(){
	memset(d,0x3f,sizeof d);
	d[1]=0;
	for(int i=0;i<n-1;i++){
		int t=-1;
		for(int j=1;j<=n;j++)
			if(!vis[j]&&(t==-1||d[t]>d[j]))
				t=j;
		vis[t]=true;
		for(int j=1;j<=n;j++)
			d[j]=min(d[j],d[t]+w[t][j]);
	}
}
void prim(){
	memset(vis,0,sizeof vis);
	vis[1]=true;
	int res=1;
	for(int i=0;i<n-1;i++){
		int t=-1;
		for(int j=2;j<=n;j++)
			if(!vis[j]&&(t==-1||d[t]>d[j]))
				t=j;
		long long cnt=0;
		for(int j=1;j<=n;j++)
			if(vis[j]&&d[t]==d[j]+w[j][t])
				cnt++;
		vis[t]=true;
		res=1ll*res*cnt%mod;
	}
	cout<<res<<endl;
}
int main(){
	cin>>n>>m;
	memset(w,0x3f,sizeof w);
	while(m--){
		int a,b,c;
		cin>>a>>b>>c;
		w[a][b]=w[b][a]=min(w[a][b],c);
	}
	dijkstra();
	prim();
	return 0;
}