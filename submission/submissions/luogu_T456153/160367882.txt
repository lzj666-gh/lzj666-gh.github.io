//  OJ: 洛谷
//  提交ID: 160367882
//  题目ID: T456153
#include<bits/stdc++.h>
#define int long long
#define lblk(i) ((i) / m * m)
#define rblk(i) (((i) / m + 1) * m - 1)
#define smblk(i, j) ((i) / m == (j) / m)
#define gtblk(i) ((i) / m)
using namespace std;
set<int>st[325];
int n, opt, l, r, a[100000 + 10], m, blk[325];
long long c;
__int128_t lzj;
main() {
	ios_base::sync_with_stdio(false);
	cin >> n;
	for (int i = 1; i <= n; ++i) cin >> a[i];
	m = sqrt(n);
	for(int i=1;i<=n;++i) st[gtblk(i)].insert(a[i]);
	for (int q = 1; q <= n; ++q) {
		cin >> opt >> l >> r >> c;
		if (!opt) {
			if (smblk(l, r)) {
				for (int i = l; i <= r; ++i) a[i] += c;
				st[gtblk(l)].clear();
				for (int i = lblk(l); i <= rblk(l); ++i) st[gtblk(l)].insert(a[i]);
				continue;
			}
			for (int i = l; i <= rblk(l); ++i) a[i] += c;
			st[gtblk(l)].clear();
			for (int i = lblk(l); i <= rblk(l); ++i) st[gtblk(l)].insert(a[i]); 
			for (int i = lblk(r); i <= r; ++i) a[i] += c;
			st[gtblk(r)].clear();
			for (int i = lblk(r); i <= rblk(r); ++i) st[gtblk(r)].insert(a[i]);
			if (gtblk(l) + 1 < gtblk(r)) for (int i = gtblk(l) + 1; i < gtblk(r); ++i) blk[i] += c;
		}
		else {
			int ans = LLONG_MIN;
			if (smblk(l, r)) {
				for (int i = l; i <= r; ++i) if (a[i] + blk[gtblk(i)] < c) ans = max(ans, a[i] + blk[gtblk(i)]);
				cout << ans << endl;
				continue;
			}
			for (int i = l; i <= rblk(l); ++i) if (a[i] + blk[gtblk(i)] < c) ans = max(ans, a[i] + blk[gtblk(i)]);
			for (int i = lblk(r); i <= r; ++i) if (a[i] + blk[gtblk(i)] < c) ans = max(ans, a[i] + blk[gtblk(i)]);
			if (gtblk(l) + 1 < gtblk(r))
				for (int i = gtblk(l) + 1; i < gtblk(r); ++i){
					if (*st[i].begin() + blk[i] >= c) continue;
					auto tmp=st[i].lower_bound(c - blk[i]);
					tmp--;
					ans = max(ans, *tmp + blk[i]);
				}
			cout << (ans == LLONG_MIN ? -1 : ans) << endl;
		}
//		for(int i=1;i<=n;++i) cout<<a[i]+blk[gtblk(i)]<<' ';cout<<endl;
	}
	return 0;
}