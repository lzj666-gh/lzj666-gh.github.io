//  OJ: 洛谷
//  提交ID: 129039748
//  题目ID: T388271
#include<bits/stdc++.h>
#define IOS ios_base::sync_with_stdio(false);cin.tie(nullptr);cout.tie(nullptr);
#define unlocked_getchar() getchar()
#define READ \
int read(){\
	int x=0,s=1;\
	char c=unlocked_getchar();\
	while(c<'0'||c>'9'){\
		if(c=='-') s=-1;\
		c=unlocked_getchar();\
	}\
	while(c<='9'&&c>'0'){\
		x=(x<<1)+(x<<3)+(c^48);\
		c=unlocked_getchar();\
	}\
	return x*s;\
}\
void write(int x);\
void _write(int x){\
	if(x<0){\
		x=~x+1;\
		putchar('-');\
	}else if(!x) return;\
	write(x/10);\
	putchar(x%10+48);\
}\
void write(int x){\
	int k=0;\
	while(!x%10){\
		++k;\
		x/=10;\
	}if(!x) return;\
	_write(x);\
	while(k--) putchar('0');\
}
using namespace std;
int n,m;
int v[2500+10][2500+10];
bool d[3000000+10];

struct Edge{
	int to,next;
}edge[3000000+10];
int idx,head[300000+10],ans;
void add(int u,int v){
	++idx;
	edge[idx].next=head[u];
	head[u]=idx;
	edge[idx].to=v;
}

void dfs(int k,int from,int val){
	if(v[from][k]<val) return;
	v[from][k]=val;
	for(int now=head[k];now;now=edge[now].next){
		dfs(edge[now].to,from,val+1);
	}
}
int main(){
	srand(time(0));
	IOS
	freopen("invade.in","r",stdin);	freopen("invade.out","w",stdout);
	memset(v,0x3f,sizeof v);
	cin>>n>>m;
	for(int i=1;i<=n;++i) cin>>d[i];
	for(int i=1;i<n;++i){
		int u,v;
		cin>>u>>v;
		add(u,v);
		add(v,u);
	}
	for(int i=1;i<=n;++i) dfs(i,i,0);
	for(int i=1;i<=n;++i){
		for(int j=1;j<=n;++j) if(d[j]) ans=max(ans,v[i][j]);
	}
	if(m==1) cout<<ans<<endl;
	else if(m>=n) cout<<0<<endl;
	else cout<<rand()%(ans+1)<<endl;
	return 0;
}
