//  OJ: 洛谷
//  提交ID: 174938354
//  题目ID: P2672
#include<bits/stdc++.h>
using namespace std;
int n, a[100000 + 5], s[100000 + 5], kth[5000 + 5][5000 + 5];
long long ans[100000 + 5];
int main() {
// 	freopen("salesman.in", "r", stdin);
// 	freopen("salesman.out", "w", stdout);
	ios_base::sync_with_stdio(false);
	cin >> n;
	for (int i = 1; i <= n; ++i) cin >> s[i];
	for (int i = 1; i <= n; ++i) cin >> a[i];
	long long anss = 0;
	for (int i = 1; i <= n; ++i) ans[i] = s[i] * 2 + a[i], anss = max(anss, ans[i]);
	cout << anss << endl;
	for (int i = 1; i <= n; ++i) {
		for (int j = 1, k = i - 1; j < i; ++j, --k) kth[i][j] = a[k];
		for (int j = i; j > 1; j--) if (a[j] < a[j - 1]) swap(a[j], a[j - 1]); else break;
	}
//	for (int i = 1; i <= n; ++i, cout << endl) for (int j = 1; j <= n; ++j) cout << kth[i][j] << ' ';
	for (int i = 2; i <= n; ++i) {
		for (int j = i; j <= n; ++j)
			ans[j] += kth[j][i - 1]; 
		anss = 0;
		for (int i = 1; i <= n; ++i) anss = max(anss, ans[i]);
		cout << anss << endl;
	}
	return 0;
}
/*
for 60 pts
*/