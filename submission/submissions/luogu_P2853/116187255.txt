//  OJ: 洛谷
//  提交ID: 116187255
//  题目ID: P2853
#include<bits/stdc++.h>
using namespace std;
struct Edge{
	vector <int> nei;
	void s(){sort(nei.begin(),nei.end());}
}edge[1000000];
int n,m,k;
bool b[100000+10],ans[100000+10];
void dfs(int k){
	if(b[k]||!k) return;
	cout<<k<<' ';
	b[k]=true;
	for(int i=0;i<edge[k].nei.size();i++){
		dfs(edge[k].nei[i]);
	}
}
void bfs(int x){
	queue <int> q;
	q.push(x);
	b[x]=true;
	while(!q.empty()){
		int d=q.front();
//		cout<<d<<' ';
		q.pop();
		for(int i=0;i<edge[d].nei.size();i++){
			if(b[edge[d].nei[i]]==false) b[edge[d].nei[i]]=true,q.push(edge[d].nei[i]);
		}
	}
}
vector<int>cows;
int main(){
	ios::sync_with_stdio(false);
	cin>>k>>n>>m;
	for(int i=1;i<=k;i++){
		int x;
		cin>>x;
		cows.push_back(x);
	}
	for(int i=1;i<=m;i++){
		int x,y;
		cin>>x>>y;
		edge[x].nei.push_back(y);
//		edge[y].nei.push_back(x);
	}
	for(int i=1;i<=n;i++) edge[i].s();
	for(int i=0;i<cows.size();i++){
		memset(b,0,sizeof(b));
		bfs(cows[i]);
		for(int j=1;j<=n;j++){
			if(b[j]==false) ans[j]=true;
		}
	}
	int cnt=0;
	for(int i=1;i<=n;i++){
		if(!ans[i]) cnt++;
	}
	cout<<cnt<<endl;
	return 0;
}