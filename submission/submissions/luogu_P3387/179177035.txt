//  OJ: 洛谷
//  提交ID: 179177035
//  题目ID: P3387
#include<bits/stdc++.h>
#define int long long
using namespace std;
int head[10000 + 10], idx;
struct Edge {
	int u, v, nxt;
}edge[20000 + 10];
void add(int u, int v) {
	edge[++idx] = { u,v,head[u] };
	head[u] = idx;
}
int n, m, u, v;
int a[10000 + 10];
int low[10000 + 10], dfn[10000 + 10], idk;
int id, scc[10000 + 10];
stack<int>st;
namespace SCC {
	int head[10000 + 10], idx, pt[10000 + 10];
	struct Edge {
		int u, v, nxt;
	}edge[20000 + 10];
	void add(int u, int v) {
		edge[++idx] = { u,v,head[u] };
		head[u] = idx;
	}
	int n, ans;
	bool cur[100000 + 10];
	void dfs(int k, int bef) {
		ans = max(ans, bef + pt[k]);
		for (int i = head[k]; i; i = edge[i].nxt)
			dfs(edge[i].v, bef + pt[k]);
	}
	void main() {
		for (int i = 1; i <= idx; ++i)
			cur[edge[i].v] = 1;
		for (int i = 1; i <= n; ++i)
			if (!cur[i])
				dfs(i, 0);
		cout << ans << endl;
	}
}
void tarjan(int x) {
	dfn[x] = low[x] = ++idk;
	st.push(x);
	for (int i = head[x]; i; i = edge[i].nxt) {
		if (!dfn[edge[i].v])
			tarjan(edge[i].v),
			low[x] = min(low[x], low[edge[i].v]);
		else if (!scc[edge[i].v])
			low[x] = min(low[x], dfn[edge[i].v]);
	}
	if (low[x] == dfn[x]) {
		id++;
		while (st.size()) {
			int now = st.top(); st.pop();
			scc[now] = id;
			if (now == x) break;
		}
	}
}
signed main() {
	ios_base::sync_with_stdio(false);
	cin >> n >> m;
	for (int i = 1; i <= n; ++i) cin >> a[i];
	for (int i = 1; i <= m; ++i)
		cin >> u >> v, add(u, v);
	for (int i = 1; i <= n; ++i)
		if (!dfn[i])
			tarjan(i);
	for (int i = 1; i <= n; ++i) SCC::pt[scc[i]] += a[i];
	for (int i = 1; i <= idx; i++)
		if (scc[edge[i].u] ^ scc[edge[i].v])
			SCC::add(scc[edge[i].v], scc[edge[i].u]);
	SCC::n = id;
	SCC::main();
	return 0;
}