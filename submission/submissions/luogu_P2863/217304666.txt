//  OJ: 洛谷
//  提交ID: 217304666
//  题目ID: P2863
#include<bits/stdc++.h>
#define int long long 
using namespace std;
constexpr int N = 10000 + 10, M = 100000 + 10;
struct Edge {
	int v, nxt;
}edge[M];
int head[N], idx = 1;
void add(int u, int v) {
	edge[++idx] = { v,head[u] };
	head[u] = idx;
}
int n, m;
int dfn[N], idk, low[N], scc[N], tot;
stack<int>s;
void tarjan(int x) {
	dfn[x] = low[x] = ++idk;
	s.push(x);
	for (int i = head[x]; i; i = edge[i].nxt) {
		if (!dfn[edge[i].v])
			tarjan(edge[i].v),
			low[x] = min(low[x], low[edge[i].v]);
		else if (!scc[edge[i].v])
			low[x] = min(low[x], dfn[edge[i].v]);
	}
	if (low[x] == dfn[x]) {
		tot++;
		while (s.size()) {
			int now = s.top(); s.pop();
			scc[now] = tot;
			if (now == x) break;
		}
	}
}
signed main() {
	cin.tie(0)->sync_with_stdio(false);
	cin >> n >> m;
	for (int i = 1, u, v; i <= m; ++i) cin >> u >> v, add(u, v);
	for (int i = 1; i <= n; ++i) if (!dfn[i]) tarjan(i);
	static int cbc[N];
	for (int i = 1; i <= n; ++i) ++cbc[scc[i]];
	int ans = 0;
	for (int i = 1; i <= tot; ++i)
		ans += cbc[i] > 1;
	cout << ans << endl;
	return 0;
}