//  OJ: 洛谷
//  提交ID: 166126453
//  题目ID: T329674
#include<bits/stdc++.h>
using namespace std;
int n,m;char c[600+10][5];
bool Less[26+1][26+1];
int rnk[26+1],pth[26+1];
int chk(int k){
	//0 for can't find out the relation
	//1 for find false relation
	//2 for find the sort of them
	memset(Less,0,sizeof Less);
	for(int i=1;i<=k;++i) Less[c[i][0]-'A'+1][c[i][2]-'A'+1]=1;
	for(int i=1;i<=n;++i)
		for(int j=1;j<=n;++j)
			for(int k=1;k<=n;++k)
				Less[j][k]|=Less[j][i]&Less[i][k];
//	cout<<"in first "<<k<<" relation:\n";
//	for(int i=1;i<=n;++i,cout<<endl) for(int j=1;j<=n;++j) cout<<Less[i][j]<<' ';
	bool flg=0;
	//the sort of it can or not find out
	for(int i=1;i<=n;++i){
		if(Less[i][i]) return 1;
		//it is less than itself
		for(int j=i+1;j<=n;++j){
			if(Less[i][j]&&Less[j][i]) return 1;
			//A is less than B,but B is less than A
			if(!(Less[i][j]||Less[j][i])) flg=1;
			//can find out it
		}
	}
	if(flg) return 0;
	else return 2;
}
void path(){
	for(int i=1;i<=n;++i) for(int j=1;j<=n;++j) rnk[i]+=Less[i][j];
	for(int i=1;i<=n;++i) pth[n-rnk[i]]=i;
	for(int i=1;i<=n;++i) cout<<char(pth[i]+'A'-1);
}
int main(){
	ios_base::sync_with_stdio(false);
    cin>>n>>m;
    for(int i=1;i<=m;++i)
    	cin>>c[i];
	if(!chk(m)){
		cout<<"Sorted sequence cannot be determined."<<endl;
		return 0;
	}
	int l=0,r=m,mid;
	while(l<r-1){
		mid=l+r>>1;
		if(!chk(mid)) l=mid;
		else r=mid;
	}
	int tmp=chk(r);
	if(tmp==1){
		cout<<"Inconsistency found after "<<r<<" relations.";
	}
	else{
		cout<<"Sorted sequence determined after "<<r<<" relations: ";
		path();
		cout<<"."<<endl;
	}
    return 0;
}