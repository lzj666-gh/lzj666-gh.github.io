//  OJ: 洛谷
//  提交ID: 218027690
//  题目ID: P3388
#include<bits/stdc++.h>
using namespace std;
constexpr int N = 2e4 + 10, M = 2e5 + 10;
struct Edge {
	int u, v, nxt;
}edge[M];
int head[N], idx, a[N];
void add(int u, int v) {
	edge[++idx] = { u,v,head[u] };
	head[u] = idx;
}
int n, m, scc[N], dfn[N], low[N], cnt, root;
vector<int>ans;
void tarjan(int x) {
	static int idx;
	dfn[x] = low[x] = ++idx;
	int chd = 0;
	for (int i = head[x]; i; i = edge[i].nxt)
		if (!dfn[edge[i].v])
			tarjan(edge[i].v),
			low[x] = min(low[x], low[edge[i].v]),
			chd += low[edge[i].v] >= dfn[x];
		else
			low[x] = min(low[x], dfn[edge[i].v]);
	if ((chd && x != root) || chd > 1)
		ans.push_back(x);
}
int main() {
	cin.tie(0)->sync_with_stdio(false);
	cin >> n >> m;
	for (int i = 1, u, v; i <= m; ++i)
		cin >> u >> v, add(u, v), add(v, u);
	for (int i = 1; i <= n; ++i) if (!dfn[i]) root = i, tarjan(i);
	sort(ans.begin(), ans.end());
	cout << ans.size() << endl;
	for (const int& i : ans) cout << i << ' ';
	return 0;
}