//  OJ: 洛谷
//  提交ID: 166070281
//  题目ID: T477425
#include<bits/stdc++.h>
using namespace std;
struct Edge{
	int v,nxt,w;
}edge[300000+10];
int head[200000+10],vis[200000+10],dis[200000+10];
int n,m,idx;
inline void add(int u,int v,int val){
	edge[++idx]={v,head[u],val};
	head[u]=idx;
}
void spfa(){
	queue<int>q;
	q.push(1);
	dis[1]=0;
	while(!q.empty()){
		int now=q.front();
		q.pop();
		++vis[now];
		if(vis[now]>n){
			cout<<"YES"<<endl;
			return;
		}
		for(int i=head[now];i;i=edge[i].nxt){
			if(dis[edge[i].v]>dis[now]+edge[i].w){
				q.push(edge[i].v);
				dis[edge[i].v]=dis[now]+edge[i].w;
			}
		}
	}
	cout<<"NO"<<endl;
}
int main(){
	ios::sync_with_stdio(false);
	int T;
	cin>>T;
	while(T--){
		memset(head,0,sizeof head);
		memset(edge,0,sizeof edge);
		memset(vis,0,sizeof vis);
		memset(dis,0x3f,sizeof dis);
		idx=0;
		cin>>n>>m;
		for(int i=1;i<=m;i++){
			int u,v,w;
			cin>>u>>v>>w;
			add(u,v,w);
			if(w>=0) add(v,u,w);
		}
		spfa();
	}
}