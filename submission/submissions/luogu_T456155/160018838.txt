//  OJ: 洛谷
//  提交ID: 160018838
//  题目ID: T456155
#include<bits/stdc++.h>
#define qwq %= 10007
#define lblk(i) ((i) / m * m)
#define rblk(i) (((i) / m + 1) * m - 1)
#define smblk(i, j) ((i) / m == (j) / m)
#define gtblk(i) ((i) / m)
using namespace std;
int n,  t, opt, l, r, c, a[100000 + 10], m, blk1[1000], blk2[1000];
int main() {
	ios_base::sync_with_stdio(false);
	cin >> n; t = n + 1;
	for (int i = 1; i <= n; ++i) cin >> a[i];
	m = (int)sqrt(n);
	for (int i = (int)ceil(1.0 * n / m); i >= 0; --i) blk1[i] = 1;
	while (t--) {
		cin >> opt >> l >> r >> c;
		if (opt == 2) {
			cout << (a[r] * blk1[gtblk(r)] % 10007 + blk2[gtblk(r)]) % 10007 << endl;
		}
		else if (opt == 0) {
			if (smblk(l, r)) {
				for (int i = lblk(l); i <= rblk(l); ++i) {
					a[i] = (a[i] * blk1[gtblk(i)] % 10007 + blk2[gtblk(i)]) % 10007;
					a[i] qwq;
				}
				blk1[gtblk(l)] = 1;
				blk2[gtblk(l)] = 0;
				for (int i = l; i <= r; ++i) {
					a[i] += c;
					a[i] qwq;
				}
				continue;
			}
			for (int i = lblk(l); i <= rblk(l); ++i) {
				a[i] = (a[i] * blk1[gtblk(i)] % 10007 + blk2[gtblk(i)]) % 10007;
				a[i] qwq;
			}
			blk1[gtblk(l)] = 1;
			blk2[gtblk(l)] = 0;
			for (int i = rblk(l); i >= l; --i) {
				a[i] += c;
				a[i] qwq;
			}
			for (int i = lblk(r); i <= rblk(r); ++i) {
				a[i] = (a[i] * blk1[gtblk(i)] % 10007 + blk2[gtblk(i)]) % 10007;
				a[i] qwq;
			}
			blk1[gtblk(r)] = 1;
			blk2[gtblk(r)] = 0;
			for (int i = lblk(r); i <= r; ++i) {
				a[i] += c;
				a[i] qwq;
			}
			if (gtblk(l) + 1 < gtblk(r))
				for (int i = gtblk(l) + 1; i < gtblk(r); ++i) {
					blk2[i] += c;
					blk2[i] qwq;
				}
		}
		else if (opt == 1) {
			if (smblk(l, r)) {
				for (int i = lblk(l); i <= rblk(l); ++i) {
					a[i] = (a[i] * blk1[gtblk(i)] % 10007 + blk2[gtblk(i)]) % 10007;
					a[i] qwq;
				}
				blk1[gtblk(l)] = 1;
				blk2[gtblk(l)] = 0;
				for (int i = l; i <= r; ++i) {
					a[i] *= c;
					a[i] qwq;
				}
				continue;
			}
			for (int i = lblk(l); i <= rblk(l); ++i) {
				a[i] = (a[i] * blk1[gtblk(i)] % 10007 + blk2[gtblk(i)]) % 10007;
				a[i] qwq;
			}
			blk1[gtblk(l)] = 1;
			blk2[gtblk(l)] = 0;
			for (int i = rblk(l); i >= l; --i) {
				a[i] *= c;
				a[i] qwq;
			}
			for (int i = lblk(r); i <= rblk(r); ++i) {
				a[i] = (a[i] * blk1[gtblk(i)] % 10007 + blk2[gtblk(i)]) % 10007;
				a[i] qwq;
			}
			blk1[gtblk(r)] = 1;
			blk2[gtblk(r)] = 0;
			for (int i = lblk(r); i <= r; ++i) {
				a[i] *= c;
				a[i] qwq;
			}
			if (gtblk(l) + 1 < gtblk(r))
				for (int i = gtblk(l) + 1; i < gtblk(r); ++i) {
					blk1[i] *= c;
					blk2[i] *= c;
					blk1[i] qwq;
					blk2[i] qwq;
				}
		}
//		for (int i = 1; i <= n; ++i) cout << '{' << a[i] << '*' << blk1[gtblk(i)] << '+' << blk2[gtblk(i)] << "(" << (a[i] * blk1[gtblk(i)] % 10007 + blk2[gtblk(i)]) % 10007 << ')' << '}' << ','; cout << endl;
	}
	return 0;
}
/*
in:
20
11 10 4 20 5 18 1 14 20 9 19 14 7 19 7 4 19 1 6 8
0 9 13 1
0 7 12 9
1 7 14 11
0 7 17 4
1 9 13 18
1 11 12 20
0 10 13 6
0 9 12 18
0 11 12 5
0 7 14 20
0 11 12 5
2 7 16 5
0 9 14 5
0 7 16 15
2 7 12 8
1 8 17 2
2 9 17 5
0 11 12 13
1 8 14 12
2 10 15 20


right:
8
6491
46
52

in:
13
15 12 7 8 11 10 3 16 3 17 2 20 7
2 1 9 20
2 3 11 6
1 1 9 8
2 3 9 1
0 1 9 2
2 1 10 5
1 1 10 2
0 1 11 14
2 1 10 4
0 1 8 8
1 1 11 9
2 3 8 18
2 1 8 14

right:
3
2
24
17
48
2538
2538


*/