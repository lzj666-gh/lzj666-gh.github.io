//  OJ: 洛谷
//  提交ID: 221674247
//  题目ID: P1494
#include<bits/stdc++.h>
using namespace std;
int n, m;
int a[50000 + 5], vis[50000 + 5];
long long sum;
void add(int x) {
	//cerr << "add " << x << endl;
	//cerr << "in line: " << __LINE__ << " with sum: " << sum << endl;
	sum -= vis[a[x]] * (vis[a[x]] - 1ll);
	vis[a[x]]++;
	sum += vis[a[x]] * (vis[a[x]] - 1ll);
	//cerr << "in line: " << __LINE__ << " with sum: " << sum << endl;
}
void del(int x) {
	//cerr << "del " << x << endl;
	//cerr << "in line: " << __LINE__ << " with sum: " << sum << endl;
	sum -= vis[a[x]] * (vis[a[x]] - 1ll);
	vis[a[x]]--;
	sum += vis[a[x]] * (vis[a[x]] - 1ll);
	//cerr << "in line: " << __LINE__ << " with sum: " << sum << endl;
}
int bel[50000 + 5];
struct Query {
	int l, r, idx;
	long long ans;
	friend bool operator<(const Query& a, const Query& b) {
		return bel[a.l] == bel[b.l] ? bel[a.l] & 1 ? a.r > b.r : a.r < b.r : bel[a.l] < bel[b.l];
	}
}q[50000 + 5];
bool Comp(const Query& a, const Query& b) {
	return a.idx < b.idx;
}
signed main() {
	cin.tie(0)->sync_with_stdio(false);
	cin >> n >> m; int t = sqrt(n);
	for (int i = 1; i <= n; ++i) cin >> a[i], bel[i] = (i + t - 1) / t;
	for (int i = 1; i <= m; ++i) cin >> q[i].l >> q[i].r, q[i].idx = i;
	sort(q + 1, q + m + 1);
	//cerr << "------q-------\n";
	//for (int i = 1; i <= m; ++i) cout << q[i].l << ',' << q[i].r << endl;
	//cerr << "--------------\n";
	int l = q[1].l, r = q[1].l - 1;
	while (r < q[1].r) add(++r);
	q[1].ans = sum;
	for (int i = 2; i <= m; ++i) {
		//fprintf(stderr, "from [%d,%d] to [%d,%d]:\n", l, r, q[i].l, q[i].r);
		while (l > q[i].l) add(--l);
		while (r < q[i].r) add(++r);
		while (l < q[i].l) del(l++);
		while (r > q[i].r) del(r--);
		//cerr << "end with ans: " << sum << endl;
		q[i].ans = sum;
	}
	sort(q + 1, q + m + 1, Comp);
	for (int i = 1; i <= m; ++i) {
		if (q[i].ans == 0) {
			cout << "0/1" << endl;
		}
		else {
			int d = gcd(q[i].ans, (q[i].r - q[i].l + 1) * (q[i].r - q[i].l));
			cout << q[i].ans / d << '/' << (q[i].r - q[i].l + 1) * (q[i].r - q[i].l) / d << endl;
		}
	}
	return 0;
}