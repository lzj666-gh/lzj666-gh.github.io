//  OJ: 洛谷
//  提交ID: 208050262
//  题目ID: T585693
#include<bits/stdc++.h>
using namespace std;
const int mod = 998244353;
const int max_fact = 4e7;
long long fact[max_fact + 1], inv_fact[max_fact + 1];
long long poww(long long x, long long k) {
	if (k == 0) return 1;
	if (k == 1) return x;
	long long tmp = poww(x, k / 2);
	tmp = (tmp * tmp) % mod;
	if (k % 2 == 1) return tmp * x % mod;
	else return tmp;
}
int main() {
	cin.tie(0)->sync_with_stdio(0);
	fact[0] = 1;
	for (int i = 1; i <= max_fact; ++i)
		fact[i] = fact[i - 1] * i % mod;
	inv_fact[max_fact] = poww(fact[max_fact], mod - 2);
	for (int i = max_fact - 1; i >= 0; --i)
		inv_fact[i] = inv_fact[i + 1] * (i + 1) % mod;
	int n;
	cin >> n;
	long long comb = fact[2 * n] * inv_fact[n] % mod;
	comb = comb * inv_fact[n] % mod;
	cout << (8 * comb % mod - ((3LL * n % mod) * (n % mod) % mod + 2LL * n + 7) % mod + mod) % mod << endl;
	return 0;
}