//  OJ: 洛谷
//  提交ID: 187086286
//  题目ID: P11233
#include<bits/stdc++.h>
using namespace std;
using ll = long long;
int n, a[20000000 + 10];
ll dp[20000000 + 10], s[20000000 + 10], lst[20000000 + 10], apr[20000000 + 10];
signed main() {
    cin.tie(0)->sync_with_stdio(false);
	int T;
	cin >> T;
	while (T--) {
		cin >> n;
		for (int i = 1; i <= n; ++i) cin >> a[i];
		s[1] = 0;
		for (int i = 2; i <= n; i++)s[i] = s[i - 1] + ((a[i] == a[i - 1]) ? a[i] : 0);
		memset(apr, 0, sizeof apr); memset(dp, 0, sizeof dp);
		for (int i = 1; i <= n; ++i) {
			lst[i] = apr[a[i]];
			apr[a[i]] = i;
		}
		for (int i = 2; i <= n; ++i) {
			ll l = lst[i];
			if (l) {
				if (l == i - 1)
					dp[i] = dp[i - 1] + a[i];
				dp[i] = a[i] + s[i - 1] - s[l + 1] + dp[l + 1];
			}
			if (l ^ i - 1)
				dp[i] = max(dp[i], dp[i - 1]);
		}
		cout << dp[n] << endl;
	}
	return 0;
}