//  OJ: 洛谷
//  提交ID: 116376154
//  题目ID: P3371
#include<bits/stdc++.h>
using namespace std;
struct Edge {
	int to,val;
};
vector<vector<Edge> > a(300000+1);
int n,m,s;
vector<int> dis(300000+1,INT_MAX/2-1);
priority_queue<pair<int,int>,vector<pair<int,int> >,greater<pair<int,int> > > pq;
int dijkstra(){
	dis[s]=0;
	pq.push({0,s});
	while(!pq.empty()){
		int val=pq.top().first,num=pq.top().second;
		pq.pop();
		if(val>dis[num]) continue;
		for(const Edge &edge:a[num]){
			int newval=dis[num]+edge.val;
			if(newval<dis[edge.to]){
				dis[edge.to]=newval;
				pq.push({newval,edge.to});
			}
		}
	}
	for(int i=1;i<=n;i++) cout<<(dis[i]!=INT_MAX/2-1?dis[i]:INT_MAX)<<' ';
	cout<<endl;
}
int main(){
	ios::sync_with_stdio(false);
	cin>>n>>m>>s;
	for(int i=0;i<m;++i){
		int x,y,z;
		cin>>x>>y>>z;
		a[x].push_back({y,z});
	}
	dijkstra();
	return 0;
}