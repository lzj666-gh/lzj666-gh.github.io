//  OJ: 洛谷
//  提交ID: 139570283
//  题目ID: T147072
#include<bits/stdc++.h>
using namespace std;
int trie[1000000 + 10][65], idx, n, m, cnt[1000000 + 10];
int gt(char c) {
	if (c >= 'A' && c <= 'Z')
		return c - 'A';
	else if (c >= 'a' && c <= 'z')
		return c - 'a' + 26;
	else
		return c - '0' + 52;
}
void insert(string s) {
	int p = 0;
	for (char c : s) {
		int t = gt(c);
		if (!trie[p][t]) trie[p][t] = ++idx, cnt[idx] = cnt[p]/*, cout << "from " << p << " to " << idx << " is " << c << endl*/;
		p = trie[p][t];
	}
	++cnt[p];
}
int search(string s) {
	int p = 0;
	for (char c : s) {
		int t = gt(c);
		if (!trie[p][t]) return cnt[p];
		p = trie[p][t];
	}
	return cnt[p];
}
void iniit() {
	memset(trie, 0, sizeof trie);
	memset(cnt, 0, sizeof cnt);
	idx = n = m = 0;
}
int main() {
	ios_base::sync_with_stdio(false);
	cin >> n >> m;
	for (int i = 1; i <= n; ++i) {
		string tmp;
		cin >> tmp;
		insert(tmp);
	}
	for (int i = 1; i <= m; ++i) {
		string s;
		cin >> s;
		cout << search(s) << endl;
	}
//	for (int i = 0; i <= idx; ++i) cout << cnt[i] << endl;
	return 0;
}