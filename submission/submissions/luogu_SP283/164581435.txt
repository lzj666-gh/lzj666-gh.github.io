//  OJ: 洛谷
//  提交ID: 164581435
//  题目ID: SP283
#include<bits/stdc++.h>
using namespace std;
int n, B, a[3831], dp[5][3831][2], ans;
int main() {
	ios_base::sync_with_stdio(false);
	int T;
	cin >> T;
	while (T--) {
		memset(dp, 0xcf, sizeof dp);
		cin >> n >> B;
		for (int i = 1; i <= n; ++i) cin >> a[i];
		dp[1][1][1] = dp[1][0][0] = 0;
		for (int i = 2; i <= n; ++i) {
			for (int j = 0; j <= n && j <= B; ++j) {
				dp[i % 5][j][0] = max(dp[(i - 1) % 5][j][0], dp[(i - 1) % 5][j][1]);
				if(j)
					dp[i % 5][j][1] = max(dp[(i - 1) % 5][j - 1][0], dp[(i - 1) % 5][j - 1][1] + a[i]);
			}
		}
		ans = max(dp[n % 5][B][1], dp[n % 5][B][0]);
		memset(dp, 0xcf, sizeof dp);
		dp[1][1][1] = a[1];
		for (int i = 2; i <= n; ++i) {
			for (int j = 0; j <= n && j <= B; ++j) {
				dp[i % 5][j][0] = max(dp[(i - 1) % 5][j][0], dp[(i - 1) % 5][j][1]);
				if(j)
					dp[i % 5][j][1] = max(dp[(i - 1) % 5][j - 1][0], dp[(i - 1) % 5][j - 1][1] + a[i]);
			}
		}
		cout << max(ans, dp[n % 5][B][1]) << endl;
	}
	return 0;
}