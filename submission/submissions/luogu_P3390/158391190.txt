//  OJ: 洛谷
//  提交ID: 158391190
//  题目ID: P3390
#include<bits/stdc++.h>
using namespace std;
struct LZJ {
	int n, m;
	long long num[101][101];
	LZJ() {
		memset(num, 0, sizeof num);
		n = m = 2;
		for (int i = 1; i <= n; ++i)
			num[i][i] = 1;
	}
	LZJ(int nn) {
		memset(num, 0, sizeof num);
		n = m = nn;
		for (int i = 1; i <= n; ++i)
			num[i][i] = 1;
	}
	LZJ(int nn, int mm) {
		n = nn, m = mm;
		memset(num, 0, sizeof num);
	}
	int sz() {
		if (n == m) return n;
		else exit(0);
	}
	friend LZJ operator * (const LZJ& a, const LZJ& b) {
		LZJ c = LZJ(a.n, b.m);
		if (a.m != b.n) exit(0);
		for (int i = 1; i <= a.n; ++i)
			for (int j = 1; j <= b.m; ++j)
				for (int k = 1; k <= a.m; ++k)
					c.num[i][j] += (a.num[i][k] * b.num[k][j]) % 1000000007, c.num[i][j] %= 1000000007;
		return c;
	}
	friend LZJ operator %(const LZJ& a, const int& m) {
		LZJ c = a;
		for (int i = 1; i <= a.n; ++i)
			for (int j = 1; j <= a.m; ++j)
				c.num[i][j] %= m;
		return c;
	}
	friend ostream& operator<<(ostream& out, const LZJ& a) {
	    //out << "is {" << a.n << " with " << a.m << "}\n";
		for (int i = 1; i <= a.n; ++i, cout << endl)
			for (int j = 1; j <= a.m; ++j)
				out << a.num[i][j] << ' ';
		return out;
	}
};
LZJ poww(LZJ a, int x) {
	printf("%d\n", x);
	if (x == 0) return LZJ(a.sz());
	LZJ t = poww(a, x / 2) % 1000000007;
	t = (t * t) % 1000000007;
	if (x & 1) t = (t * a) % 1000000007;
	return t;
}
int n, k;
int main() {
	ios_base::sync_with_stdio(false);
	cin >> n >> k;
	LZJ a(n, n);
	for (int i = 1; i <= n; ++i) for (int j = 1; j <= n; ++j) cin >> a.num[i][j];
	a = poww(a, k);
	cout << a << endl;
	return 0;
}