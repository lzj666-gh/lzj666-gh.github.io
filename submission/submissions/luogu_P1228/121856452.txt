//  OJ: 洛谷
//  提交ID: 121856452
//  题目ID: P1228
#include<bits/stdc++.h>
#define maxn 1000+10
using namespace std;
int n,x,y;
void dfs(int start_x,int start_y,int square,int lost_x,int lost_y){
	if(square==2){
		if(lost_x==start_x){
			if(lost_y==start_y){
				cout<<start_x+1<<' '<<start_y+1<<' '<<1<<endl;
			} 
			else{
				cout<<start_x+1<<' '<<start_y<<' '<<2<<endl;
			}
		}
		else{
			if(lost_y==start_y){
				cout<<start_x<<' '<<start_y+1<<' '<<3<<endl;
			} 
			else{
				cout<<start_x<<' '<<start_y<<' '<<4<<endl;
			}
		}
		return;
	}
	int line=(start_x+square/2),road=(start_y+square/2);
	if(lost_x<=line){
		if(lost_y<=road){
			cout<<line+1<<' '<<road+1<<' '<<1<<endl;
			dfs(start_x,start_y,square/2,lost_x,lost_y);
			dfs(line+1,start_y,square/2,line+1,road);
			dfs(start_x,road+1,square/2,line,road+1);
			dfs(line+1,road+1,square/2,line+1,road+1);
		} 
		else{
			cout<<line+1<<' '<<road<<' '<<2<<endl;
			dfs(start_x,start_y,square/2,line,road);
			dfs(line+1,start_y,square/2,lost_x,lost_y);
			dfs(start_x,road+1,square/2,line,road+1);
			dfs(line+1,road+1,square/2,line+1,road+1);
		} 
	}
	else{
		if(lost_y<=road){
			cout<<line<<' '<<road+1<<' '<<3<<endl;
			dfs(start_x,start_y,square/2,line,road);
			dfs(line+1,start_y,square/2,line+1,road);
			dfs(start_x,road+1,square/2,lost_x,lost_y);
			dfs(line+1,road+1,square/2,line+1,road+1);
		} 
		else{
			cout<<line+1<<' '<<road+1<<' '<<4<<endl;
			dfs(start_x,start_y,square/2,line,road);
			dfs(line+1,start_y,square/2,line+1,road);
			dfs(start_x,road+1,square/2,line,road+1);
			dfs(line+1,road+1,square/2,lost_x,lost_y);
		} 
	}
}
int main(){
	cin>>n>>x>>y;
	dfs(1,1,1<<n,x,y);
	return 0;
}

