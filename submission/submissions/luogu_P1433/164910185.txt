//  OJ: 洛谷
//  提交ID: 164910185
//  题目ID: P1433
#include<bits/stdc++.h>
using namespace std;
double w[16 + 1][16 + 1];
double dp[1 << 16 + 1][16 + 1];
int x[16 + 1], y[16 + 1], n;
signed main() {
	ios_base::sync_with_stdio(false);
	memset(dp, 127, sizeof dp);
	cin >> n;
	for (int i = 0; i < n; ++i) cin >> x[i] >> y[i];
	x[n] = y[n] = 0; n++;
	for (int i = 0; i < n; ++i) for (int j = 0; j < n; ++j) w[i][j] = sqrt((x[i] - x[j]) * (x[i] - x[j]) + (y[i] - y[j]) * (y[i] - y[j]));
//	for (int i = 0; i < n; ++i, cout << endl) for (int j = 0; j < n; ++j) cout << w[i][j] << ' ';
	dp[1][0] = 0;
	for (int i = 0; i <= 1 << n; ++i)
		for (int j = 0; j < n; ++j)
			if (i >> j & 1)
				for (int k = 0; k < n; ++k)
					dp[i][j] = min(dp[i - (1 << j)][k] + w[j][k], dp[i][j]);
	cout << fixed << setprecision(2);
	cout << dp[(1 << n) - 1][n - 1] << endl;
}