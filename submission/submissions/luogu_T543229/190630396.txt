//  OJ: 洛谷
//  提交ID: 190630396
//  题目ID: T543229
#include<bits/stdc++.h>
// #define ONLINE
using namespace std;
using ll = long long;
constexpr int R = 4e5, SIZE = 1200;
int n, q, a[R + 5], lft[SIZE + 5], rgt[SIZE + 5], bel[R + 5], idx;
struct BLOCK {
	ll big[SIZE + 5], small[R + 5];
	void add(int x, int v) {
		int t = bel[x];
		for (int i = x; i <= rgt[t]; i++) small[i] += v;
		for (int i = t; i <= idx; i++) big[i] += v;
	}
	ll query(int l, int r) {
		if (l > r)return 0; 
		int vl = bel[l], vr = bel[r];
		if (vl == vr)
			return small[r] - ((l == lft[vl]) ? 0 : small[l - 1]);
		else 
			if(l == lft[vl])
				return small[rgt[vl]] + big[vr - 1] - big[vl] + small[r];
			else
				return small[rgt[vl]] - small[l - 1] + big[vr - 1] - big[vl] + small[r];
	}
}cnt, tot;
int main() {
#ifdef ONLINE
	freopen("sequence.in", "r", stdin);
	freopen("sequence.out", "w", stdout);
#endif
	cin.tie(0)->sync_with_stdio(false);
	cin >> n >> q;
	idx = (R - 1) / SIZE + 1;
	for (int i = 1; i <= idx; i++) {
		lft[i] = (i - 1) * SIZE + 1; 
		rgt[i] = min(i * SIZE, R);
		for (int j = lft[i]; j <= rgt[i]; j++)bel[j] = i;
	}
	for (int i = 1; i <= n; i++) cin >> a[i];
	for (int i = 1; i <= n; i++) cnt.add(a[i], 1), tot.add(a[i], a[i]);
	while (q--) {
		int opt; cin >> opt;
		if (opt == 1) {
			int p, x; 
			cin >> p >> x;
			cnt.add(a[p], -1); tot.add(a[p], -a[p]);
			a[p] = x;
			cnt.add(a[p], 1); tot.add(a[p], a[p]);
		}
		else {
			int y;
			cin >> y;
			ll s = 0;
			for (int l = 1, rgt; l <= y; l = rgt + 1) {
				ll len = y / l;
				rgt = y / len;
				s += cnt.query(l, rgt) * (len + y) - tot.query(l, rgt) * len;
			}
			s += y * cnt.query(y + 1, R);
			cout << s << endl;
		}
	}
	return 0;
}