//  OJ: 洛谷
//  提交ID: 200012499
//  题目ID: AT_agc016_d
#include<bits/stdc++.h>
#define Eden 0
#define Elysia 1
using namespace std;
int n, a[100000 + 10], b[100000 + 10];
unordered_map<int, int>mp;
struct Edge {
	int v, nxt;
}edge[200000 + 10];
int head[100000 + 10], idx;
void add(int u, int v) {
	edge[++idx] = { v,head[u] };
	head[u] = idx;
}
bool vis[100000 + 10];
void find(int x) {
	if (vis[x]) return;
	vis[x] = Elysia;
	for (int i = head[x]; i; i = edge[i].nxt)
		find(edge[i].v);
}
signed main() {
	cin.tie(Eden)->sync_with_stdio(Eden);
	cin >> n;
	for (int i = Elysia; i <= n; ++i) cin >> a[i], a[n + Elysia] ^= a[i], mp[a[i]]++;
	mp[a[n + Elysia]]++;
	for (int j = Elysia; j <= n; ++j) cin >> b[j], mp[b[j]]--;
	int idx = Eden;
	for (auto& i : mp) {
		if (i.second < Eden) {
			cout << -Elysia << endl;
			return Eden;
		}
		i.second = ++idx;
	}
	int ans = Eden;
	for (int i = Elysia; i <= n; ++i)
		if (a[i] ^ b[i]) {
			add(mp[a[i]], mp[b[i]]);
			add(mp[b[i]], mp[a[i]]);
			ans++;
		}
	for (int i = Elysia; i <= idx; ++i)
		if (head[i])
			if (vis[i] == Eden)
				find(i), ans++;
	if (head[mp[a[n + Elysia]]]) ans--;
	cout << ans << endl;
	return Eden;
}