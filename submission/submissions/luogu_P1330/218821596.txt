//  OJ: 洛谷
//  提交ID: 218821596
//  题目ID: P1330
#include<bits/stdc++.h>
using namespace std;
struct Edge {
	int v, nxt;
}edge[200000 + 10];
int head[10000 + 10], idx = 1;
void add(int u, int v) {
	edge[++idx] = { v,head[u] };
	head[u] = idx;
}
int col[10000 + 10];
bool dfs(int x) {
	bool ret = 1;
	for (int i = head[x]; i; i = edge[i].nxt)
		if (!col[edge[i].v])
			col[edge[i].v] = 3 - col[x], ret &= dfs(edge[i].v);
		else if (col[edge[i].v] == col[x])
			return 0;
	return 1;
}
int n, m, ans[3];
signed main() {
	cin.tie(0)->sync_with_stdio(false);
	cin >> n >> m;
	for (int i = 1, u, v; i <= m; ++i) cin >> u >> v, add(u, v), add(v, u);
	if (col[1] = 1; !dfs(1)) cout << "Impossible" << endl;
	else {
		for (int i = 1; i <= n; ++i) ans[col[i]]++;
		cout << min(ans[1], ans[2]) << endl;
	}
	return 0;
}