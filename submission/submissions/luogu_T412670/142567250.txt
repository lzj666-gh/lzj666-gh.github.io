//  OJ: 洛谷
//  提交ID: 142567250
//  题目ID: T412670
#include<bits/stdc++.h>
using namespace std;
const int N = 110;
int path[N], n;
bool dfs(int u, int k) {
	if (u == k) return path[u - 1] == n;
	if (path[u - 1] << (k - u + 1) < n) return false;
	if (path[u - 1] + k - u + 1 > n) return false;
	unordered_map<int, bool>st;
	for (int j = u - 1; j >= 0; j--) {
		int s = path[u - 1] + path[j];
		if (s > n || st[s]) continue;
		st[s] = true;
		path[u] = s;
		if (dfs(u + 1, k)) return true;
	}
	return false;
}
int main() {
	ios_base::sync_with_stdio(false);
	path[0] = 1;
	while (cin >> n && n) {
		int k = max(1, int(log(n) - 10));
		while (!dfs(0, k)) k++;
		cout << k << ' ';
		for (int i = 0; i < k; i++) cout << path[i] << " ";
		cout << endl;
	}
	return 0;
}