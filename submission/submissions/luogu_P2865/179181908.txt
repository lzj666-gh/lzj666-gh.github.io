//  OJ: 洛谷
//  提交ID: 179181908
//  题目ID: P2865
#include<bits/stdc++.h>
using namespace std;
int head[50000 + 10], idx;
struct Edge {
	int v, w, nxt;
}edge[400000 + 10];
void add(int u, int v, int w) {
	edge[++idx] = { v,w,head[u] };
	head[u] = idx;
}
int n, m;
bool vis[50000 + 10];
int dis[50000 + 10][2];
int spfa() {
	memset(dis, 0x3f, sizeof dis);
	queue<int>q;
	q.push(1);
	dis[1][0] = dis[1][1] = 0;
	while (!q.empty()) {
		int now = q.front(); q.pop();
		vis[now] = 0;
		for (int i = head[now]; i; i = edge[i].nxt) {
			if (dis[now][0] + edge[i].w < dis[edge[i].v][0]) {
				dis[edge[i].v][1] = dis[edge[i].v][0];
				dis[edge[i].v][0] = dis[now][0] + edge[i].w;
				if (!vis[edge[i].v]) {
					vis[edge[i].v] = 1;
					q.push(edge[i].v);
				}
			}
			if (dis[edge[i].v][1] > dis[now][0] + edge[i].w && dis[now][0] + edge[i].w > dis[edge[i].v][0] || (dis[edge[i].v][1] == dis[edge[i].v][0])) {
				dis[edge[i].v][1] = dis[now][0] + edge[i].w;
				if (!vis[edge[i].v]) {
					vis[edge[i].v] = 1;
					q.push(edge[i].v);
				}
			}
			if (dis[edge[i].v][1] > dis[now][1] + edge[i].w && dis[now][1] + edge[i].w > dis[edge[i].v][0]) {
				dis[edge[i].v][1] = dis[now][1] + edge[i].w;
				if (!vis[edge[i].v]) {
					vis[edge[i].v] = 1;
					q.push(edge[i].v);
				}
			}
		}
	}
	return dis[n][1];
}
signed main() {
	ios_base::sync_with_stdio(false);
	cin >> n >> m;
	for (int i = 1, a, b, c; i <= m; ++i)
		cin >> a >> b >> c, add(a, b, c), add(b, a, c);
	cout << spfa() << endl;
	return 0;
}