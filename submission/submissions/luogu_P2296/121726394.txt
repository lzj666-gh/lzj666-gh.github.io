//  OJ: 洛谷
//  提交ID: 121726394
//  题目ID: P2296
#include<bits/stdc++.h>
using namespace std;
struct node{
	int step,num;
};
int n,m,s,t;
vector<int>a[10000+100];
bool can[10000+100],vis[10000+100],b[10000+100];
bool dfs(int k){
//	cout<<k<<endl; 
	if(vis[k]) return b[k];
	vis[k]=true;
	if(k==t) return b[k]=true;
	if(a[k].empty()) return b[k]=false;
	b[k]=false;
	for(int i:a[k]){
		if(dfs(i)) b[k]=true;
	}
	return b[k];
}
int bfs(){
	int dis[10000+100];
	memset(dis,0x3f,sizeof dis);
	queue<node> q;
	q.push({0,s});
	can[s]=true;
	while(!q.empty()){
		node now=q.front();
		if(now.num==t){
			return now.step;
		}
		q.pop();
		if(now.step>=dis[now.num]) continue;
		if(!can[now.num]) continue;
		dis[now.num]=now.step;
		for(int i:a[now.num]){
			q.push({now.step+1,i});
		}
	}
	return dis[t]==0x3f3f3f3f?-1:dis[t];
}
int main(){
	freopen("road.in","r",stdin);
	freopen("road.out","w",stdout);
	ios_base::sync_with_stdio(false);
	cin>>n>>m;
	for(int i=1,x,y;i<=m;++i){
		cin>>x>>y;
		a[x].push_back(y);
	}
//	for(int i=1;i<=n;i++){
//		for(int k:a[i]) cout<<k<<' ';
//		cout<<endl;
//	}
	cin>>s>>t;
//	if(a[s].empty()){
//		cout<<-1<<endl;
//		return 0;
//	}
	dfs(s);
	for(int i=1;i<=n;i++){
		can[i]=true;
		for(int k:a[i]) if(b[k]==false) can[i]=false;
	}
//	for(int i=1;i<=n;++i) cout<<can[i]<<' ';
//	cout<<endl;
	cout<<bfs()<<endl;
	return 0;
}
/*
9 12
1 2
1 3
2 9
2 7
7 5
2 4
4 6
3 5
3 8
8 5
4 5
5 9
1 9
*/