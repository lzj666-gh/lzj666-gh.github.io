//  OJ: 洛谷
//  提交ID: 179690790
//  题目ID: P11158
#include<bits/stdc++.h>
using namespace std;
int n, p[200000 + 10], dp[200000 + 10], q[2000 + 10][2000 + 10];
int query(int i1, int j1, int i2, int j2) {
	if (i1 > i2 || j1 > j2) return 0;
	return q[i1 - 1][j1 - 1] + q[i2][j2] - q[i1 - 1][j2] - q[i2][j1 - 1];
}
int main() {
	ios_base::sync_with_stdio(false);
	cin >> n;
	for (int i = 1; i <= n; ++i) cin >> p[i];
	long long ans = 0;
	for (int i = 1; i <= n; ++i) {
		q[i][1] = q[i - 1][1] + (p[i] == 1);
		for (int j = 2; j <= n; ++j)
			q[i][j] = q[i][j - 1] + q[i - 1][j] - q[i - 1][j - 1] + (p[i] == j);
	}
	for (int i = n / 2; i <= n; ++i) for (int j = n / 2; j <= n; ++j)
		if (query(i - n / 2 + 1, j - n / 2 + 1, i, j) == 1)
			ans += query(1, 1, i - n / 2, j - n / 2) + query(i + 1, j + 1, n, n) + query(1, j + 1, i - n / 2, n) + query(i + 1, 1, n, j - n / 2);
		else if (query(i - n / 2 + 1, j - n / 2 + 1, i, j) == 0)
			ans += (n / 2) * (n / 2 - 1);
	cout << ans << endl;
	return 0;
}