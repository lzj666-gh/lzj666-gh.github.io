//  OJ: 洛谷
//  提交ID: 110935196
//  题目ID: P2895
#include<bits/stdc++.h>
#define inf 0x7f7f7f7f
using namespace std;
int a[300+50][300+50],m,ans=-1,t[4][2]={{0,-1},{-1,0},{1,0},{0,1}};
bool b[300+50][300+50];
struct node{
	int x,y;
	int step;
	node(int xx,int yy,int stepp){
		x=xx;y=yy;step=stepp;
	}
};
queue<node>q;
void bfs(){
	q.push(node(0,0,0));
	b[0][0]=true;
	while(!q.empty()){
		node no=q.front();
		q.pop();
		if(a[no.x][no.y]==-1){
			ans=no.step;
			return;
		}
		for(int i=0;i<4;i++){
			int dx=t[i][0]+no.x,dy=t[i][1]+no.y;
			if(dx<0||dy<0) continue;
			if(a[dx][dy]<=no.step||b[dx][dy]) continue;
			b[dx][dy]=true;
			q.push(node(dx,dy,no.step+1));
		}
	}
}
int main(){
	std::ios::sync_with_stdio(false);
	cin.tie(0);cout.tie(0);
	cin>>m;
	for(int i=0;i<=340;i++){
		for(int j=0;j<=340;j++){
			a[i][j]=-1;
		}
	}
	for(int i=1;i<=m;i++){
		int x,y,s;
		cin>>x>>y>>s;
		if(a[x][y]==-1) a[x][y]=s;
		else a[x][y]=min(a[x][y],s);
		for(int j=0;j<4;j++){
			int dx=x+t[j][0];
			int dy=y+t[j][1];
			if(dx>=0&&dy>=0){
				if(a[dx][dy]==-1) a[dx][dy]=s;
				else a[dx][dy]=min(a[dx][dy],s);
			}
		}
	}
	ans=inf;
	bfs();
	if(ans==inf){
		cout<<-1<<endl;
		return 0;
	}
	cout<<ans<<endl;
}