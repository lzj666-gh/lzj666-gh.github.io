//  OJ: 洛谷
//  提交ID: 147644556
//  题目ID: P1962
#include<bits/stdc++.h>
#define mod 9901
using namespace std;
template<typename T1, typename T2>
ostream& operator << (ostream& out, pair<T1, T2>& p) {
	out << '{' << p.first << ',' << p.second << '}';
	return out;
}
template<typename T>
ostream& operator << (ostream& out, vector<T>p) {
	for (T t : p) out << t << ';';
	return out;
}
struct LZJ {
	int n, m;
	long long num[5][5];
	LZJ() {
		memset(num, 0, sizeof num);
		n = m = 2;
		for (int i = 1; i <= n; ++i)
			num[i][i] = 1;
	}
	LZJ(int nn) {
		memset(num, 0, sizeof num);
		n = m = nn;
		for (int i = 1; i <= n; ++i)
			num[i][i] = 1;
	}
	LZJ(int nn, int mm) {
		n = nn, m = mm;
		memset(num, 0, sizeof num);
	}
	friend LZJ operator * (const LZJ& a, const LZJ& b) {
		LZJ c = LZJ(a.n, b.m);
		if (a.m != b.n) return LZJ(2);
		for (int i = 1; i <= a.n; ++i)
			for (int j = 1; j <= b.m; ++j)
				for (int k = 1; k <= a.m; ++k)
					c.num[i][j] += a.num[i][k] * b.num[k][j];
		return c;
	}
	friend LZJ operator %(const LZJ& a, const int& m) {
		LZJ c = a;
		for (int i = 1; i <= a.n; ++i)
			for (int j = 1; j <= a.m; ++j)
				c.num[i][j] %= m;
		return c;
	}
	friend ostream& operator<<(ostream& out, const LZJ& a) {
		out << "is {" << a.n << " with " << a.m << "}\n";
		for (int i = 1; i <= a.n; ++i, cout << endl)
			for (int j = 1; j <= a.m; ++j)
				out << a.num[i][j] << ' ';
		return out;
	}
};
LZJ poww(LZJ a, int x, int p) {
	if (x == 0) return LZJ();
	LZJ t = poww(a, x / 2, p) % p;
	t = (t * t) % p;
	if (x % 2 == 1) t = (t * a) % p;
	return t;
}
int n;
int main() {
	ios_base::sync_with_stdio(false);
	cin >> n;
	LZJ ans = LZJ(1, 2),tmp=LZJ(2,2);
	tmp.num[1][1] = tmp.num[1][2] = tmp.num[2][1] = 1;
	ans.num[1][1] = 1;
	ans.num[1][2] = 1;
//	cout << "tmp:\n" << tmp << "ans:\n" << ans << endl;
//	cout << "tmp1:\n" << tmp << "tmp2:\n" << tmp * tmp << "tmp3:\n" << tmp * tmp * tmp;
	ans = ans * (poww(tmp, n - 2, 1e9 + 7));
//	cout << "ans end:" << ans << endl;
//	cout << "pow:" << (poww(tmp, n - 2, 1e9 + 7)) << endl;
	cout << ans.num[1][1] << endl;
	return 0;
}