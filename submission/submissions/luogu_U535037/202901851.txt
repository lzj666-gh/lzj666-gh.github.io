//  OJ: 洛谷
//  提交ID: 202901851
//  题目ID: U535037
#include<bits/stdc++.h>
using namespace std;
using ll = long long;
const int mod = 3499999;
bool isp[1000000 + 10];
vector<int>prm;
ll n, cnt[1000000 + 5], ans, mu[1000000 + 10], f[1000000 + 10], g[1000000 + 10];
void getprm(int lim) {
	memset(isp, 1, sizeof isp);
	isp[0] = isp[1] = 0;
	mu[1] = 1;
	for (int i = 2; i <= lim; ++i) {
		if (isp[i])
			prm.push_back(i),
			mu[i] = -1;
		for (int j = 0; j < prm.size(); ++j) {
			if (i * prm[j] > lim) break;
			isp[i * prm[j]] = 0;
			if (i % prm[j] == 0) break;
			mu[i * prm[j]] = -mu[i];
		}
	}
	for (ll i = 1; i <= 1000000; i++)
		for (ll j = i; j <= 1000000; j += i)
			f[j] += mu[i] * i;
	for (ll i = 1; i <= 1000000; i++) {
		for (ll j = 1; j <= 1000000 / i; j++)
			(g[i] += j * cnt[j * i]) %= mod;
	}
}
ll poww(ll x, ll k) {
	if (k == 0) return 1;
	if (k == 1) return x;
	ll tmp = poww(x, k / 2);
	tmp = (tmp * tmp) % mod;
	if (k % 2 == 1) return tmp * x % mod;
	else return tmp;
}
namespace Change {
	struct Edge {
		int v, w, nxt;
	}edge[35000000 + 5];
	int head[3500000 + 5], idx;
	void add(int u, int v, int w) {
		edge[++idx] = { v,w,head[u] };
		head[u] = idx;
	}
	struct Node {
		int first, second;
		friend bool operator<(const Node& a, const Node& b) {
			return a.first > b.first;
		}
	};
	int k, dis[3500000 + 5];
	priority_queue<Node>q;
	bool vis[3500000 + 5];
	void dij() {
		memset(dis, 0x3f, sizeof dis);
		dis[k] = 0;
		q.push({ 0,k });
		while (!q.empty()) {
			Node p = q.top(); q.pop();
			if (vis[p.second]) continue;
			vis[p.second] = 1;
			for (int i = head[p.second]; i; i = edge[i].nxt) {
				if (dis[edge[i].v] > dis[p.second] + edge[i].w) {
					dis[edge[i].v] = dis[p.second] + edge[i].w;
					q.push({ dis[p.second] + edge[i].w,edge[i].v });
				}
			}
		}
	}
	void main() {
		for (int i = 0; i < k; ++i)
			for (int j = 0; j < 10; ++j)
				add(i, (i * 10 + j) % k, j);
		for (int i = 1; i < 10; ++i)
			add(k, i % k, i);
		dij();
		cout << dis[0] << endl;
	}
}
int main() {
	cin.tie(0)->sync_with_stdio(false);
	cin >> n;
	for (ll i = 1, x; i <= n; i++)
		cin >> x, ++cnt[x];
	getprm(1000000);
	for (ll i = 1; i <= 1000000; i++)
		(ans += i * g[i] % mod * g[i] % mod * f[i]) %= mod;
	for (ll i = 1; i <= 1000000; i++)
		if (cnt[i])
			(ans -= i * cnt[i]) %= mod;
	((ans %= mod) += mod) %= mod;
	(ans *= poww(2, mod - 2)) %= mod;
	cout << ans << endl;
	Change::k = ans + 1;
	Change::main();
	return 0;
}