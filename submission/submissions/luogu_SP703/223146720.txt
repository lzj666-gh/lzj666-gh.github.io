//  OJ: 洛谷
//  提交ID: 223146720
//  题目ID: SP703
#include<bits/stdc++.h>
#define int long long
using namespace std;
constexpr int N = 200 + 5;
int l, n, dp[2][N][N], dis[N][N];
signed main() {
	cin.tie(0)->sync_with_stdio(false);
	cin >> l >> n;
	for (int i = 1; i <= l; ++i) for (int j = 1; j <= l; ++j) cin >> dis[i][j];
	memset(dp, 0x3f, sizeof dp);
	int cur = 0; dp[0][2][3] = 0;
	int lst = 1;
	while (n--) {
		cur ^= 1; memset(dp[cur], 0x3f, sizeof dp[cur]);
		int x; cin >> x;
		for (int i = 1; i <= l; ++i)
			for (int j = 1; j <= l; ++j) {
				if (i == lst || j == lst || i == j) continue;
				dp[cur][i][j] = min(dp[cur][i][j], dp[cur ^ 1][i][j] + dis[lst][x]);
				dp[cur][i][lst] = min(dp[cur][i][lst], dp[cur ^ 1][i][j] + dis[j][x]);
				dp[cur][lst][j] = min(dp[cur][lst][j], dp[cur ^ 1][i][j] + dis[i][x]);
			}
		lst = x;
	}
	int ans = LLONG_MAX;
	for (int i = 1; i <= l; ++i)
		for (int j = 1; j <= l; ++j)
			if (i ^ j)
				ans = min(ans, dp[cur][i][j]);
	cout << ans << endl;
	return 0;
}