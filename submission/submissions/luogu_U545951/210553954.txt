//  OJ: 洛谷
//  提交ID: 210553954
//  题目ID: U545951
#include <iostream>
#include <vector>
#include <algorithm>
#include <unordered_map>
#include <string>
using namespace std;

const int MOD = 998244353;

// 找到项链的最小旋转表示
string getMinRotation(const string &s) {
    string doubled = s + s;
    int n = s.size(); 
    int res = 0;
    for (int i = 1; i < n; ++i) {
        if (doubled.substr(i,  n) < doubled.substr(res,  n)) {
            res = i;
        }
    }
    return doubled.substr(res,  n);
}

void dfs(int pos, int n, int m, string &current, vector<string> &all) {
    if (pos == n) {
        all.push_back(current); 
        return;
    }
    for (int c = 1; c <= m; ++c) {
        current[pos] = '0' + c;
        dfs(pos + 1, n, m, current, all);
    }
}

int main() {
    int n, m;
    cin >> n >> m;
    
    vector<string> all;
    string current(n, '0');
    dfs(0, n, m, current, all);
    
    unordered_map<string, int> unique;
    for (const string &s : all) {
        string min_rot = getMinRotation(s);
        unique[min_rot]++;
    }
    
    long long total = 0;
    for (const auto &entry : unique) {
        const string &s = entry.first; 
        int sum = 0;
        for (char c : s) {
            sum += c - '0';
        }
        total = (total + sum) % MOD;
    }
    
    cout << total << endl;
    return 0;
}