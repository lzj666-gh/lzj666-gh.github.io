//  OJ: 洛谷
//  提交ID: 217281402
//  题目ID: P3243
#include<bits/stdc++.h>
#define int long long 
using namespace std;
constexpr int N = 100000 + 10, M = 100000 + 10;
vector<int>edge[N];
int n, m;
bool vis[N], cyc[N];
vector<int>ans; bool flg = 1;
void dfs(int x) {
	if (cyc[x]) return void(flg = 0);
	if (vis[x]) return;
	cyc[x] = 1;
	vis[x] = 1;
	for (const int& i : edge[x])
		dfs(i);
	cyc[x] = 0;
	ans.push_back(x);
}
signed main() {
	cin.tie(0)->sync_with_stdio(false);
	int T;
	cin >> T;
	while (T--) {
		fill(edge + 1, edge + n + 1, vector<int>());
		memset(vis, 0, sizeof vis); flg = 1;
		ans.clear();
		cin >> n >> m;
		for (int i = 1, u, v; i <= m; ++i) cin >> u >> v, edge[v].push_back(u);
		for (int i = 1; i <= n; ++i) sort(edge[i].begin(), edge[i].end());
		for (int i = 1; i <= n; ++i)
			dfs(i);
		if (flg) for (const int& ycy : ans) cout << ycy << ' ';
		else cout << "Impossible!";
		cout << endl;
	}
	return 0;
}