//  OJ: 洛谷
//  提交ID: 164597882
//  题目ID: T343315
#include<bits/stdc++.h>
using namespace std;
struct Edeg {
	int v, w, nxt;
}edge[500000 + 10];
int idx, head[500000 + 10];
void add(int u, int v, int w) {
	edge[++idx] = { v,w,head[u] };
	head[u] = idx;
}
int n, d[500000 + 10];
void dfs(int k) {
	int d1 = INT_MIN, d2 = INT_MIN;
	for (int i = head[k]; i; i = edge[i].nxt) {
		dfs(edge[i].v);
		int now = d[edge[i].v] + edge[i].w;
		if (now > d1)d2 = d1, d1 = now;
		else if (now > d2) d2 = now;
	}
	d[k] = max({ d1,d2,d1 + d2 });
	if (!head[k]) d[k] = 0;
}
int main() {
	ios_base::sync_with_stdio(false);
	cin >> n;
	for (int i = 1, u, v, w; i < n; ++i) cin >> u >> v >> w, add(u, v, w);
	dfs(1);
	int ans = INT_MIN;
	for (int i = 1; i <= n; ++i) ans = max(ans, d[i]);
	cout << ans << endl;
	return 0;
}