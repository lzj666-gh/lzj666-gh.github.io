//  OJ: 洛谷
//  提交ID: 164601135
//  题目ID: T343315
#include<bits/stdc++.h>
#include<unordered_map>
using namespace std;
struct Edge {
	int v, w, nxt;
}edge[500000 + 10];
int idx;
unordered_map<int, int>d1, d2, head;
void add(int u, int v, int w) {
	edge[++idx] = { v,w,head[u] };
	head[u] = idx;
}
int n;
unordered_map<int, bool>vis;
void dfs(int k) {
	vis[k] = 1;
	for (int i = head[k]; i; i = edge[i].nxt) {
		if (vis[edge[i].v]) continue;
		dfs(edge[i].v);
		int now = d1[edge[i].v] + edge[i].w;
		if (now > d1[k])d2[k] = d1[k], d1[k] = now;
		else if (now > d2[k]) d2[k] = now;
	}
	if (!head[k]) d1[k] = d2[k] = 0;
}
int main() {
	ios_base::sync_with_stdio(false);
	cin >> n;
	for (int i = 1, u, v, w; i < n; ++i) cin >> u >> v >> w, add(u, v, w), add(v, u, w);
	dfs(1);
	int ans = INT_MIN;
	for (int i = 1; i <= n; ++i) ans = max(ans, d1[i] + d2[i]);
	cout << ans << endl;
	return 0;
}