//  OJ: 洛谷
//  提交ID: 219607384
//  题目ID: P2860
#include<bits/stdc++.h>
using namespace std;
struct Edge {
	int u, v, nxt;
}edge[8000000 + 10];
int head[5000000 + 10], idx = 1, a[5000000 + 10];
void add(int u, int v) {
	edge[++idx] = { u,v,head[u] };
	head[u] = idx;
}
int n, m, scc[5000000 + 10], dfn[5000000 + 10], low[5000000 + 10], cnt, idk;
stack<int>stk;
vector<int>edcc[5000000 + 10];
void tarjan(int x, int in) {
	dfn[x] = low[x] = ++idk; stk.push(x);
	for (int i = head[x]; i; i = edge[i].nxt) {
		if (!dfn[edge[i].v]) {
			tarjan(edge[i].v, i),
				low[x] = min(low[x], low[edge[i].v]);
		}
		else if (in ^ 1 ^ i)
			low[x] = min(low[x], dfn[edge[i].v]);
	}
	if (dfn[x] == low[x]) {
		++cnt;
		while (stk.size()) {
			int now = stk.top(); stk.pop();
			edcc[cnt].push_back(now);
			if (now == x) break;
		}
	}
}
int tot[5000000 + 10], bel[5000000 + 10];
int main() {
	ios_base::sync_with_stdio(false);
	cin >> n >> m;
	for (int i = 1, u, v; i <= m; ++i)
		cin >> u >> v, add(u, v), add(v, u);
	for (int i = 1; i <= n; ++i) if (!dfn[i]) tarjan(i, 0);
	for (int i = 1; i <= cnt; ++i)
		for (const int& j : edcc[i])
			bel[j] = i;
	for (int i = 2; i <= idx; i += 2)
		if (bel[edge[i].u] ^ bel[edge[i].v])
			++tot[bel[edge[i].u]], ++tot[bel[edge[i].v]];
	int ans = 0;
	for (int i = 1; i <= cnt; ++i) ans += tot[i] == 1;
	cout << (ans + 1) / 2 << endl;
	return 0;
}