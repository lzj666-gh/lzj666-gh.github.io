//  OJ: 洛谷
//  提交ID: 186916898
//  题目ID: P11228
#include<bits/stdc++.h>
using namespace std;
int dt[4][2] = {{0, 1}, {1, 0}, {0, -1}, {-1, 0}};
int T, n, m, k, stp, ans;
bool vis[1000 + 10][1000 + 10][4], can[1000 + 10][1000 + 10], viss[1000 + 10][1000 + 10];
void dfs(int x, int y, int d) {
	if (stp > k) return;
	if (vis[x][y][d]) return;
	vis[x][y][d] = 1;
	viss[x][y] = 1;
//	if(stp>=20000) cerr<<x<<' '<<y<<' '<<n<<' '<<m<<endl;
	while (
	    !(1 <= x + dt[d][0] && x + dt[d][0] <= n && 1 <= y + dt[d][1] && y + dt[d][1] <= m && can[x + dt[d][0]][y + dt[d][1]])
	    && stp <= k) stp++, d++, d %= 4;
	stp++;
	if (stp > k) return;
	dfs(x + dt[d][0], y + dt[d][1], d);
}
char tmp;
int main() {
// 	freopen("explore.in", "r", stdin);
// 	freopen("explore.out", "w", stdout);
	cin.tie(0)->sync_with_stdio(false);
	cin >> T;
	while (T--) {
		cin >> n >> m >> k;
//		cerr<<"lst "<<T<<' '<<k<<endl;
		int x, y, d;
		cin >> x >> y >> d;
		for (int i = 1; i <= n; ++i)
			for (int j = 1; j <= m; ++j)
				cin >> tmp,
				    can[i][j] = tmp == '.',
				                vis[i][j][0] = vis[i][j][1] = vis[i][j][2] = vis[i][j][3] = viss[i][j] = 0;
		stp = 0;
		dfs(x, y, d);
		ans = 0;
		for (int i = 1; i <= n; ++i)
			for (int j = 1; j <= m; ++j)
				ans += viss[i][j];
		cout << ans << endl;
	}
	return 0;
}
/*
2
1 5 4
1 1 2
....x
5 5 20
1 1 0
.....
.xxx.
.x.x.
..xx.
x....
*/