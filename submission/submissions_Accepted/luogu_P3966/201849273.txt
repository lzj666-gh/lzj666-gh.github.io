//  OJ: 洛谷
//  提交ID: 201849273
//  题目ID: P3966
#include<bits/stdc++.h>
using namespace std;
int n, trie[1000000 + 5][27], idx, ret[1000000 + 5];
vector<int>v[1000000 + 5];
void insert(string s, int id) {
	int k = 0;
	for (const char& c : s) {
		if (!trie[k][c - 'a'])
			trie[k][c - 'a'] = ++idx;
		k = trie[k][c - 'a'];
	}
	v[k].push_back(id);
}
void build() {
	queue<int>q;
	for (int i = 0; i < 26; ++i)
		if (trie[0][i])
			q.push(trie[0][i]);
	while (!q.empty()) {
		int now = q.front(); q.pop();
		for (int i = 0; i < 26; ++i)
			if (trie[now][i])
				q.push(trie[now][i]),
				ret[trie[now][i]] = trie[ret[now]][i];
			else
				trie[now][i] = trie[ret[now]][i];
	}
}
int ans[1000000 + 5], cnt[1000000 + 5];
int r[1000000 + 5];
void query(string s) {
	for (int k = 0, i = 0; k < s.size(); ++k) {
		i = trie[i][s[k] - 'a'];
		cnt[i]++;
	}
	queue<int>topo;
	for (int i = 0; i <= idx; ++i)
		r[ret[i]]++;
	for (int i = 0; i <= idx; ++i)
		if (!r[i])
			topo.push(i);
	while (!topo.empty()) {
		int now = topo.front(); topo.pop();
		r[ret[now]]--;
		cnt[ret[now]] += cnt[now];
		if (!r[ret[now]]) topo.push(ret[now]);
	}
	for (int j = 1; j <= idx; ++j)
		for (const int& x : v[j])
			ans[x] += cnt[j];
	for (int i = 1; i <= n; ++i)
		cout << ans[i] << endl;
}
int main() {
	cin.tie(0)->sync_with_stdio(false);
	cin >> n;
	string s, S;
	for (int i = 1; i <= n; ++i)
		cin >> s, insert(s, i), S += s + '{';
	build();
	query(S);
	return 0;
}
[[never_let_you_go_it_is_why_I_did_them_all]]
int for_a_chance_at_least_to_live_in_your_ways;
[[love_of_you_is_my_most_cherished_thing]]
bool so_stay_alive_bravely;