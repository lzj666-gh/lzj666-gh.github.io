//  OJ: 洛谷
//  提交ID: 167709644
//  题目ID: P2014
#include<bits/stdc++.h>
using namespace std;
struct Edge {
	int v, w, nxt;
}edge[300 + 10];
int head[300 + 10], idx;
void add(int u, int v, int w) {
	edge[++idx] = { v,w,head[u] };
	head[u] = idx;
}
int n, k, dp[300 + 10][300 + 10];
void dfs(int now) {
	for (int q = head[now]; q; q=edge[q].nxt) {
		dfs(edge[q].v);
		for (int i = k; i; --i)
			for (int j = i - 1; j >= 0; --j)
				dp[now][i] = max(dp[now][i], dp[edge[q].v][j] + dp[now][i - j - 1] + edge[q].w);
	}
		
}
int main() {
	ios_base::sync_with_stdio(false);
	cin >> n >> k;
	for (int i = 1, v, w; i <= n; ++i) cin >> v >> w, add(v, i, w);
	dfs(0);
	cout << dp[0][k] << endl;
	return 0;
}