//  OJ: 洛谷
//  提交ID: 141032244
//  题目ID: T343315
#include<bits/stdc++.h>
using namespace std;
const int N=5000001;
int n,u,v,w,dp[N],ans;
int head[N],ne[N],to[N],lo[N],t;
bool vis[N];
inline void add(int x,int y,int z){
	ne[++t]=head[x];head[x]=t;
	to[t]=y;lo[t]=z;
}
void dfs(int num){
	vis[num]=1;
	for(int i=head[num];i;i=ne[i]){
		int x=to[i];
		if(vis[x]) continue;
		dfs(x);
		ans=max(ans,dp[x]+dp[num]+lo[i]);
		dp[num]=max(dp[num],dp[x]+lo[i]);
	}
}
int main(){
	ios::sync_with_stdio(false);cin.tie(NULL);cout.tie(NULL);
	cin>>n;
	for(int i=1;i<n;++i){
		cin>>u>>v>>w;
		add(u,v,w);
		add(v,u,w);
	}
	dfs(1);
	cout<<ans<<endl;
	return 0;
}