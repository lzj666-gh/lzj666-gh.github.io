//  OJ: 洛谷
//  提交ID: 142187622
//  题目ID: P1908
#include<bits/stdc++.h>
#define N (int(5e5))
#define lc(x) (x<<1)
#define rc(x) (x<<1|1)
#define mid (l+r>>1)
using namespace std;
struct Tree{
	int sum,lazy;
}tree[N<<2];
pair<int,int>a[N];
void pushdown(int x,int l,int r){
	tree[lc(x)]={tree[lc(x)].sum+tree[x].lazy*(mid-l+1),tree[lc(x)].lazy+tree[x].lazy};
	tree[rc(x)]={tree[rc(x)].sum+tree[x].lazy*(r-mid),tree[rc(x)].lazy+tree[x].lazy};
	tree[x].lazy=0;
}
int ask_point(int x,int l,int r,int k){
	if(l==r) return tree[x].sum;
	pushdown(x,l,r);
	if(k<=mid) return ask_point(lc(x),l,mid,k);
	return ask_point(rc(x),mid+1,r,k);
}
void add(int x,int l,int r,int L,int R,int k){
	if(l>R||r<L) return ;
	if(l>=L&&r<=R) return void(tree[x]={tree[x].sum+k*(r-l+1),tree[x].lazy+k});
	pushdown(x,l,r);
	add(lc(x),l,mid,L,R,k);
	add(rc(x),mid+1,r,L,R,k);
}
int n;
long long ans;
int main(){
	ios_base::sync_with_stdio(false);
	cin>>n;
	for(int i=1,x;i<=n;++i) cin>>x,a[i]={x,i};
	sort(&a[1],&a[n+1]);
	for(int i=1;i<=n;++i){
		if(a[i].first==a[i+1].first){
			int tmp=i;
			while(a[i].first==a[i+1].first){
				ans+=ask_point(1,1,n,a[i].second);++i;
			}ans+=ask_point(1,1,n,a[i].second);
			i=tmp;
			if(a[i].first==a[i+1].first){
				while(a[i].first==a[i+1].first){
					add(1,1,n,1,a[i].second-1,1);++i;
				} 
				add(1,1,n,1,a[i].second-1,1);
			}
		}
		else{
			ans+=ask_point(1,1,n,a[i].second);
			add(1,1,n,1,a[i].second-1,1);
		}
	}
	cout<<ans<<endl;
	return 0;
}