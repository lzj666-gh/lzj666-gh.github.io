//  OJ: 洛谷
//  提交ID: 157885671
//  题目ID: P1908
#include<bits/stdc++.h>
#define lc(p) p<<1
#define rc(p) p<<1|1
using namespace std;
struct Tree{
	int l,r,sum;
}tree[500000*4+10];
int n,a[500000+10],b[500000+10],mx=-0x3f3f3f3f;
void pushup(int p){
	tree[p].sum=tree[lc(p)].sum+tree[rc(p)].sum;
}
void build(int p,int l,int r){
//	printf("now at %d,%d ans node idx is %d;it's left child is %d,%d;right child is %d,%d\n",l,r,p,l,l+r>>1,l+r>>1|1,r);
	tree[p].l=l,tree[p].r=r,tree[p].sum=0;
	if(l==r) return;
	build(lc(p),l,l+r>>1);
	build(rc(p),(l+r>>1)+1,r);
}
void chg(int p,int x){
	if(tree[p].l==tree[p].r){
		tree[p].sum++;
		return;
	}
	if(x<=tree[p].l+tree[p].r>>1) chg(lc(p),x);
	else chg(rc(p),x);
	pushup(p);
}
long long qry(int p,int l,int r){
	if(l<=tree[p].l&&tree[p].r<=r) return tree[p].sum;
	if(l>tree[p].r||r<tree[p].l) return 0;
	long long ans=0;
	ans+=qry(lc(p),l,r);
	ans+=qry(rc(p),l,r);
	return ans;
}
int main(){
	ios_base::sync_with_stdio(false);
	cin>>n;
	build(1,1,n);
	for(int i=1;i<=n;++i) cin>>a[i],b[i]=a[i];
	sort(b+1,b+n+1);
	for(int i=1;i<=n;++i) a[i]=(lower_bound(b+1,b+n+1,a[i])-b);
	long long ans=0;
	for(int i=1;i<=n;++i){
		ans+=qry(1,a[i]+1,n);
//		cout<<i<<':'<<a[i]+1<<' '<<qry(1,a[i]+1,n)<<' '<<ans<<endl;
//		for(int i=1;i<=n;++i) cout<<qry(1,i,i)<<' '; cout<<endl;
		chg(1,a[i]);
	}
	cout<<ans<<endl;
	return 0;
}