//  OJ: 洛谷
//  提交ID: 159229692
//  题目ID: P10497
#include<bits/stdc++.h>
#define int long long
#define ONLINE_JUDGE 
#ifdef ONLINE_JUDGE
#define gcd __gcd
#define lcm(a,b)((a)*(b)/__gcd((a),(b)))
#endif
using namespace std;
struct node{
	int r,m;
	node():r(0),m(0){}
	node(int l,int r):r(l),m(r){}
};
int poww(int a,int x,int p=9901){
	if(x==0)return 1;
	long long t=poww(a,x/2,p)% p;
	t=(t*t)% p;
	if(x % 2==1)t=(t*a)% p;
	return t;
}
void exgcd(long long a,long long b,long long& x,long long& y){
	if(b==0){ x=1;y=0;return;}
	exgcd(b,a % b,x,y);
	int z=x;x=y,y=z-y*(a/b);
}
inline long long inv(long long a,long long p){
	long long x,y;
	exgcd(a,p,x,y);
	return(x % p+p)% p;
}
#undef int
#define int __int128
inline node merge(node& cbc,node&& cyc){
	int a=cbc.m,b=cbc.r,A=cyc.m,B=cyc.r;
	if((B-b)%gcd(a,A)){
		cout<<-1<<endl;
		exit(0);
	}
	node nw;
	long long x,y;
	exgcd(a,A,x,y);
	int d=gcd(a,A);
	x=x*(B-b)/d%(A/d);
	if(x<0)x+=A/d;
	long long tmp=lcm(a,A);
	b=((a*x+b)%tmp+tmp)%tmp;
	nw={b,tmp};
	return nw;
}
#undef int
#define int long long
node now;
int n,l,r;
signed main(){
	ios::sync_with_stdio(false);
	while(cin>>n){
	    cin>>now.m>>now.r;
    	while(--n){
    		cin>>l>>r;
    		now=merge(now,node(r,l));
    	}
    	cout<<now.r<<endl;
	}
    	
	return 0;
}