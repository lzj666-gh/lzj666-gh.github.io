//  OJ: 洛谷
//  提交ID: 218004617
//  题目ID: P2916
#include<bits/stdc++.h>
#define int long long
using namespace std;
constexpr int N = 10000 + 10, M = 200000 + 10;
int fa[N];
int find(int x) { return fa[x] == x ? x : fa[x] = find(fa[x]); }
struct Edge {
	int u, v, w;
	friend bool operator<(const Edge& a, const Edge& b) {
		return a.w < b.w;
	}
}edge[M];
int n, p, a[N][N], c[N], dis[N];
signed main() {
	cin.tie(0)->sync_with_stdio(false);
	int ans = INT_MAX, cnt = 0;
	cin >> n >> p;
	for (int i = 1; i <= n; ++i) fa[i] = i;
	for (int i = 1; i <= n; ++i) cin >> c[i], ans = min(ans, c[i]);
	for (int i = 1, u, v, w; i <= p; ++i)
		cin >> u >> v >> w,
		edge[i << 1] = { u,v,w + w + c[u] + c[v] },
		edge[i << 1 | 1] = { u,v,w + w + c[u] + c[v] };
	int m = (p << 1 | 1);
	sort(edge + 2, edge + m + 1);
	for (int i = 2; i <= m; ++i) {
		int x = find(edge[i].u), y = find(edge[i].v);
		if (x == y) continue;
		fa[x] = y;
		ans += edge[i].w;
		cnt++;
	}
	if (cnt < n - 1) cout << "-1" << endl;
	else cout << ans << endl;
	return 0;
}