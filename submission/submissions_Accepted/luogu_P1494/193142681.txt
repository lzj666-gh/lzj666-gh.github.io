//  OJ: 洛谷
//  提交ID: 193142681
//  题目ID: P1494
#include<bits/stdc++.h>
#ifndef ONLINE_JUDGE
#define __gcd gcd
#endif // !ONLINE_JUDGE
using namespace std;
int vis[100000 + 10], a[100000 + 10];
long long sum;
void add(int x) {
	sum -= (vis[a[x]] - 1ll) * vis[a[x]];
	vis[a[x]]++;
	sum += (vis[a[x]] - 1ll) * vis[a[x]];
}
void remove(int x) {
	sum -= (vis[a[x]] - 1ll) * vis[a[x]];
	vis[a[x]]--;
	sum += (vis[a[x]] - 1ll) * vis[a[x]];
}
int n, Q, bel[100000 + 10];
struct query {
	int l, r, id; string ans;
	friend bool operator<(const query& a, const query& b) {
		if (a.l > a.r) return false;
		if (b.l > b.r) return true;
		return bel[a.l] == bel[b.l] ? bel[a.l] % 2 == 1 ? a.r<b.r : a.r>b.r : bel[a.l] < bel[b.l];
	}
}q[100000 + 10];
signed main() {
	cin.tie(0)->sync_with_stdio(false);
	cin >> n >> Q;
	for (int i = 1; i <= n; ++i) cin >> a[i];
	for (int i = 1; i <= n; ++i) bel[i] = ceil(sqrt(i));
	for (int j = 1; j <= Q; ++j) cin >> q[j].l >> q[j].r, q[j].id = j;
	sort(q + 1, q + Q + 1);
	for (int i = q[1].l; i <= q[1].r; ++i) add(i);
	//cout << q[1].l << ' ' << q[1].r << ' ' << sum << endl;
	long long tmp = (q[1].r + 1ll - q[1].l) * (q[1].r - q[1].l);
	long long t = __gcd(tmp, sum);
	if (sum == 0 || tmp == 0) {
		q[1].ans = "0/1";
	}
	else
		q[1].ans = to_string(sum / t) + '/' + to_string(tmp / t);
	for (int j = 2; j <= Q; ++j) {
		if (q[j].l > q[j].r) {
			q[j].ans = "0/1";
			continue;
		}
		while (q[j - 1].l < q[j].l) remove(q[j - 1].l), q[j - 1].l++;
		while (q[j - 1].l > q[j].l) add(q[j - 1].l - 1), q[j - 1].l--;
		while (q[j - 1].r < q[j].r) add(q[j - 1].r + 1), q[j - 1].r++;
		while (q[j - 1].r > q[j].r) remove(q[j - 1].r), q[j - 1].r--;
		tmp = (q[j].r + 1ll - q[j].l) * (q[j].r - q[j].l);
		t = __gcd(tmp, sum);
		if (sum == 0 || tmp == 0) {
			q[j].ans = "0/1";
			continue;
		}
		q[j].ans = to_string(sum / t) + '/' + to_string(tmp / t);
	}
	sort(q + 1, q + Q + 1, [](const query& a, const query& b)->bool {return a.id < b.id; });
	for (int i = 1; i <= Q; ++i) cout << q[i].ans << endl;
	return 0;
}