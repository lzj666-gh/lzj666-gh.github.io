//  OJ: 洛谷
//  提交ID: 165102789
//  题目ID: T272995
#include<bits/stdc++.h>
using namespace std;
constexpr int mod = 1e9 + 7;
int n, m, a[1000 + 10];
int dp[1000 + 10][1000 + 10];
vector<int>lsh;
struct Tree_array {
#define lb(x) (x&-x)
	int tr[1000 + 10];
	void add(int x, int k) {
		while (x <= n + 1) tr[x] = (tr[x] + k) % mod, x += lb(x);
	}
	int qry(int x) {
		int ans = 0;
		while (x) (ans += tr[x]) %= mod, x -= lb(x);
		return ans;
	}
	void clear() {
		memset(tr, 0, sizeof tr);
	}
}t;
int main() {
	ios_base::sync_with_stdio(false);
	int T;
	cin >> T;
	for (int nanan = 1; nanan <= T; ++nanan) {
		cin >> n >> m;
		lsh.clear();
		for (int i = 1; i <= n; ++i) cin >> a[i], lsh.emplace_back(a[i]);
		memset(dp, 0, sizeof dp);
		sort(lsh.begin(), lsh.end());
		lsh.erase(unique(lsh.begin(), lsh.end()), lsh.end());
		for (int i = 1; i <= n; ++i) a[i] = lower_bound(lsh.begin(), lsh.end(), a[i]) - lsh.begin() + 2;
		a[0] = 1; dp[0][0] = 1;
		cout << "Case #" << nanan << ": ";
		for (int i = 1; i <= m; ++i) {
			t.clear();
			t.add(a[0], dp[i - 1][0]);
			for (int j = 1; j <= n; ++j) {
				dp[i][j] = t.qry(a[j] - 1);
				t.add(a[j], dp[i - 1][j]);
			}
		}
		int ans = 0;
		for (int i = 1; i <= n; ++i) (ans += dp[m][i]) %= mod;
		cout << ans << endl;
	}
	return 0;
}