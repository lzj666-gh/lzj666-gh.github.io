//  OJ: 洛谷
//  提交ID: 114818526
//  题目ID: P1140
#include<bits/stdc++.h>
using namespace std;
const int degree[5][5]=
{
    {5,-1,-2,-1,-3},
    {-1,5,-3,-2,-4},
    {-2,-3,5,-2,-2},
    {-1,-2,-2,5,-1},
    {-3,-4,-2,-1,0}
},maxn=100+10;
inline int ikun(char c){
	if(c=='A') return 0;
	else if(c=='C') return 1;
	else if(c=='G') return 2;
	else if(c=='T') return 3;
	else return 4;
}
int max(int a,int b){
	return a>b?a:b;
}
int l1,l2,a[maxn],b[maxn],dp[maxn][maxn];
//dp[i][j]=a[i]~b[j]
int main(){
	ios::sync_with_stdio(false);
	cin>>l1;
	for(int i=1;i<=l1;i++){
		char c;
		cin>>c;
		a[i]=ikun(c);
	}
	cin>>l2;
	for(int i=1;i<=l2;i++){
		char c;
		cin>>c;
		b[i]=ikun(c);
	}
	for(int i=1;i<=l1;i++) for(int j=1;j<=l2;j++) dp[i][j]=INT_MIN+114514;
	for(int i=1;i<=l1;i++) dp[i][0]=dp[i-1][0]+degree[a[i]][4];
	for(int i=1;i<=l2;i++) dp[0][i]=dp[0][i-1]+degree[b[i]][4];
	for(int i=1;i<=l1;i++){
		for(int j=1;j<=l2;j++){
			dp[i][j]=max(dp[i][j],dp[i][j-1]+degree[b[j]][4]);
            dp[i][j]=max(dp[i][j],dp[i-1][j]+degree[a[i]][4]);
            dp[i][j]=max(dp[i][j],dp[i-1][j-1]+degree[a[i]][b[j]]);
		}
	}
	cout<<dp[l1][l2]<<endl;
}