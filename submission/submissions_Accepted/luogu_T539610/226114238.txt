//  OJ: 洛谷
//  提交ID: 226114238
//  题目ID: T539610
#include<bits/stdc++.h>
#define int long long
using namespace std;
const int N = 20000000 + 5;
int mod, T, n, m, jc[N], inv[N];
int qpow(int a, int b) {
	int res = 1;
	while (b) {
		if (b & 1) (res *= a) %= mod;
		(a *= a) %= mod; b >>= 1;
	}
	return res;
}
inline int C(int x, int y) {
	if (x < y) return 0;
	return jc[x] * inv[y] % mod * inv[x - y] % mod;
}
void init(int n) {
	jc[0] = 1;
	for (int i = 1; i <= n; i++) jc[i] = jc[i - 1] * i % mod;
	inv[n] = qpow(jc[n], mod - 2);
	for (int i = n - 1; i >= 0; i--) inv[i] = inv[i + 1] * (i + 1) % mod;
}
int32_t main() {
	cin.tie(0)->sync_with_stdio(false);
	cin >> mod >> T;
	init(N - 1);
	while (T--) {
		cin >> n >> m;
		int sum = 0, nn = 2 * n;
		for (int i = 0; i <= nn; i++) {
			int t = n * m - i * (m + 1);
			if (i & 1) sum -= C(t + nn - 1, nn - 1) % mod * C(nn, i) % mod;
			else sum += C(t + nn - 1, nn - 1) % mod * C(nn, i) % mod;
			sum %= mod;
		}
		cout << (sum * qpow(qpow(m + 1, nn), mod - 2) % mod + mod) % mod << endl;
	}
	return 0;
}