//  OJ: 洛谷
//  提交ID: 174729729
//  题目ID: P10931
#include<bits/stdc++.h>
using namespace std;
struct Edge{
	int v,w,nxt;
}edge[2000000+10];
int idx,head[1000000+10];
void add(int u,int v,int w){
	edge[++idx]={v,w,head[u]};
	head[u]=idx;
}
int f[1000000+10][100],t,dep[1000000+10];
void get_f(int now,int fa,int d){
	dep[now]=d;
	f[now][0]=fa;
	for(int i=1;i<=t;++i) f[now][i]=f[f[now][i-1]][i-1];
	for(int i=head[now];i;i=edge[i].nxt){
		if(edge[i].v==fa) continue;
		get_f(edge[i].v,now,d+1);
	}
}
int n,k;
int lca(int a,int b){
	if(dep[a]<dep[b]) swap(a,b);
	int cdep=dep[a]-dep[b];
	for(int i=t;i>=0;--i) if((1<<i)&cdep) a=f[a][i];
	if(a==b){
		return a;
	}
	for(int i=t;i>=0;--i) if(f[a][i]^f[b][i]) a=f[a][i],b=f[b][i];
	return f[a][0];
}
int cf[1000000+10],ans;
void work(int now,int fa){
	for(int i=head[now];i;i=edge[i].nxt){
		if(edge[i].v==fa) continue;
		work(edge[i].v,now);
		cf[now]+=cf[edge[i].v];
	}
}
namespace ROOT {
	int f[100000 + 10], g[100000 + 10], Vis[100000 + 10], O;
	void dfs(int x) {
		Vis[x] = 1;
		int p = head[x];
		while (p) {
			if (Vis[edge[p].v]) {
				dfs(edge[p].v);
				g[x] += g[edge[p].v] + 1;
				f[x] = max(f[x], g[edge[p].v] + 1);
			}
			p = edge[p].nxt;
		}
		f[x] = max(f[x], n - g[x] - 1);
		Vis[x] = 0;
	}
	int gtrt(int rt) {
		dfs(rt);
		f[0] = INT_MAX;
		O = 0;
		for (int i = 1; i <= n; ++i)
			if (f[O] > f[i] && f[i])
				O = i;
		return O;
	}
}
int main(){
	ios_base::sync_with_stdio(false);
	dep[0]=INT_MAX;
	cin>>n>>k;
	t=ceil(log2(n)+1);
	for(int i=1,u,v;i<n;++i) cin>>u>>v,add(u,v,1),add(v,u,1);
	int frm=ROOT::gtrt(1);
	get_f(frm,0,1);
	for(int i=1;i<=k;++i){
		int a,b;
		cin>>a>>b;
		int L=lca(a,b);
		cf[a]++;cf[b]++;cf[L]-=2;
	}
	work(frm,0);
	for(int i=1;i<=n;++i) if(i^frm) if(cf[i]==0) ans+=k;else if(cf[i]==1) ans++;
	cout<<ans<<endl;
	return 0;
}