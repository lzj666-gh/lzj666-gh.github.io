//  OJ: 洛谷
//  提交ID: 202783104
//  题目ID: U232523
#include<bits/stdc++.h>
#define ans(x) (t[p - 1] * ((x) / p) + t[(x) % p])
using namespace std;
namespace IO {
    const int SIZE = (1 << 20) + 1;
    char ibuf[SIZE], * iS, * iT, obuf[SIZE], * oS = obuf, * oT = obuf + SIZE - 1;
    char _st[55];
    int _qr = 0;
    inline char gc() {
        return (iS == iT ? iT = (iS = ibuf) + fread(ibuf, 1, SIZE, stdin), (iS == iT ? EOF : *iS++) : *iS++);
    }
    inline void qread() {}
    template<class T1, class ...T2>
    inline void qread(T1& IEE, T2&... ls) {
        T1 __ = 0, ___ = 1;
        char ch;
        while (!isdigit(ch = gc())) ___ = (ch == '-') ? -___ : ___;
        do {
            __ = (__ << 1) + (__ << 3) + (ch ^ 48);
        } while (isdigit(ch = gc()));
        __ *= ___;
        IEE = __;
        qread(ls...);
        return;
    }
    inline void flush() {
        fwrite(obuf, 1, oS - obuf, stdout);
        oS = obuf;
        return;
    }
    inline void putc_(char _x) {
        *oS++ = _x;
        if (oS == oT) flush();
    }
    inline void qwrite() {}
    template<class T1, class ...T2>
    inline void qwrite(T1 IEE, T2... ls) {
        if (!IEE) putc_('0');
        if (IEE < 0) putc_('-'), IEE = -IEE;
        while (IEE) _st[++_qr] = IEE % 10 + '0', IEE /= 10;
        while (_qr) putc_(_st[_qr--]);
        qwrite(ls...);
        return;
    }
    struct Flusher_ { ~Flusher_() { flush(); } }io_flusher;
}
using namespace IO;
long long T, C, t[4000000 + 5], l, p;
long long gcd(long long a, long long b) {
	static long long tmp;
	while (b) {
		tmp = a;
		a = b;
		b = tmp % b;
	}
	return a;
}
signed main() {
    qread(T, C);
	l = ceil(log2(C));
	t[0] = (C == 1);
	p = 1ll << l;
	p <<= 1;
	for (long long i = 1; i <= p; ++i)
		t[i] = t[i - 1] + (gcd((C * i) ^ C, C) == 1);
	p >>= 1;
	while (T--) {
		static long long l, r;
        qread(l, r);
		qwrite(ans(r) - ans(l - 1));
        putc_('\n');
	}
	return 0;
}