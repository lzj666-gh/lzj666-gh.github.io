//  OJ: 洛谷
//  提交ID: 218826487
//  题目ID: P10378
#include<bits/stdc++.h>
using namespace std;
struct Edge {
	int v, nxt;
}edge[2000000 + 10];
int head[100000 + 10], idx = 1;
void add(int u, int v) {
	edge[++idx] = { v,head[u] };
	head[u] = idx;
}
int col[100000 + 10], n, m, ans[3];
bool dfs(int x) {
	ans[col[x]]++;
	bool ret = 1;
	for (int i = head[x]; i; i = edge[i].nxt)
		if (!col[edge[i].v])
			col[edge[i].v] = 3 - col[x], ret &= dfs(edge[i].v);
		else if (col[edge[i].v] == col[x])
			ret = 0;
	return ret;
}
signed main() {
	cin.tie(0)->sync_with_stdio(false);
	cin >> n >> m;
	for (int i = 1, u, v; i <= m; ++i) cin >> u >> v, add(u, v), add(v, u);
	bool res = 1; int ret = 0;
	for (int i = 1; i <= n; ++i)
		if (!col[i]) {
			col[i] = 1;
			ans[1] = ans[2] = 0;
			res &= dfs(i);
			ret += min(ans[1], ans[2]);
		}
	if (!res) cout << "Impossible" << endl;
	else cout << ret << ' ' << n - ret << endl;
	return 0;
}