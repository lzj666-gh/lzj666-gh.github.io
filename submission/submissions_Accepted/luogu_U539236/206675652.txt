//  OJ: 洛谷
//  提交ID: 206675652
//  题目ID: U539236
#include<bits/stdc++.h>
#include<unordered_map>
using ull = unsigned long long;
#define Fast_IO
#ifdef Fast_IO
namespace nanan {
#define getchar() (p1 == p2 && (p2 = (p1 = buf) + fread(buf, 1, 1 << 20, stdin), p1 == p2) ? 0 : *p1++)
#define endl '\n'
	char buf[1 << 20], * p1, * p2;
	class IN {
	public:
		friend IN& operator>>(IN& i, ull& x) {
			bool f = 1; x = 0; char ch = getchar();
			while (ch < '0' || ch>'9') { if (ch == '-') f = !f; ch = getchar(); }
			while (ch >= '0' && ch <= '9') { x = (x << 1) + (x << 3) + (ch ^ 48); ch = getchar(); }
			x = (f ? x : -x);
			return i;
		}
	}cin;
}
using namespace nanan;
#endif
const int SIZE = (1 << 20) + 1;
char ibuf[SIZE], * iS, * iT, obuf[SIZE], * oS = obuf, * oT = obuf + SIZE - 1;
char _st[55];
int _qr = 0;
inline void flush() {
	fwrite(obuf, 1, oS - obuf, stdout);
	oS = obuf;
	return;
}
inline void putc_(char _x) {
	*oS++ = _x;
	if (oS == oT) flush();
}
ull n, m, h1[10000001], h2[10000001], h3[10000001], h4[10000001], h5[10000001], l1, r1, l2, r2;
int main() {
	cin >> n >> m;
	for (int i = 1; i <= n; ++i)
		cin >> h1[i],
		h2[i] = h2[i - 1] ^ (h1[i] | 1145141),
		h3[i] = h3[i - 1] ^ h1[i],
		h4[i] = h4[i - 1] ^ (h1[i] - 1),
		h5[i] = h5[i - 1] ^ (h1[i] ^ (h1[i] * 3) ^ (h1[i] / 2 * 7)),
		h1[i] += h1[i - 1];
	while (m--) {
		cin >> l1 >> r1 >> l2 >> r2;
		if (
			h1[r1] - h1[l1 - 1] != h1[r2] - h1[l2 - 1] ||
			(h2[r1] ^ h2[l1 - 1]) != (h2[r2] ^ h2[l2 - 1]) ||
			(h3[r1] ^ h3[l1 - 1]) != (h3[r2] ^ h3[l2 - 1]) ||
			(h4[r1] ^ h4[l1 - 1]) != (h4[r2] ^ h4[l2 - 1]) ||
			(h5[r1] ^ h5[l1 - 1]) != (h5[r2] ^ h5[l2 - 1])
			)
			putc_('N'), putc_('o'), putc_('\n');
		else
			putc_('Y'), putc_('e'), putc_('s'), putc_('\n');
	}
	flush();
	return 0;
}