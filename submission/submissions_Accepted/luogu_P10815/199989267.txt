//  OJ: 洛谷
//  提交ID: 199989267
//  题目ID: P10815
#include<bits/stdc++.h>
#define Fast_IO
#ifdef Fast_IO
namespace nanan {
#define getchar() (p1 == p2 && (p2 = (p1 = buf) + fread(buf, 1, 1 << 20, stdin), p1 == p2) ? 0 : *p1++)
#define endl '\n'
	char buf[1 << 20], * p1, * p2;
	class IN {
	public:
		friend IN& operator>>(IN& i, int& x) {
			bool f = 1; x = 0; char ch = getchar();
			while (ch < '0' || ch>'9') { if (ch == '-') f = !f; ch = getchar(); }
			while (ch >= '0' && ch <= '9') { x = (x << 1) + (x << 3) + (ch ^ 48); ch = getchar(); }
			x = (f ? x : -x);
			return i;
		}
	}cin;
	class OUT {
	public:
		friend OUT& operator<<(OUT& i, int x) {
			if (x < 0) putchar('-'), x = -x;
			if (x > 9) i << (x / 10);
			putchar(x % 10 + '0');
			return i;
		}
		friend OUT& operator<<(OUT& i, const char& x) {
			putchar(x);
			return i;
		}
	}cout;
}
using namespace nanan;
#endif
int main() {
    int a, b, ans = 0;
    cin >> a;
    while (a--) cin >> b, ans += b;
    cout << ans;
}