//  OJ: 洛谷
//  提交ID: 114137342
//  题目ID: P1855
#include <iostream>
#include <vector>
#include <algorithm>
using namespace std;

int main() {
    int N, V, M;
    cin >> N >> V >> M;
    
    vector<vector<int>> dp(V+1, vector<int>(M+1, 0));
    vector<int> v(N+1), m(N+1), w(N+1);
    
    for (int i = 1; i <= N; i++) {
        cin >> v[i] >> m[i] ;
        w[i]=1;
    }
    
    for (int i = 1; i <= N; i++) {
        for (int j = V; j >= v[i]; j--) {
            for (int k = M; k >= m[i]; k--) {
                dp[j][k] = max(dp[j][k], dp[j-v[i]][k-m[i]] + w[i]);
            }
        }
    }
    
    cout << dp[V][M] << endl;
    
    return 0;
}