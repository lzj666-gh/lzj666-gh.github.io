//  OJ: 洛谷
//  提交ID: 168371795
//  题目ID: P1491
#include<bits/stdc++.h>
using namespace std;
struct Edge{
    int v,nxt;double w;
}edge[100000+10];
int head[2000+10],idx;
void add(int u,int v,double w){
	edge[++idx]={v,head[u],w};
	head[u]=idx;
}
struct Node{
	double first;
	int second;
	friend bool operator<(const Node&a,const Node&b){
		return a.first>b.first;
	}
};
int n,m,s;
double dis[2000+10];
vector<int>path[2000+10];
priority_queue<Node>q;
bool vis[100000+10];
void dij(int l,int r){
	memset(dis,127,sizeof dis);
	memset(vis,0,sizeof vis);
	dis[s]=0;
	q.push({0,s});
	if(l==-1&&r==-1){
		path[s].push_back(s);
		while(!q.empty()){
			Node p=q.top();q.pop();
			if(vis[p.second]) continue;
			vis[p.second]=1;
			for(int i=head[p.second];i;i=edge[i].nxt){
				if(dis[edge[i].v]>dis[p.second]+edge[i].w){
					dis[edge[i].v]=dis[p.second]+edge[i].w;
					path[edge[i].v]=path[p.second];
					path[edge[i].v].push_back(edge[i].v);
					q.push({dis[p.second]+edge[i].w,edge[i].v});
				}
			}
		}
	}
	else{
		while(!q.empty()){
			Node p=q.top();q.pop();
			if(vis[p.second]) continue;
			vis[p.second]=1;
			for(int i=head[p.second];i;i=edge[i].nxt){
				if((p.second==l&&edge[i].v==r)||(p.second==r&&edge[i].v==l)) continue;
				if(dis[edge[i].v]>dis[p.second]+edge[i].w){
					dis[edge[i].v]=dis[p.second]+edge[i].w;
					q.push({dis[p.second]+edge[i].w,edge[i].v});
				}
			}
		}
	}	
}
int x[2000+10],y[2000+10];
int main(){
	ios_base::sync_with_stdio(false);
    cin>>n>>m;s=1;
    for(int i=1;i<=n;++i) cin>>x[i]>>y[i];
    for(int i=1;i<=m;++i){
    	int u,v;
    	cin>>u>>v;
    	double w=sqrt((x[u]-x[v])*(x[u]-x[v])+(y[u]-y[v])*(y[u]-y[v]));
    	add(u,v,w);
    	add(v,u,w);
	}
	dij(-1,-1);
	vector<int>fin=path[n];
//	for(int i:fin) cout<<i<<' ';cout<<endl;
	double ans=1e12;
	for(int i=1;i<fin.size();++i){
//		cout<<fin[i-1]<<' '<<fin[i]<<':';
		dij(fin[i-1],fin[i]);
//		cout<<dis[n]<<endl;
		ans=min(ans,dis[n]);
	}
	cout<<fixed<<setprecision(2)<<ans<<endl;
    return 0;
}