//  OJ: 洛谷
//  提交ID: 165335363
//  题目ID: T475114
#include<bits/stdc++.h>
using namespace std;
long long dp[2000000 + 20];
bool f[1000000 + 10];
deque<int>q;
long long n, p[1000000 + 10], d[1000000 + 10], sump[1000000 + 10], sumd[1000000 + 10];
int main() {
	ios_base::sync_with_stdio(false);
	cin >> n;
	for (int i = 1; i <= n; ++i) cin >> p[i] >> d[i];
	for (int i = 1; i <= n; ++i)
		dp[i] = dp[i + n] = p[i] - d[i];
	for (int i = 1; i <= n << 1; ++i)
		dp[i] += dp[i - 1];
	for (int i = n << 1; i >= 1; i--) {
		if (q.size() > 0 && q.front() > i + n - 1) q.pop_front();
		while (q.size() && dp[q.back()] >= dp[i]) q.pop_back();
		q.push_back(i);
		if (i <= n && dp[q.front()] >= dp[i - 1]) f[i] = true;
	}
	q.clear();
	d[0] = d[n];
	for (int i = 1; i <= n; ++i) dp[i] = dp[i + n] = p[i] - d[i - 1];
	for (int i = n << 1; i; --i) dp[i] += dp[i + 1];
	for (int i = 1; i <= n << 1; i++) {
		if (q.size() > 0 && q.front() < i - n + 1) q.pop_front();
		while (q.size() > 0 && dp[q.back()] >= dp[i]) q.pop_back();
		q.push_back(i);
		if (i > n && dp[q.front()] >= dp[i + 1]) f[i - n] = true;
	}
	for (int i = 1; i <= n; ++i) {
		cout << (f[i] ? "TAK\n" : "NIE\n");
	}
	return 0;
}