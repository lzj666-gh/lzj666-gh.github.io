//  OJ: 洛谷
//  提交ID: 217282052
//  题目ID: P3243
#include<bits/stdc++.h>
#define int long long 
using namespace std;
constexpr int N = 100000 + 10, M = 100000 + 10;
struct Edge {
	int v, nxt;
}edge[M];
int head[N], idx;
void add(int u, int v) {
	edge[++idx] = { v,head[u] };
	head[u] = idx;
}
int n, p, r[N];
vector<int>ans;
signed main() {
	cin.tie(0)->sync_with_stdio(false);
	int T;
	cin >> T;
	while (T--) {
		memset(head, 0, sizeof head);
		memset(r, 0, sizeof r); idx = 0;
		ans.clear();
		cin >> n >> p;
		priority_queue<int>q;
		for (int i = 1, u, v; i <= p; ++i) cin >> u >> v, add(v, u), r[u]++;
		for (int i = 1; i <= n; ++i) if (!r[i]) q.push(i);
		while (!q.empty()) {
			int now = q.top(); q.pop();
			ans.push_back(now);
			//cerr << "now: " << now << endl;
			for (int i = head[now]; i; i = edge[i].nxt) {
				if (!--r[edge[i].v]) q.push(edge[i].v);
			}
		}
		if (ans.size() < n) cout << "Impossible!";
		else for (int i = n - 1; i >= 0; --i) cout << ans[i] << ' ';
		cout << endl;
	}
	return 0;
}