//  OJ: 洛谷
//  提交ID: 226580442
//  题目ID: P1006
#include<bits/stdc++.h>
#define int long long
using namespace std;
int a[255][255], m, n;
int dp[2][255][255];
int32_t main() {
	memset(dp, -1, sizeof dp);
	cin.tie(0)->sync_with_stdio(false);
	cin >> m >> n;
	for (int i = 1; i <= m; i++)
		for (int j = 1; j <= n; j++)
			cin >> a[i][j];
	dp[0][1][1] = 0;
	for (int k = 3, cur = 1; k < m + n; ++k, cur ^= 1)
		for (int i = 1; i < n; ++i)
			for (int j = i + 1; j <= n; ++j) {
				dp[cur][i][j] = max(dp[cur][i][j], dp[cur ^ 1][  i  ][  j  ] + a[k - i][i] + a[k - j][j]);
				dp[cur][i][j] = max(dp[cur][i][j], dp[cur ^ 1][  i  ][j - 1] + a[k - i][i] + a[k - j][j]);
				dp[cur][i][j] = max(dp[cur][i][j], dp[cur ^ 1][i - 1][  j  ] + a[k - i][i] + a[k - j][j]);
				dp[cur][i][j] = max(dp[cur][i][j], dp[cur ^ 1][i - 1][j - 1] + a[k - i][i] + a[k - j][j]);
			}
	cout << dp[(m + n - 1) & 1][n - 1][n] << endl;
	return 0;
}