//  OJ: 洛谷
//  提交ID: 182930269
//  题目ID: T528477
#include<bits/stdc++.h>
#define int long long
// #define ONLINE
#pragma warning(disable:4996)
#pragma warning(disable:6031)
using namespace std;
char a[32768], b[32768];
int k, n[9], m[9], idxn[9], idxm[9];
int get(const int* idx,int* tmp) {
	int ans = 0;
	for (int i = 0; i < k; ++i)ans += tmp[i] * idx[i + 1];
	return ans;
}
int tmpa[9], tmpb[9];
bool clac() {
	bool flg = 1;
	if (k == 1) {
		for (tmpb[0] = 0; tmpb[0] < m[0]; ++tmpb[0]) {
			for (int i = 0; i < 1; ++i) tmpa[i] += tmpb[i];
			flg &= a[get(idxn, tmpa)] == b[get(idxm, tmpb)];
			for (int i = 0; i < 1; ++i) tmpa[i] -= tmpb[i];
			if (!flg) return 0;
		}

	}
	else if (k == 2) {
		for (tmpb[0] = 0; tmpb[0] < m[0]; ++tmpb[0])
			for (tmpb[1] = 0; tmpb[1] < m[1]; ++tmpb[1]) {
				for (int i = 0; i < 2; ++i) tmpa[i] += tmpb[i];
				flg &= a[get(idxn, tmpa)] == b[get(idxm, tmpb)];
				for (int i = 0; i < 2; ++i) tmpa[i] -= tmpb[i];
				if (!flg) return 0;
			}
	}
	else if (k == 3) {
		for (tmpb[0] = 0; tmpb[0] < m[0]; ++tmpb[0])
			for (tmpb[1] = 0; tmpb[1] < m[1]; ++tmpb[1])
				for (tmpb[2] = 0; tmpb[2] < m[2]; ++tmpb[2]) {
					for (int i = 0; i < 3; ++i) tmpa[i] += tmpb[i];
					flg &= a[get(idxn, tmpa)] == b[get(idxm, tmpb)];
					for (int i = 0; i < 3; ++i) tmpa[i] -= tmpb[i];
					if (!flg) return 0;
				}
	}
	else if (k == 4) {
		for (tmpb[0] = 0; tmpb[0] < m[0]; ++tmpb[0])
			for (tmpb[1] = 0; tmpb[1] < m[1]; ++tmpb[1])
				for (tmpb[2] = 0; tmpb[2] < m[2]; ++tmpb[2])
					for (tmpb[3] = 0; tmpb[3] < m[3]; ++tmpb[3]) {
						for (int i = 0; i < 4; ++i) tmpa[i] += tmpb[i];
						flg &= a[get(idxn, tmpa)] == b[get(idxm, tmpb)];
						for (int i = 0; i < 4; ++i) tmpa[i] -= tmpb[i];
						if (!flg) return 0;
					}
	}
	else if (k == 5) {
		for (tmpb[0] = 0; tmpb[0] < m[0]; ++tmpb[0])
			for (tmpb[1] = 0; tmpb[1] < m[1]; ++tmpb[1])
				for (tmpb[2] = 0; tmpb[2] < m[2]; ++tmpb[2])
					for (tmpb[3] = 0; tmpb[3] < m[3]; ++tmpb[3])
						for (tmpb[4] = 0; tmpb[4] < m[4]; ++tmpb[4]) {
							for (int i = 0; i < 5; ++i) tmpa[i] += tmpb[i];
							flg &= a[get(idxn, tmpa)] == b[get(idxm, tmpb)];
							for (int i = 0; i < 5; ++i) tmpa[i] -= tmpb[i];
							if (!flg) return 0;
						}
	}
	return flg;
}
int ans;
void dfs(int k) {
	if (k == -1) {
		ans += clac();
		return;
	}
	for (tmpa[k] = 0; tmpa[k] <= n[k] - m[k]; ++tmpa[k])
		dfs(k - 1);
}
signed main(){
#ifdef ONLINE
	freopen("a.in","r",stdin);
	freopen("a.out","w",stdout);
#endif
	ios_base::sync_with_stdio(false);
	cin >> k;
	for (int i = 0; i < k; ++i) cin >> n[i], idxn[i] = n[i];
	idxn[k] = 1;
	for (int i = k - 2; i >= 0; --i) idxn[i] *= idxn[i + 1];
	cin >> a;
	for (int i = 0; i < k; ++i) cin >> m[i], idxm[i] = m[i];
	idxm[k] = 1;
	for (int i = k - 2; i >= 0; --i) idxm[i] *= idxm[i + 1];
	cin >> b;
	dfs(k - 1);
	cout << ans << endl;
	return 0;
}