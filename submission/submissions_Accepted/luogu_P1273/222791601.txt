//  OJ: 洛谷
//  提交ID: 222791601
//  题目ID: P1273
#include<bits/stdc++.h>
#define int long long
using namespace std;
constexpr int N = 3000 + 5;
struct Edge {
	int v, w, nxt;
}edge[N << 1];
int head[N], idx;
void add(int u, int v, int w) {
	edge[++idx] = { v,w,head[u] };
	head[u] = idx;
}
int n, m, val[N], dp[N][N];
int dfs(int x) {
	if (x > n - m) {
		dp[x][1] = val[x];
		return 1;
	}
	int siz = 0;
	for (int i = head[x]; i; i = edge[i].nxt) {
		int v = edge[i].v, s = dfs(v);
		siz += s;
		for (int j = siz; j; --j)
			for (int k = 1; k <= j && k <= s; ++k)
				dp[x][j] = max(dp[x][j], dp[x][j - k] + dp[v][k] - edge[i].w);
	}
	return siz;
}
signed main() {
	cin.tie(0)->sync_with_stdio(false);
	cin >> n >> m;
	for (int i = 1; i <= n; ++i)
		for (int j = 1; j <= n; ++j)
			dp[i][j] = INT_MIN;
	for (int i = 1; i <= n - m; ++i) {
		int k, v, w;
		cin >> k;
		while (k--) cin >> v >> w, add(i, v, w);
	}
	for (int i = n - m + 1; i <= n; ++i) cin >> val[i];
	dfs(1);
	for (int j = m; j; --j)
		if (dp[1][j] >= 0)
			return cout << j << endl, 0;
	return 0;
}