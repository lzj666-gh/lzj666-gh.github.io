//  OJ: 洛谷
//  提交ID: 222700601
//  题目ID: P1352
#include<bits/stdc++.h>
using namespace std;
constexpr int N = 6e3 + 5;
struct Edge {
	int v, nxt;
}edge[N << 1];
int head[N], idx;
void add(int u, int v) {
	edge[++idx] = { v,head[u] };
	head[u] = idx;
}
int dp[N][2], r[N];
void dfs(int x, int fa) { 
	dp[x][0] = 0; dp[x][1] = r[x];
	for (int i = head[x]; i; i = edge[i].nxt)
		if (edge[i].v ^ fa)
			dfs(edge[i].v, x),
			dp[x][0] += max(dp[edge[i].v][1], dp[edge[i].v][0]),
			dp[x][1] += dp[edge[i].v][0];
}
int n;
int main() {
	cin.tie(0)->sync_with_stdio(false);
	cin >> n;
	for (int i = 1; i <= n; ++i) cin >> r[i];
	for (int i = 1, u, v; i < n; ++i) cin >> u >> v, add(u, v), add(v, u);
	dfs(1, 1);
	cout << max(dp[1][0], dp[1][1]) << endl;
	return 0;
}