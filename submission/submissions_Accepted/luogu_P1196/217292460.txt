//  OJ: 洛谷
//  提交ID: 217292460
//  题目ID: P1196
#include<bits/stdc++.h>
#define int long long 
using namespace std;
constexpr int N = 30000 + 10, M = 30000 + 10;
int n;
int fa[N], add[N], siz[N];
int find(int x) {
	if (fa[x] == x)
		return x;
	int t = find(fa[x]);
	add[x] += add[fa[x]];
	return fa[x] = t;
}
void merge(int x, int y) {
	int i = find(x), j = find(y);
	add[i] = siz[j];
	siz[j] += siz[i];
	fa[i] = j;
}
int query(int x, int y){
	if (find(x) != find(y)) return -1;
	return abs(add[x] - add[y]) - 1;
}
signed main() {
	cin.tie(0)->sync_with_stdio(false);
	for (int i = 0; i < N; ++i) fa[i] = i, siz[i] = 1;
	cin >> n;
	while (n--) {
		char opt; int i, j;
		cin >> opt >> i >> j;
		if (opt == 'M')
			merge(i, j);
		else
			cout << query(i, j) << endl;
	}
	return 0;
}