//  OJ: 洛谷
//  提交ID: 179499168
//  题目ID: T519471
#include <bits/stdc++.h>
using namespace std;
#define int long long
#pragma warning(disable:6385)
#pragma warning(disable:6386)
using ll = long long;
int n, k, ans[1000000 + 10];
ll a[1000000 + 10], cur;
int lg[1000000 + 10];
namespace OR {
	ll v[21][1000000 + 10];
	ll query(int l, int r) {
		if (l > r) return 0;
		int t = lg[r - l + 1];
		return v[t][l] | v[t][r - (1ll << t) + 1];
	}
}
namespace AND {
	const ll LZJ = (1ll << 60) - 1;
	ll v[21][1000000 + 10];
	ll query(int l, int r) {
		if (l > r) return LZJ;
		int t = lg[r - l + 1];
		return v[t][l] & v[t][r - (1ll << t) + 1];
	}
}
signed main() {
	cin.tie(0)->sync_with_stdio(false);
	cin >> n >> k; lg[1] = 0;
	for (int i = 2; i <= n; ++i) lg[i] = lg[i >> 1] + 1;
	for (int i = 1; i <= n; ++i) cin >> a[i], OR::v[0][i] = AND::v[0][i] = a[i];
	for (int i = 1; i <= lg[n]; ++i)
		for (int j = 1; j <= n - (1ll << (i - 1)); ++j)
			AND::v[i][j] = AND::v[i - 1][j] & AND::v[i - 1][j + (1ll << (i - 1))],
			OR::v[i][j] = OR::v[i - 1][j] | OR::v[i - 1][j + (1ll << (i - 1))];
	cur = AND::query(1, k + 1) | OR::query(k + 2, n);
	for (int i = 1; i <= k; ++i) ans[i] = 0;
	for (int i = k + 1; i < n; ++i) ans[i] = 1;
	for (int i = n - 1, j = k, r = n; j && i > j; --i)
		if ((((a[i + 1] & (AND::query(1, j) | OR::query(j + 1, i))) | OR::query(i + 2, r)) & cur) == cur) {
			swap(ans[i], ans[j]);
			cur ^= cur & OR::query(i + 2, r);
			j--; r = i;
		}
	for (int i = 1; i < n; ++i)
		if (!ans[i]) cout << i << ' ';
}
/*
10 5
13 11 2 15 5 5 7 6 14 7


34567
*/